
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaARROW ASSIGN COLON COMMA CTECHAR CTEF CTEI CTESTRING DECIMAL DIVIDE ENTERO EQUAL FUNCION GREATER GREATEREQ HASTA ID IMPRIMIR INICIO LBRACE LBRACKET LEER LESS LESSEQ LETRA LPAREN MIENTRAS MINUS NOTEQUAL O PLUS PORCADA PROGRAMA RBRACE RBRACKET REGRESAR RENGLON RPAREN SEMICOLON SI SINO SINREGRESAR TABLA TIMES VARIABLE Y\n  programa : PROGRAMA ID punto_programa COLON inicio\n          | PROGRAMA ID punto_programa COLON dec_var_cycle inicio\n          | PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio\n          | PROGRAMA ID punto_programa COLON dec_func_cycle inicio\n  \n  punto_programa : \n  \n  inicio : INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON\n  \n  punto_update_goto :\n  \n  dec_var_cycle : dec_var dec_var_cycle\n                | empty\n  \n  dec_func_cycle : dec_func\n                | dec_func dec_func_cycle\n  \n  dec_var : simple_var\n          | array\n          | matrix\n  \n  type : ENTERO\n      | DECIMAL\n      | LETRA\n  \n  simple_var : VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON\n  simpleVarCycle : COMMA ID punto_simple_var simpleVarCycle\n                  | empty\n  \n  punto_simple_var :\n  \n  array : RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON\n  arrayCycle : COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle\n              | empty\n  \n  punto_array :\n  \n  matrix : TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON\n  matrixCycle : COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle\n              | empty\n  \n  punto_matrix :\n  \n  dec_func : FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function\n            | FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function\n  \n  punto_global_func_var : \n  \n  punto_end_function :\n  \n    punto_add_func :\n    \n  parameter : type ID punto_add_parameter parameterCycle\n            | empty\n  \n  parameterCycle : COMMA type ID punto_add_parameter parameterCycle\n                  | empty \n  \n  punto_add_parameter :\n  \n  estatutos : estatutosCycle\n            | func_regresar\n  \n\testatutosCycle : estatutos_opciones estatutos\n                | empty\n\t\n  estatutos_opciones : asignar\n                      | llamada_func_void\n                      | ciclo_for\n                      | ciclo_while\n                      | condicion\n                      | imprimir\n                      | leer\n  \n  func_regresar : REGRESAR exp punto_check_types SEMICOLON\n  \n  punto_check_types :\n  \n  asignar : variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON\n  \n  variable : ID variable_aux\n  \n  variable_aux : LBRACKET exp RBRACKET\n              | LBRACKET exp RBRACKET LBRACKET exp RBRACKET\n              | punto_push_id\n  \n  punto_push_id : \n  \n  push_op_igual :\n  \n  check_op_igual :\n  \n  leer : LEER variable SEMICOLON\n  \n  ciclo_while : MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON\n  \n  punto_inicio_while :\n  \n  punto_medio_while :\n  \n  punto_fin_while :\n  \n  ciclo_for : PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON\n  \n  punto_existe_id : \n  \n  punto_valida_int : \n  \n  punto_valida_exp : \n  \n  punto_termina_for : \n  \n  condicion : SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON\n            | SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON\n  \n  punto_si : \n  \n  punto_fin_si :\n  \n  punto_sino :\n  \n  hyper_exp : super_exp hyper_exp_aux\n  \n  hyper_exp_aux : push_op_logicos super_exp check_op_logicos\n                | empty\n  \n  check_op_logicos :\n  \n  push_op_logicos : Y \n        | O \n        | empty\n  \n  super_exp : exp super_exp_aux\n  \n  super_exp_aux : push_op_relacionales exp check_op_relacionales\n                | empty\n  \n  check_op_relacionales :\n  \n  push_op_relacionales : GREATER\n        | LESS \n        | GREATEREQ\n        | LESSEQ\n        | NOTEQUAL\n        | EQUAL\n        | empty\n  \n  exp : term check_op_masmenos exp_aux\n  \n  exp_aux : push_op_exp_masmenos exp\n          | empty\n  \n  push_op_exp_masmenos : PLUS \n        | MINUS \n        | empty\n  \n  check_op_masmenos :\n  \n  term : factor check_op_pordiv term_aux\n  \n  term_aux : push_op_exp_pordiv term \n        | empty\n  \n  check_op_pordiv :\n  \n  push_op_exp_pordiv : TIMES \n        | DIVIDE \n        | empty\n  \n  factor : LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso\n          | factor_constante\n          | llamada_func_return\n          | ID LBRACKET hyper_exp RBRACKET\n          | ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET\n          | ID push_id\n  \n  factor_constante : CTEI push_int\n                | CTEF push_float \n  \n  meter_fondo_falso :\n  \n  quitar_fondo_falso :\n  \n  push_int :\n  \n  push_float :\n  \n  push_id :\n  \n  func_params_aux : COMMA exp punto_check_param func_params_aux\n                  | empty\n  \n  func_params : exp punto_check_param func_params_aux\n              | empty\n  \n  punto_check_param :\n  \n  llamada_func_void : ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON\n  \n  llamada_func_return : ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON\n  \n  punto_func_exists :\n  \n  punto_validate_isvoid :\n  \n  punto_create_era : \n  \n  punto_check_total_params :\n  \n  punto_create_gosub :\n  \n  imprimir : IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON\n  imprimir_aux : exp push_imprimir imprimirCycle\n              | CTESTRING push_imprimir imprimirCycle\n  imprimirCycle : COMMA imprimir_aux\n              | empty\n  \n  push_imprimir :\n  \n  empty : \n  '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,6,20,22,34,111,],[0,-1,-2,-4,-3,-6,]),'ID':([2,10,11,13,14,15,24,26,27,28,29,30,38,39,40,41,47,56,58,59,60,61,62,63,64,65,68,72,75,78,85,86,87,88,89,90,91,92,93,94,96,100,101,107,113,114,115,116,117,118,119,120,121,122,125,127,128,132,134,140,141,142,143,144,145,146,147,148,149,152,154,156,160,161,162,163,164,165,166,167,168,169,170,171,172,176,177,183,186,187,188,189,190,192,193,198,199,201,204,206,207,210,211,215,220,222,234,235,242,244,247,257,269,271,272,274,280,281,289,292,],[3,-139,-9,-12,-13,-14,-8,36,37,-15,-16,-17,44,45,46,-7,67,67,90,-44,-45,-46,-47,-48,-49,-50,98,103,106,108,-100,-104,-116,-109,-110,-120,-118,-119,-59,-128,90,90,90,-18,-139,-139,90,90,-113,-128,-114,-115,90,-129,90,-139,-139,-61,-139,-94,90,-96,-97,-98,-101,90,-103,-105,-106,-130,-130,90,90,-82,-80,-81,-83,90,-85,-87,-88,-89,-90,-91,-92,-139,67,208,-95,-102,-117,-111,90,90,90,-86,-133,90,67,226,-22,-108,90,-53,67,-84,90,67,258,-112,90,-26,-127,-126,67,-71,-62,67,-66,-72,]),'COLON':([3,4,],[-5,5,]),'INICIO':([5,7,8,10,11,12,13,14,15,21,24,25,107,207,238,253,254,257,266,],[9,9,9,-139,-9,-10,-12,-13,-14,9,-8,-11,-18,-22,-33,-33,-31,-26,-30,]),'FUNCION':([5,7,10,11,12,13,14,15,24,107,207,238,253,254,257,266,],[16,16,-139,-9,16,-12,-13,-14,-8,-18,-22,-33,-33,-31,-26,-30,]),'VARIABLE':([5,10,13,14,15,107,134,176,207,257,],[17,17,-12,-13,-14,-18,17,17,-22,-26,]),'RENGLON':([5,10,13,14,15,107,134,176,207,257,],[18,18,-12,-13,-14,-18,18,18,-22,-26,]),'TABLA':([5,10,13,14,15,107,134,176,207,257,],[19,19,-12,-13,-14,-18,19,19,-22,-26,]),'LPAREN':([9,36,37,42,43,48,58,67,69,70,71,85,86,87,88,89,90,91,92,93,94,96,99,100,101,113,114,115,116,117,118,119,120,121,122,125,127,128,140,141,142,143,144,145,146,147,148,149,152,154,156,160,161,162,163,164,165,166,167,168,169,170,171,172,186,187,188,189,190,192,193,198,201,210,211,222,234,244,247,269,],[23,-34,-34,-32,49,73,87,94,-63,100,101,-100,-104,-116,-109,-110,118,-118,-119,-59,-128,87,125,87,87,-139,-139,87,87,-113,-128,-114,-115,87,-129,87,-139,-139,-94,87,-96,-97,-98,-101,87,-103,-105,-106,-130,-130,87,87,-82,-80,-81,-83,87,-85,-87,-88,-89,-90,-91,-92,-95,-102,-117,-111,87,87,87,-86,87,-108,87,-84,87,-112,87,-127,]),'REGRESAR':([10,11,13,14,15,24,41,47,56,59,60,61,62,63,64,65,107,132,134,176,177,199,204,207,215,220,235,257,271,272,274,280,281,289,292,],[-139,-9,-12,-13,-14,-8,-7,58,58,-44,-45,-46,-47,-48,-49,-50,-18,-61,-139,-139,58,-133,58,-22,-53,58,58,-26,-126,58,-71,-62,58,-66,-72,]),'PORCADA':([10,11,13,14,15,24,41,47,56,59,60,61,62,63,64,65,107,132,134,176,177,199,204,207,215,220,235,257,271,272,274,280,281,289,292,],[-139,-9,-12,-13,-14,-8,-7,68,68,-44,-45,-46,-47,-48,-49,-50,-18,-61,-139,-139,68,-133,68,-22,-53,68,68,-26,-126,68,-71,-62,68,-66,-72,]),'MIENTRAS':([10,11,13,14,15,24,41,47,56,59,60,61,62,63,64,65,107,132,134,176,177,199,204,207,215,220,235,257,271,272,274,280,281,289,292,],[-139,-9,-12,-13,-14,-8,-7,69,69,-44,-45,-46,-47,-48,-49,-50,-18,-61,-139,-139,69,-133,69,-22,-53,69,69,-26,-126,69,-71,-62,69,-66,-72,]),'SI':([10,11,13,14,15,24,41,47,56,59,60,61,62,63,64,65,107,132,134,176,177,199,204,207,215,220,235,257,271,272,274,280,281,289,292,],[-139,-9,-12,-13,-14,-8,-7,70,70,-44,-45,-46,-47,-48,-49,-50,-18,-61,-139,-139,70,-133,70,-22,-53,70,70,-26,-126,70,-71,-62,70,-66,-72,]),'IMPRIMIR':([10,11,13,14,15,24,41,47,56,59,60,61,62,63,64,65,107,132,134,176,177,199,204,207,215,220,235,257,271,272,274,280,281,289,292,],[-139,-9,-12,-13,-14,-8,-7,71,71,-44,-45,-46,-47,-48,-49,-50,-18,-61,-139,-139,71,-133,71,-22,-53,71,71,-26,-126,71,-71,-62,71,-66,-72,]),'LEER':([10,11,13,14,15,24,41,47,56,59,60,61,62,63,64,65,107,132,134,176,177,199,204,207,215,220,235,257,271,272,274,280,281,289,292,],[-139,-9,-12,-13,-14,-8,-7,72,72,-44,-45,-46,-47,-48,-49,-50,-18,-61,-139,-139,72,-133,72,-22,-53,72,72,-26,-126,72,-71,-62,72,-66,-72,]),'RBRACE':([10,11,13,14,15,24,41,47,53,54,55,56,57,59,60,61,62,63,64,65,83,107,132,134,139,176,177,199,204,205,207,215,220,224,235,236,251,257,271,272,274,279,280,281,284,289,292,],[-139,-9,-12,-13,-14,-8,-7,-139,82,-40,-41,-139,-43,-44,-45,-46,-47,-48,-49,-50,-42,-18,-61,-139,-51,-139,-139,-133,-139,225,-22,-53,-139,237,-139,252,263,-26,-126,-139,-71,283,-62,-139,287,-66,-72,]),'SINREGRESAR':([16,],[27,]),'ENTERO':([16,17,18,19,49,73,179,],[28,28,28,28,28,28,28,]),'DECIMAL':([16,17,18,19,49,73,179,],[29,29,29,29,29,29,29,]),'LETRA':([16,17,18,19,49,73,179,],[30,30,30,30,30,30,30,]),'RPAREN':([23,49,73,74,76,85,86,88,89,90,91,92,94,104,106,113,114,117,118,119,120,122,126,127,128,129,130,131,135,140,142,145,147,150,152,154,157,159,161,164,166,174,175,178,180,186,187,188,189,190,192,197,198,200,202,203,210,212,213,214,216,221,222,223,226,231,239,244,246,248,255,260,269,270,278,],[35,-139,-139,105,-36,-100,-104,-109,-110,-120,-118,-119,-128,133,-39,-139,-139,-113,-128,-114,-115,-129,158,-139,-139,173,-138,-138,-139,-94,-96,-101,-103,188,-130,-130,195,-76,-78,-83,-85,-139,-139,-35,-38,-95,-102,-117,-111,-139,-139,-79,-86,-134,-137,-135,-108,230,-125,-124,232,-77,-84,-136,-39,-139,-139,-112,-123,-122,-37,-125,-127,-139,-121,]),'ARROW':([28,29,30,31,32,33,],[-15,-16,-17,38,39,40,]),'LBRACE':([35,85,86,88,89,90,91,92,105,113,114,117,119,120,127,128,133,140,142,145,147,158,159,161,164,166,186,187,188,189,195,196,197,198,210,219,221,222,244,250,262,265,269,275,],[41,-100,-104,-109,-110,-120,-118,-119,134,-139,-139,-113,-114,-115,-139,-139,176,-94,-96,-101,-103,-73,-76,-78,-83,-85,-95,-102,-117,-111,-64,220,-79,-86,-108,235,-77,-84,-112,-69,272,-75,-127,281,]),'COMMA':([44,50,85,86,88,89,90,91,92,106,108,109,113,114,117,119,120,130,131,135,136,137,140,142,145,147,174,175,186,187,188,189,209,210,213,226,228,231,239,244,256,260,267,269,270,291,293,],[-21,78,-100,-104,-109,-110,-120,-118,-119,-39,-21,-25,-139,-139,-113,-114,-115,-138,-138,179,78,183,-94,-96,-101,-103,201,201,-95,-102,-117,-111,-29,-108,-125,-39,242,247,179,-112,-25,-125,183,-127,247,-29,242,]),'SEMICOLON':([44,50,77,79,82,84,85,86,88,89,90,91,92,95,97,102,103,108,109,112,113,114,117,119,120,127,128,136,137,140,142,145,147,153,155,159,161,164,166,173,181,182,184,186,187,188,189,191,197,198,209,210,221,222,225,228,230,232,233,237,241,243,244,245,249,252,256,259,261,263,264,267,269,273,276,283,286,287,290,291,293,294,],[-21,-139,107,-20,111,-52,-100,-104,-109,-110,-120,-118,-119,-54,-57,132,-58,-21,-25,139,-139,-139,-113,-114,-115,-139,-139,-139,-139,-94,-96,-101,-103,-60,-55,-76,-78,-83,-85,199,-19,207,-24,-95,-102,-117,-111,215,-79,-86,-29,-108,-77,-84,238,-139,-131,-131,-56,253,257,-28,-112,-132,-132,-74,-25,269,271,-65,274,-139,-127,280,-23,-70,289,-74,292,-29,-139,-27,]),'LBRACKET':([45,46,67,90,103,110,155,189,208,258,282,],[51,52,96,116,96,138,193,211,227,268,285,]),'CTEI':([51,52,58,85,86,87,88,89,90,91,92,93,94,96,100,101,113,114,115,116,117,118,119,120,121,122,125,127,128,138,140,141,142,143,144,145,146,147,148,149,152,154,156,160,161,162,163,164,165,166,167,168,169,170,171,172,186,187,188,189,190,192,193,198,201,210,211,222,227,234,244,247,268,269,285,],[80,81,91,-100,-104,-116,-109,-110,-120,-118,-119,-59,-128,91,91,91,-139,-139,91,91,-113,-128,-114,-115,91,-129,91,-139,-139,185,-94,91,-96,-97,-98,-101,91,-103,-105,-106,-130,-130,91,91,-82,-80,-81,-83,91,-85,-87,-88,-89,-90,-91,-92,-95,-102,-117,-111,91,91,91,-86,91,-108,91,-84,240,91,-112,91,277,-127,288,]),'CTEF':([58,85,86,87,88,89,90,91,92,93,94,96,100,101,113,114,115,116,117,118,119,120,121,122,125,127,128,140,141,142,143,144,145,146,147,148,149,152,154,156,160,161,162,163,164,165,166,167,168,169,170,171,172,186,187,188,189,190,192,193,198,201,210,211,222,234,244,247,269,],[92,-100,-104,-116,-109,-110,-120,-118,-119,-59,-128,92,92,92,-139,-139,92,92,-113,-128,-114,-115,92,-129,92,-139,-139,-94,92,-96,-97,-98,-101,92,-103,-105,-106,-130,-130,92,92,-82,-80,-81,-83,92,-85,-87,-88,-89,-90,-91,-92,-95,-102,-117,-111,92,92,92,-86,92,-108,92,-84,92,-112,92,-127,]),'ASSIGN':([66,67,95,97,98,124,155,233,],[93,-58,-54,-57,-67,156,-55,-56,]),'RBRACKET':([80,81,85,86,88,89,90,91,92,113,114,117,119,120,123,127,128,140,142,145,147,151,159,161,164,166,185,186,187,188,189,197,198,210,217,221,222,229,240,244,269,277,288,],[109,110,-100,-104,-109,-110,-120,-118,-119,-139,-139,-113,-114,-115,155,-139,-139,-94,-96,-101,-103,189,-76,-78,-83,-85,209,-95,-102,-117,-111,-79,-86,-108,233,-77,-84,244,256,-112,-127,282,291,]),'PLUS':([85,86,88,89,90,91,92,113,114,117,119,120,145,147,187,188,189,210,244,269,],[-100,-104,-109,-110,-120,-118,-119,143,-139,-113,-114,-115,-101,-103,-102,-117,-111,-108,-112,-127,]),'MINUS':([85,86,88,89,90,91,92,113,114,117,119,120,145,147,187,188,189,210,244,269,],[-100,-104,-109,-110,-120,-118,-119,144,-139,-113,-114,-115,-101,-103,-102,-117,-111,-108,-112,-127,]),'GREATER':([85,86,88,89,90,91,92,113,114,117,119,120,128,140,142,145,147,186,187,188,189,210,244,269,],[-100,-104,-109,-110,-120,-118,-119,-139,-139,-113,-114,-115,167,-94,-96,-101,-103,-95,-102,-117,-111,-108,-112,-127,]),'LESS':([85,86,88,89,90,91,92,113,114,117,119,120,128,140,142,145,147,186,187,188,189,210,244,269,],[-100,-104,-109,-110,-120,-118,-119,-139,-139,-113,-114,-115,168,-94,-96,-101,-103,-95,-102,-117,-111,-108,-112,-127,]),'GREATEREQ':([85,86,88,89,90,91,92,113,114,117,119,120,128,140,142,145,147,186,187,188,189,210,244,269,],[-100,-104,-109,-110,-120,-118,-119,-139,-139,-113,-114,-115,169,-94,-96,-101,-103,-95,-102,-117,-111,-108,-112,-127,]),'LESSEQ':([85,86,88,89,90,91,92,113,114,117,119,120,128,140,142,145,147,186,187,188,189,210,244,269,],[-100,-104,-109,-110,-120,-118,-119,-139,-139,-113,-114,-115,170,-94,-96,-101,-103,-95,-102,-117,-111,-108,-112,-127,]),'NOTEQUAL':([85,86,88,89,90,91,92,113,114,117,119,120,128,140,142,145,147,186,187,188,189,210,244,269,],[-100,-104,-109,-110,-120,-118,-119,-139,-139,-113,-114,-115,171,-94,-96,-101,-103,-95,-102,-117,-111,-108,-112,-127,]),'EQUAL':([85,86,88,89,90,91,92,113,114,117,119,120,128,140,142,145,147,186,187,188,189,210,244,269,],[-100,-104,-109,-110,-120,-118,-119,-139,-139,-113,-114,-115,172,-94,-96,-101,-103,-95,-102,-117,-111,-108,-112,-127,]),'Y':([85,86,88,89,90,91,92,113,114,117,119,120,127,128,140,142,145,147,164,166,186,187,188,189,198,210,222,244,269,],[-100,-104,-109,-110,-120,-118,-119,-139,-139,-113,-114,-115,162,-139,-94,-96,-101,-103,-83,-85,-95,-102,-117,-111,-86,-108,-84,-112,-127,]),'O':([85,86,88,89,90,91,92,113,114,117,119,120,127,128,140,142,145,147,164,166,186,187,188,189,198,210,222,244,269,],[-100,-104,-109,-110,-120,-118,-119,-139,-139,-113,-114,-115,163,-139,-94,-96,-101,-103,-83,-85,-95,-102,-117,-111,-86,-108,-84,-112,-127,]),'HASTA':([85,86,88,89,90,91,92,113,114,117,119,120,127,128,140,142,145,147,159,161,164,166,186,187,188,189,194,197,198,210,218,221,222,244,269,],[-100,-104,-109,-110,-120,-118,-119,-139,-139,-113,-114,-115,-139,-139,-94,-96,-101,-103,-76,-78,-83,-85,-95,-102,-117,-111,-68,-79,-86,-108,234,-77,-84,-112,-127,]),'TIMES':([86,88,89,90,91,92,114,117,119,120,188,189,210,244,269,],[-104,-109,-110,-120,-118,-119,148,-113,-114,-115,-117,-111,-108,-112,-127,]),'DIVIDE':([86,88,89,90,91,92,114,117,119,120,188,189,210,244,269,],[-104,-109,-110,-120,-118,-119,149,-113,-114,-115,-117,-111,-108,-112,-127,]),'CTESTRING':([101,201,],[131,131,]),'SINO':([252,],[265,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'punto_programa':([3,],[4,]),'inicio':([5,7,8,21,],[6,20,22,34,]),'dec_var_cycle':([5,10,134,176,],[7,24,177,204,]),'dec_func_cycle':([5,7,12,],[8,21,25,]),'dec_var':([5,10,134,176,],[10,10,10,10,]),'empty':([5,10,47,49,50,56,73,113,114,127,128,134,135,136,137,174,175,176,177,190,192,204,220,228,231,235,239,267,270,272,281,293,],[11,11,57,76,79,57,76,142,147,161,166,11,180,79,184,202,202,11,57,214,214,57,57,243,248,57,180,184,248,57,57,243,]),'dec_func':([5,7,12,],[12,12,12,]),'simple_var':([5,10,134,176,],[13,13,13,13,]),'array':([5,10,134,176,],[14,14,14,14,]),'matrix':([5,10,134,176,],[15,15,15,15,]),'type':([16,17,18,19,49,73,179,],[26,31,32,33,75,75,206,]),'punto_add_func':([36,37,],[42,43,]),'punto_update_goto':([41,],[47,]),'punto_global_func_var':([42,],[48,]),'punto_simple_var':([44,108,],[50,136,]),'estatutos':([47,56,177,204,220,235,272,281,],[53,83,205,224,236,251,279,284,]),'estatutosCycle':([47,56,177,204,220,235,272,281,],[54,54,54,54,54,54,54,54,]),'func_regresar':([47,56,177,204,220,235,272,281,],[55,55,55,55,55,55,55,55,]),'estatutos_opciones':([47,56,177,204,220,235,272,281,],[56,56,56,56,56,56,56,56,]),'asignar':([47,56,177,204,220,235,272,281,],[59,59,59,59,59,59,59,59,]),'llamada_func_void':([47,56,177,204,220,235,272,281,],[60,60,60,60,60,60,60,60,]),'ciclo_for':([47,56,177,204,220,235,272,281,],[61,61,61,61,61,61,61,61,]),'ciclo_while':([47,56,177,204,220,235,272,281,],[62,62,62,62,62,62,62,62,]),'condicion':([47,56,177,204,220,235,272,281,],[63,63,63,63,63,63,63,63,]),'imprimir':([47,56,177,204,220,235,272,281,],[64,64,64,64,64,64,64,64,]),'leer':([47,56,177,204,220,235,272,281,],[65,65,65,65,65,65,65,65,]),'variable':([47,56,72,177,204,220,235,272,281,],[66,66,102,66,66,66,66,66,66,]),'parameter':([49,73,],[74,104,]),'simpleVarCycle':([50,136,],[77,181,]),'exp':([58,96,100,101,115,116,121,125,141,156,160,165,190,192,193,201,211,234,247,],[84,123,128,130,128,128,128,128,186,128,128,198,213,213,217,130,128,128,260,]),'term':([58,96,100,101,115,116,121,125,141,146,156,160,165,190,192,193,201,211,234,247,],[85,85,85,85,85,85,85,85,85,187,85,85,85,85,85,85,85,85,85,85,]),'factor':([58,96,100,101,115,116,121,125,141,146,156,160,165,190,192,193,201,211,234,247,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'factor_constante':([58,96,100,101,115,116,121,125,141,146,156,160,165,190,192,193,201,211,234,247,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'llamada_func_return':([58,96,100,101,115,116,121,125,141,146,156,160,165,190,192,193,201,211,234,247,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'variable_aux':([67,103,],[95,95,]),'punto_push_id':([67,103,],[97,97,]),'punto_inicio_while':([69,],[99,]),'punto_check_types':([84,],[112,]),'check_op_masmenos':([85,],[113,]),'check_op_pordiv':([86,],[114,]),'meter_fondo_falso':([87,],[115,]),'push_id':([90,],[117,]),'push_int':([91,],[119,]),'push_float':([92,],[120,]),'push_op_igual':([93,],[121,]),'punto_func_exists':([94,118,],[122,152,]),'punto_existe_id':([98,],[124,]),'hyper_exp':([100,115,116,121,125,156,211,234,],[126,150,151,153,157,194,229,250,]),'super_exp':([100,115,116,121,125,156,160,211,234,],[127,127,127,127,127,127,197,127,127,]),'imprimir_aux':([101,201,],[129,223,]),'punto_add_parameter':([106,226,],[135,239,]),'punto_array':([109,256,],[137,267,]),'exp_aux':([113,],[140,]),'push_op_exp_masmenos':([113,],[141,]),'term_aux':([114,],[145,]),'push_op_exp_pordiv':([114,],[146,]),'punto_validate_isvoid':([122,],[154,]),'hyper_exp_aux':([127,],[159,]),'push_op_logicos':([127,],[160,]),'super_exp_aux':([128,],[164,]),'push_op_relacionales':([128,],[165,]),'push_imprimir':([130,131,],[174,175,]),'parameterCycle':([135,239,],[178,255,]),'arrayCycle':([137,267,],[182,276,]),'punto_create_era':([152,154,],[190,192,]),'check_op_igual':([153,],[191,]),'punto_si':([158,],[196,]),'imprimirCycle':([174,175,],[200,203,]),'quitar_fondo_falso':([188,],[210,]),'func_params':([190,192,],[212,216,]),'punto_valida_int':([194,],[218,]),'punto_medio_while':([195,],[219,]),'check_op_logicos':([197,],[221,]),'check_op_relacionales':([198,],[222,]),'punto_matrix':([209,291,],[228,293,]),'punto_check_param':([213,260,],[231,270,]),'matrixCycle':([228,293,],[241,294,]),'punto_check_total_params':([230,232,],[245,249,]),'func_params_aux':([231,270,],[246,278,]),'punto_end_function':([238,253,],[254,266,]),'punto_create_gosub':([245,249,],[259,261,]),'punto_valida_exp':([250,],[262,]),'punto_fin_si':([252,287,],[264,290,]),'punto_fin_while':([263,],[273,]),'punto_sino':([265,],[275,]),'punto_termina_for':([283,],[286,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID punto_programa COLON inicio','programa',5,'p_programa','parser_frima.py',33),
  ('programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio','programa',6,'p_programa','parser_frima.py',34),
  ('programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio','programa',7,'p_programa','parser_frima.py',35),
  ('programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio','programa',6,'p_programa','parser_frima.py',36),
  ('punto_programa -> <empty>','punto_programa',0,'p_punto_programa','parser_frima.py',43),
  ('inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON','inicio',8,'p_inicio','parser_frima.py',55),
  ('punto_update_goto -> <empty>','punto_update_goto',0,'p_punto_update_goto','parser_frima.py',64),
  ('dec_var_cycle -> dec_var dec_var_cycle','dec_var_cycle',2,'p_dec_var_cycle','parser_frima.py',73),
  ('dec_var_cycle -> empty','dec_var_cycle',1,'p_dec_var_cycle','parser_frima.py',74),
  ('dec_func_cycle -> dec_func','dec_func_cycle',1,'p_dec_func_cycle','parser_frima.py',80),
  ('dec_func_cycle -> dec_func dec_func_cycle','dec_func_cycle',2,'p_dec_func_cycle','parser_frima.py',81),
  ('dec_var -> simple_var','dec_var',1,'p_dec_var','parser_frima.py',87),
  ('dec_var -> array','dec_var',1,'p_dec_var','parser_frima.py',88),
  ('dec_var -> matrix','dec_var',1,'p_dec_var','parser_frima.py',89),
  ('type -> ENTERO','type',1,'p_type','parser_frima.py',97),
  ('type -> DECIMAL','type',1,'p_type','parser_frima.py',98),
  ('type -> LETRA','type',1,'p_type','parser_frima.py',99),
  ('simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON','simple_var',7,'p_simple_var','parser_frima.py',109),
  ('simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle','simpleVarCycle',4,'p_simple_var','parser_frima.py',110),
  ('simpleVarCycle -> empty','simpleVarCycle',1,'p_simple_var','parser_frima.py',111),
  ('punto_simple_var -> <empty>','punto_simple_var',0,'p_punto_simple_var','parser_frima.py',118),
  ('array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON','array',10,'p_array','parser_frima.py',126),
  ('arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle','arrayCycle',7,'p_array','parser_frima.py',127),
  ('arrayCycle -> empty','arrayCycle',1,'p_array','parser_frima.py',128),
  ('punto_array -> <empty>','punto_array',0,'p_punto_array','parser_frima.py',136),
  ('matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON','matrix',13,'p_matrix','parser_frima.py',143),
  ('matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle','matrixCycle',10,'p_matrix','parser_frima.py',144),
  ('matrixCycle -> empty','matrixCycle',1,'p_matrix','parser_frima.py',145),
  ('punto_matrix -> <empty>','punto_matrix',0,'p_punto_matrix','parser_frima.py',153),
  ('dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function','dec_func',14,'p_dec_func','parser_frima.py',160),
  ('dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function','dec_func',13,'p_dec_func','parser_frima.py',161),
  ('punto_global_func_var -> <empty>','punto_global_func_var',0,'p_punto_global_func_var','parser_frima.py',166),
  ('punto_end_function -> <empty>','punto_end_function',0,'p_punto_end_function','parser_frima.py',177),
  ('punto_add_func -> <empty>','punto_add_func',0,'p_punto_add_func','parser_frima.py',193),
  ('parameter -> type ID punto_add_parameter parameterCycle','parameter',4,'p_parameter','parser_frima.py',202),
  ('parameter -> empty','parameter',1,'p_parameter','parser_frima.py',203),
  ('parameterCycle -> COMMA type ID punto_add_parameter parameterCycle','parameterCycle',5,'p_parameterCycle','parser_frima.py',210),
  ('parameterCycle -> empty','parameterCycle',1,'p_parameterCycle','parser_frima.py',211),
  ('punto_add_parameter -> <empty>','punto_add_parameter',0,'p_punto_add_parameter','parser_frima.py',218),
  ('estatutos -> estatutosCycle','estatutos',1,'p_estatutos','parser_frima.py',226),
  ('estatutos -> func_regresar','estatutos',1,'p_estatutos','parser_frima.py',227),
  ('estatutosCycle -> estatutos_opciones estatutos','estatutosCycle',2,'p_estatutosCycle','parser_frima.py',233),
  ('estatutosCycle -> empty','estatutosCycle',1,'p_estatutosCycle','parser_frima.py',234),
  ('estatutos_opciones -> asignar','estatutos_opciones',1,'p_estatutos_opciones','parser_frima.py',240),
  ('estatutos_opciones -> llamada_func_void','estatutos_opciones',1,'p_estatutos_opciones','parser_frima.py',241),
  ('estatutos_opciones -> ciclo_for','estatutos_opciones',1,'p_estatutos_opciones','parser_frima.py',242),
  ('estatutos_opciones -> ciclo_while','estatutos_opciones',1,'p_estatutos_opciones','parser_frima.py',243),
  ('estatutos_opciones -> condicion','estatutos_opciones',1,'p_estatutos_opciones','parser_frima.py',244),
  ('estatutos_opciones -> imprimir','estatutos_opciones',1,'p_estatutos_opciones','parser_frima.py',245),
  ('estatutos_opciones -> leer','estatutos_opciones',1,'p_estatutos_opciones','parser_frima.py',246),
  ('func_regresar -> REGRESAR exp punto_check_types SEMICOLON','func_regresar',4,'p_func_regresar','parser_frima.py',252),
  ('punto_check_types -> <empty>','punto_check_types',0,'p_punto_check_types','parser_frima.py',260),
  ('asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON','asignar',6,'p_asignar','parser_frima.py',278),
  ('variable -> ID variable_aux','variable',2,'p_variable','parser_frima.py',284),
  ('variable_aux -> LBRACKET exp RBRACKET','variable_aux',3,'p_variable_aux','parser_frima.py',291),
  ('variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET','variable_aux',6,'p_variable_aux','parser_frima.py',292),
  ('variable_aux -> punto_push_id','variable_aux',1,'p_variable_aux','parser_frima.py',293),
  ('punto_push_id -> <empty>','punto_push_id',0,'p_punto_push_id','parser_frima.py',299),
  ('push_op_igual -> <empty>','push_op_igual',0,'p_push_op_igual','parser_frima.py',311),
  ('check_op_igual -> <empty>','check_op_igual',0,'p_check_op_igual','parser_frima.py',319),
  ('leer -> LEER variable SEMICOLON','leer',3,'p_leer','parser_frima.py',345),
  ('ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON','ciclo_while',11,'p_ciclo_while','parser_frima.py',351),
  ('punto_inicio_while -> <empty>','punto_inicio_while',0,'p_punto_inicio_while','parser_frima.py',358),
  ('punto_medio_while -> <empty>','punto_medio_while',0,'p_punto_medio_while','parser_frima.py',368),
  ('punto_fin_while -> <empty>','punto_fin_while',0,'p_punto_fin_while','parser_frima.py',383),
  ('ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON','ciclo_for',14,'p_ciclo_for','parser_frima.py',394),
  ('punto_existe_id -> <empty>','punto_existe_id',0,'p_punto_existe_id','parser_frima.py',400),
  ('punto_valida_int -> <empty>','punto_valida_int',0,'p_punto_valida_int','parser_frima.py',410),
  ('punto_valida_exp -> <empty>','punto_valida_exp',0,'p_punto_valida_exp','parser_frima.py',430),
  ('punto_termina_for -> <empty>','punto_termina_for',0,'p_punto_termina_for','parser_frima.py',452),
  ('condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON','condicion',10,'p_condicion','parser_frima.py',467),
  ('condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON','condicion',15,'p_condicion','parser_frima.py',468),
  ('punto_si -> <empty>','punto_si',0,'p_punto_si','parser_frima.py',477),
  ('punto_fin_si -> <empty>','punto_fin_si',0,'p_punto_fin_si','parser_frima.py',492),
  ('punto_sino -> <empty>','punto_sino',0,'p_punto_sino','parser_frima.py',501),
  ('hyper_exp -> super_exp hyper_exp_aux','hyper_exp',2,'p_hyper_exp','parser_frima.py',513),
  ('hyper_exp_aux -> push_op_logicos super_exp check_op_logicos','hyper_exp_aux',3,'p_hyper_exp_aux','parser_frima.py',518),
  ('hyper_exp_aux -> empty','hyper_exp_aux',1,'p_hyper_exp_aux','parser_frima.py',519),
  ('check_op_logicos -> <empty>','check_op_logicos',0,'p_check_op_logicos','parser_frima.py',526),
  ('push_op_logicos -> Y','push_op_logicos',1,'p_push_op_logicos','parser_frima.py',560),
  ('push_op_logicos -> O','push_op_logicos',1,'p_push_op_logicos','parser_frima.py',561),
  ('push_op_logicos -> empty','push_op_logicos',1,'p_push_op_logicos','parser_frima.py',562),
  ('super_exp -> exp super_exp_aux','super_exp',2,'p_super_exp','parser_frima.py',569),
  ('super_exp_aux -> push_op_relacionales exp check_op_relacionales','super_exp_aux',3,'p_super_exp_aux','parser_frima.py',574),
  ('super_exp_aux -> empty','super_exp_aux',1,'p_super_exp_aux','parser_frima.py',575),
  ('check_op_relacionales -> <empty>','check_op_relacionales',0,'p_check_op_relacionales','parser_frima.py',582),
  ('push_op_relacionales -> GREATER','push_op_relacionales',1,'p_push_op_relacionales','parser_frima.py',615),
  ('push_op_relacionales -> LESS','push_op_relacionales',1,'p_push_op_relacionales','parser_frima.py',616),
  ('push_op_relacionales -> GREATEREQ','push_op_relacionales',1,'p_push_op_relacionales','parser_frima.py',617),
  ('push_op_relacionales -> LESSEQ','push_op_relacionales',1,'p_push_op_relacionales','parser_frima.py',618),
  ('push_op_relacionales -> NOTEQUAL','push_op_relacionales',1,'p_push_op_relacionales','parser_frima.py',619),
  ('push_op_relacionales -> EQUAL','push_op_relacionales',1,'p_push_op_relacionales','parser_frima.py',620),
  ('push_op_relacionales -> empty','push_op_relacionales',1,'p_push_op_relacionales','parser_frima.py',621),
  ('exp -> term check_op_masmenos exp_aux','exp',3,'p_exp','parser_frima.py',628),
  ('exp_aux -> push_op_exp_masmenos exp','exp_aux',2,'p_exp_aux','parser_frima.py',633),
  ('exp_aux -> empty','exp_aux',1,'p_exp_aux','parser_frima.py',634),
  ('push_op_exp_masmenos -> PLUS','push_op_exp_masmenos',1,'p_push_op_exp_masmenos','parser_frima.py',640),
  ('push_op_exp_masmenos -> MINUS','push_op_exp_masmenos',1,'p_push_op_exp_masmenos','parser_frima.py',641),
  ('push_op_exp_masmenos -> empty','push_op_exp_masmenos',1,'p_push_op_exp_masmenos','parser_frima.py',642),
  ('check_op_masmenos -> <empty>','check_op_masmenos',0,'p_check_op_masmenos','parser_frima.py',650),
  ('term -> factor check_op_pordiv term_aux','term',3,'p_term','parser_frima.py',680),
  ('term_aux -> push_op_exp_pordiv term','term_aux',2,'p_term_aux','parser_frima.py',686),
  ('term_aux -> empty','term_aux',1,'p_term_aux','parser_frima.py',687),
  ('check_op_pordiv -> <empty>','check_op_pordiv',0,'p_check_op_pordiv','parser_frima.py',694),
  ('push_op_exp_pordiv -> TIMES','push_op_exp_pordiv',1,'p_push_op_exp_pordiv','parser_frima.py',725),
  ('push_op_exp_pordiv -> DIVIDE','push_op_exp_pordiv',1,'p_push_op_exp_pordiv','parser_frima.py',726),
  ('push_op_exp_pordiv -> empty','push_op_exp_pordiv',1,'p_push_op_exp_pordiv','parser_frima.py',727),
  ('factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso','factor',5,'p_factor','parser_frima.py',734),
  ('factor -> factor_constante','factor',1,'p_factor','parser_frima.py',735),
  ('factor -> llamada_func_return','factor',1,'p_factor','parser_frima.py',736),
  ('factor -> ID LBRACKET hyper_exp RBRACKET','factor',4,'p_factor','parser_frima.py',737),
  ('factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET','factor',7,'p_factor','parser_frima.py',738),
  ('factor -> ID push_id','factor',2,'p_factor','parser_frima.py',739),
  ('factor_constante -> CTEI push_int','factor_constante',2,'p_factor_constante','parser_frima.py',746),
  ('factor_constante -> CTEF push_float','factor_constante',2,'p_factor_constante','parser_frima.py',747),
  ('meter_fondo_falso -> <empty>','meter_fondo_falso',0,'p_meter_fondo_falso','parser_frima.py',754),
  ('quitar_fondo_falso -> <empty>','quitar_fondo_falso',0,'p_quitar_fondo_falso','parser_frima.py',761),
  ('push_int -> <empty>','push_int',0,'p_push_int','parser_frima.py',769),
  ('push_float -> <empty>','push_float',0,'p_push_float','parser_frima.py',785),
  ('push_id -> <empty>','push_id',0,'p_push_id','parser_frima.py',800),
  ('func_params_aux -> COMMA exp punto_check_param func_params_aux','func_params_aux',4,'p_func_params_aux','parser_frima.py',816),
  ('func_params_aux -> empty','func_params_aux',1,'p_func_params_aux','parser_frima.py',817),
  ('func_params -> exp punto_check_param func_params_aux','func_params',3,'p_func_params','parser_frima.py',823),
  ('func_params -> empty','func_params',1,'p_func_params','parser_frima.py',824),
  ('punto_check_param -> <empty>','punto_check_param',0,'p_punto_check_param','parser_frima.py',831),
  ('llamada_func_void -> ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON','llamada_func_void',10,'p_llamada_func_void','parser_frima.py',853),
  ('llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON','llamada_func_return',9,'p_llamada_func_return','parser_frima.py',860),
  ('punto_func_exists -> <empty>','punto_func_exists',0,'p_punto_func_exists','parser_frima.py',867),
  ('punto_validate_isvoid -> <empty>','punto_validate_isvoid',0,'p_punto_validate_isvoid','parser_frima.py',879),
  ('punto_create_era -> <empty>','punto_create_era',0,'p_punto_create_era','parser_frima.py',888),
  ('punto_check_total_params -> <empty>','punto_check_total_params',0,'p_punto_check_total_params','parser_frima.py',903),
  ('punto_create_gosub -> <empty>','punto_create_gosub',0,'p_punto_create_gosub','parser_frima.py',915),
  ('imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON','imprimir',5,'p_imprimir','parser_frima.py',932),
  ('imprimir_aux -> exp push_imprimir imprimirCycle','imprimir_aux',3,'p_imprimir','parser_frima.py',933),
  ('imprimir_aux -> CTESTRING push_imprimir imprimirCycle','imprimir_aux',3,'p_imprimir','parser_frima.py',934),
  ('imprimirCycle -> COMMA imprimir_aux','imprimirCycle',2,'p_imprimir','parser_frima.py',935),
  ('imprimirCycle -> empty','imprimirCycle',1,'p_imprimir','parser_frima.py',936),
  ('push_imprimir -> <empty>','push_imprimir',0,'p_push_imprimir','parser_frima.py',945),
  ('empty -> <empty>','empty',0,'p_empty','parser_frima.py',964),
]
