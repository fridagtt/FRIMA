
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaARROW ASSIGN COLON COMMA CTECHAR CTEF CTEI CTESTRING DECIMAL DIVIDE EN ENTERO EQUAL FUNCION GREATER GREATEREQ ID IMPRIMIR INICIO LBRACE LBRACKET LEER LESS LESSEQ LETRA LPAREN MIENTRAS MINUS NOTEQUAL PLUS PORCADA PROGRAMA RBRACE RBRACKET REGRESAR RENGLON RPAREN SEMICOLON SI SINO SINREGRESAR TABLA TIMES VARIABLE o y\n  programa : PROGRAMA ID punto_programa COLON inicio\n          | PROGRAMA ID punto_programa COLON dec_var_cycle inicio\n          | PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio\n          | PROGRAMA ID punto_programa COLON dec_func_cycle inicio\n  \n  dec_var_cycle : dec_var dec_var_cycle\n                | empty\n  \n  dec_func_cycle : dec_func dec_func_cycle\n                | empty\n  \n  punto_programa : \n  \n  inicio : INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON\n  \n  dec_var : simple_var\n          | array\n          | matrix\n  \n  simple_var : VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON\n  simpleVarCycle : COMMA ID punto_simple_var simpleVarCycle\n                  | empty\n  \n  punto_simple_var :\n  \n  type : ENTERO\n      | DECIMAL\n      | LETRA\n  \n  array : RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON\n  arrayCycle : COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle\n              | empty\n  \n  punto_array :\n  \n  matrix : TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON\n  matrixCycle : COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle\n              | empty\n  \n  punto_matrix :\n  \n  dec_func : FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON\n  decFuncCycle : estatutos decFuncCycle\n              | empty \n  \n  dec_func_regresar : REGRESAR variable SEMICOLON\n                    | empty\n  \n  dec_func_type : type\n                | SINREGRESAR\n  \n    punto_add_func :\n    \n  parameter : type ID punto_parameter parameterCycle\n            | empty\n  parameterCycle : COMMA type ID punto_parameter parameterCycle\n                  | empty \n  \n  punto_parameter :\n  \n  estatutos : asignar\n          | llamada_func\n          | ciclo_for\n          | ciclo_while\n          | condicion\n          | escribe\n          | leer\n          | empty\n  \n  asignar : variable ASSIGN exp SEMICOLON\n  \n  variable : ID variable_aux\n  variable_aux : LBRACKET exp RBRACKET\n              | LBRACKET exp RBRACKET LBRACKET exp RBRACKET\n              | empty\n  \n  leer : LEER variable SEMICOLON\n  \n  ciclo_while : MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON\n  whileCycle : estatutos whileCycle\n              | empty\n  \n  ciclo_for : PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON\n  forCycle : estatutos forCycle\n          | empty\n  \n  condicion : SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON\n  condicionCycle : estatutos condicionCycle\n              | empty\n  sinoCondicion : SINO LBRACE estatutos condicionCycle RBRACE\n              | empty\n  \n  exp : term expT\n  expT : PLUS exp\n        | MINUS exp\n        | empty\n  \n  term : factor termT\n  termT : TIMES term\n          | DIVIDE term\n          | empty\n  \n  factor : factor_constante\n          | factor_variable\n          | factor_expresion\n  factor_constante : CTEI\n                  | CTEF\n  factor_variable : ID\n                  | ID LBRACKET exp RBRACKET\n                  | ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET\n                  | ID llamada_func\n  factor_expresion : LPAREN exp RPAREN\n  \n  llamada_func : ID LPAREN llamadaCYCLE RPAREN SEMICOLON\n  llamadaCYCLE : exp llamadaCYCLE_aux\n              | empty\n  llamadaCYCLE_aux : COMMA exp llamadaCYCLE_aux\n                  | empty\n  \n  escribe : IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON\n  escribe_aux : exp escribeCycle\n              | CTESTRING escribeCycle\n  escribeCycle : COMMA escribe_aux\n              | empty\n  \n  empty : \n  '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,6,20,23,37,97,],[0,-1,-2,-4,-3,-10,]),'ID':([2,10,13,14,15,25,26,28,29,30,31,32,33,40,41,42,43,49,50,51,52,53,54,55,56,59,63,69,70,72,82,83,84,85,86,90,93,103,105,106,109,110,113,121,124,128,131,145,148,153,155,156,158,159,160,162,168,173,174,175,176,177,178,179,183,185,187,189,190,192,193,195,208,213,215,216,224,226,227,232,],[3,-95,-11,-12,-13,-5,-6,39,-34,-35,-18,-19,-20,45,46,47,58,-42,-43,-44,-45,-46,-47,-48,-49,82,88,82,82,82,112,82,82,82,82,123,125,82,82,82,82,82,82,-55,-14,-50,82,82,-95,-85,82,58,58,58,-90,58,180,58,82,58,58,58,196,-21,58,-49,58,-49,58,-49,58,-49,88,225,-59,-56,-25,-62,58,58,]),'COLON':([3,4,],[-9,5,]),'INICIO':([5,7,8,10,11,12,13,14,15,21,22,25,26,27,124,179,224,228,],[9,9,9,-95,-6,-95,-11,-12,-13,9,-8,-5,-6,-7,-14,-21,-25,-29,]),'FUNCION':([5,7,10,11,12,13,14,15,25,26,124,179,224,228,],[16,16,-95,-6,16,-11,-12,-13,-5,-6,-14,-21,-25,-29,]),'VARIABLE':([5,10,13,14,15,124,148,179,224,],[17,17,-11,-12,-13,-14,17,-21,-25,]),'RENGLON':([5,10,13,14,15,124,148,179,224,],[18,18,-11,-12,-13,-14,18,-21,-25,]),'TABLA':([5,10,13,14,15,124,148,179,224,],[19,19,-11,-12,-13,-14,19,-21,-25,]),'LPAREN':([9,39,44,58,59,60,61,62,69,70,72,83,84,85,86,103,105,106,109,110,112,113,131,145,155,174,],[24,-36,64,70,83,84,85,86,83,83,83,83,83,83,83,83,83,83,83,83,70,83,83,83,83,83,]),'PORCADA':([10,13,14,15,25,26,43,49,50,51,52,53,54,55,56,121,124,128,148,153,156,158,159,160,162,173,175,176,177,179,183,185,187,189,190,192,193,195,215,216,224,226,227,232,],[-95,-11,-12,-13,-5,-6,59,-42,-43,-44,-45,-46,-47,-48,-49,-55,-14,-50,-95,-85,59,59,59,-90,59,59,59,59,59,-21,59,-49,59,-49,59,-49,59,-49,-59,-56,-25,-62,59,59,]),'MIENTRAS':([10,13,14,15,25,26,43,49,50,51,52,53,54,55,56,121,124,128,148,153,156,158,159,160,162,173,175,176,177,179,183,185,187,189,190,192,193,195,215,216,224,226,227,232,],[-95,-11,-12,-13,-5,-6,60,-42,-43,-44,-45,-46,-47,-48,-49,-55,-14,-50,-95,-85,60,60,60,-90,60,60,60,60,60,-21,60,-49,60,-49,60,-49,60,-49,-59,-56,-25,-62,60,60,]),'SI':([10,13,14,15,25,26,43,49,50,51,52,53,54,55,56,121,124,128,148,153,156,158,159,160,162,173,175,176,177,179,183,185,187,189,190,192,193,195,215,216,224,226,227,232,],[-95,-11,-12,-13,-5,-6,61,-42,-43,-44,-45,-46,-47,-48,-49,-55,-14,-50,-95,-85,61,61,61,-90,61,61,61,61,61,-21,61,-49,61,-49,61,-49,61,-49,-59,-56,-25,-62,61,61,]),'IMPRIMIR':([10,13,14,15,25,26,43,49,50,51,52,53,54,55,56,121,124,128,148,153,156,158,159,160,162,173,175,176,177,179,183,185,187,189,190,192,193,195,215,216,224,226,227,232,],[-95,-11,-12,-13,-5,-6,62,-42,-43,-44,-45,-46,-47,-48,-49,-55,-14,-50,-95,-85,62,62,62,-90,62,62,62,62,62,-21,62,-49,62,-49,62,-49,62,-49,-59,-56,-25,-62,62,62,]),'LEER':([10,13,14,15,25,26,43,49,50,51,52,53,54,55,56,121,124,128,148,153,156,158,159,160,162,173,175,176,177,179,183,185,187,189,190,192,193,195,215,216,224,226,227,232,],[-95,-11,-12,-13,-5,-6,63,-42,-43,-44,-45,-46,-47,-48,-49,-55,-14,-50,-95,-85,63,63,63,-90,63,63,63,63,63,-21,63,-49,63,-49,63,-49,63,-49,-59,-56,-25,-62,63,63,]),'REGRESAR':([10,13,14,15,25,26,49,50,51,52,53,54,55,56,121,124,128,148,153,160,162,177,179,193,194,195,206,215,216,224,226,],[-95,-11,-12,-13,-5,-6,-42,-43,-44,-45,-46,-47,-48,-49,-55,-14,-50,-95,-85,-90,-95,-95,-21,-95,208,-31,-30,-59,-56,-25,-62,]),'RBRACE':([10,13,14,15,25,26,43,48,49,50,51,52,53,54,55,56,121,124,128,148,153,156,158,159,160,162,173,175,176,177,179,183,184,185,187,188,189,190,191,192,193,194,195,199,202,204,206,207,209,215,216,224,226,227,229,232,235,],[-95,-11,-12,-13,-5,-6,-95,68,-42,-43,-44,-45,-46,-47,-48,-49,-55,-14,-50,-95,-85,-95,-95,-95,-90,-95,-95,-95,-95,-95,-21,-95,200,-49,-95,203,-49,-95,205,-49,-95,-95,-31,-60,-57,-63,-30,220,-33,-59,-56,-25,-62,-95,-32,-95,237,]),'SINREGRESAR':([16,],[30,]),'ENTERO':([16,17,18,19,64,164,],[31,31,31,31,31,31,]),'DECIMAL':([16,17,18,19,64,164,],[32,32,32,32,32,32,]),'LETRA':([16,17,18,19,64,164,],[33,33,33,33,33,33,]),'RPAREN':([24,64,70,75,76,77,78,79,80,81,82,89,91,99,100,101,104,107,108,111,114,115,116,117,118,119,120,123,130,132,135,136,137,138,140,144,146,147,149,153,154,157,161,163,165,171,196,201,210,222,],[38,-95,-95,-95,-95,-75,-76,-77,-78,-79,-80,122,-38,129,-95,-87,-67,-70,-71,-74,-83,140,141,142,143,-95,-95,-41,-86,-89,-68,-69,-72,-73,-84,-91,-94,-92,-95,-85,-95,-81,-93,-37,-40,-88,-41,-82,-95,-39,]),'ARROW':([31,32,33,34,35,36,],[-18,-19,-20,40,41,42,]),'LBRACE':([38,75,76,77,78,79,80,81,82,104,107,108,111,114,122,134,135,136,137,138,140,141,142,153,157,201,218,],[43,-95,-95,-75,-76,-77,-78,-79,-80,-67,-70,-71,-74,-83,148,156,-68,-69,-72,-73,-84,158,159,-85,-81,-82,227,]),'COMMA':([45,65,75,76,77,78,79,80,81,82,100,104,107,108,111,114,119,120,123,125,126,135,136,137,138,140,149,150,151,153,154,157,181,196,198,201,210,223,230,240,241,],[-17,93,-95,-95,-75,-76,-77,-78,-79,-80,131,-67,-70,-71,-74,-83,145,145,-41,-17,-24,-68,-69,-72,-73,-84,164,93,168,-85,131,-81,-28,-41,213,-82,164,-24,168,-28,213,]),'SEMICOLON':([45,65,68,71,73,75,76,77,78,79,80,81,82,87,88,92,94,98,104,107,108,111,114,125,126,129,133,135,136,137,138,140,143,150,151,153,157,166,167,169,181,182,198,200,201,203,205,212,214,217,219,220,221,223,230,233,237,240,241,242,],[-17,-95,97,-51,-54,-95,-95,-75,-76,-77,-78,-79,-80,121,-95,124,-16,128,-67,-70,-71,-74,-83,-17,-24,153,-52,-68,-69,-72,-73,-84,160,-95,-95,-85,-81,-15,179,-23,-28,-53,-95,215,-82,216,-95,224,-27,226,-66,228,229,-24,-95,-22,-65,-28,-95,-26,]),'LBRACKET':([46,47,58,82,88,127,133,157,180,225,236,],[66,67,72,113,72,152,155,174,197,231,238,]),'ASSIGN':([57,58,71,73,133,182,],[69,-95,-51,-54,-52,-53,]),'CTEI':([59,66,67,69,70,72,83,84,85,86,103,105,106,109,110,113,131,145,152,155,174,197,231,238,],[80,95,96,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,170,80,80,211,234,239,]),'CTEF':([59,69,70,72,83,84,85,86,103,105,106,109,110,113,131,145,155,174,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'EN':([74,75,76,77,78,79,80,81,82,104,107,108,111,114,135,136,137,138,140,153,157,201,],[103,-95,-95,-75,-76,-77,-78,-79,-80,-67,-70,-71,-74,-83,-68,-69,-72,-73,-84,-85,-81,-82,]),'PLUS':([75,76,77,78,79,80,81,82,108,111,114,137,138,140,153,157,201,],[105,-95,-75,-76,-77,-78,-79,-80,-71,-74,-83,-72,-73,-84,-85,-81,-82,]),'MINUS':([75,76,77,78,79,80,81,82,108,111,114,137,138,140,153,157,201,],[106,-95,-75,-76,-77,-78,-79,-80,-71,-74,-83,-72,-73,-84,-85,-81,-82,]),'RBRACKET':([75,76,77,78,79,80,81,82,95,96,102,104,107,108,111,114,135,136,137,138,139,140,153,157,170,172,186,201,211,234,239,],[-95,-95,-75,-76,-77,-78,-79,-80,126,127,133,-67,-70,-71,-74,-83,-68,-69,-72,-73,157,-84,-85,-81,181,182,201,-82,223,236,240,]),'TIMES':([76,77,78,79,80,81,82,114,140,153,157,201,],[109,-75,-76,-77,-78,-79,-80,-83,-84,-85,-81,-82,]),'DIVIDE':([76,77,78,79,80,81,82,114,140,153,157,201,],[110,-75,-76,-77,-78,-79,-80,-83,-84,-85,-81,-82,]),'CTESTRING':([86,145,],[120,120,]),'SINO':([205,],[218,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'punto_programa':([3,],[4,]),'inicio':([5,7,8,21,],[6,20,23,37,]),'dec_var_cycle':([5,10,148,],[7,25,162,]),'dec_func_cycle':([5,7,12,],[8,21,27,]),'dec_var':([5,10,148,],[10,10,10,]),'empty':([5,7,10,12,43,58,64,65,70,75,76,88,100,119,120,148,149,150,151,154,156,158,159,162,173,175,176,177,183,187,190,193,194,198,205,210,227,230,232,241,],[11,22,26,22,56,73,91,94,101,107,111,73,132,146,146,26,165,94,169,132,56,56,56,56,185,189,192,195,185,189,192,195,209,214,219,165,56,169,192,214,]),'dec_func':([5,7,12,],[12,12,12,]),'simple_var':([5,10,148,],[13,13,13,]),'array':([5,10,148,],[14,14,14,]),'matrix':([5,10,148,],[15,15,15,]),'dec_func_type':([16,],[28,]),'type':([16,17,18,19,64,164,],[29,34,35,36,90,178,]),'punto_add_func':([39,],[44,]),'estatutos':([43,156,158,159,162,173,175,176,177,183,187,190,193,227,232,],[48,173,175,176,177,183,187,190,193,183,187,190,193,232,190,]),'asignar':([43,156,158,159,162,173,175,176,177,183,187,190,193,227,232,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'llamada_func':([43,82,156,158,159,162,173,175,176,177,183,187,190,193,227,232,],[50,114,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'ciclo_for':([43,156,158,159,162,173,175,176,177,183,187,190,193,227,232,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'ciclo_while':([43,156,158,159,162,173,175,176,177,183,187,190,193,227,232,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'condicion':([43,156,158,159,162,173,175,176,177,183,187,190,193,227,232,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'escribe':([43,156,158,159,162,173,175,176,177,183,187,190,193,227,232,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'leer':([43,156,158,159,162,173,175,176,177,183,187,190,193,227,232,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'variable':([43,63,156,158,159,162,173,175,176,177,183,187,190,193,208,227,232,],[57,87,57,57,57,57,57,57,57,57,57,57,57,57,221,57,57,]),'punto_simple_var':([45,125,],[65,150,]),'variable_aux':([58,88,],[71,71,]),'exp':([59,69,70,72,83,84,85,86,103,105,106,113,131,145,155,174,],[74,98,100,102,115,116,117,119,134,135,136,139,154,119,172,186,]),'term':([59,69,70,72,83,84,85,86,103,105,106,109,110,113,131,145,155,174,],[75,75,75,75,75,75,75,75,75,75,75,137,138,75,75,75,75,75,]),'factor':([59,69,70,72,83,84,85,86,103,105,106,109,110,113,131,145,155,174,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'factor_constante':([59,69,70,72,83,84,85,86,103,105,106,109,110,113,131,145,155,174,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'factor_variable':([59,69,70,72,83,84,85,86,103,105,106,109,110,113,131,145,155,174,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'factor_expresion':([59,69,70,72,83,84,85,86,103,105,106,109,110,113,131,145,155,174,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'parameter':([64,],[89,]),'simpleVarCycle':([65,150,],[92,166,]),'llamadaCYCLE':([70,],[99,]),'expT':([75,],[104,]),'termT':([76,],[108,]),'escribe_aux':([86,145,],[118,161,]),'llamadaCYCLE_aux':([100,154,],[130,171,]),'escribeCycle':([119,120,],[144,147,]),'punto_parameter':([123,196,],[149,210,]),'punto_array':([126,223,],[151,230,]),'parameterCycle':([149,210,],[163,222,]),'arrayCycle':([151,230,],[167,233,]),'forCycle':([173,183,],[184,199,]),'whileCycle':([175,187,],[188,202,]),'condicionCycle':([176,190,232,],[191,204,235,]),'decFuncCycle':([177,193,],[194,206,]),'punto_matrix':([181,240,],[198,241,]),'dec_func_regresar':([194,],[207,]),'matrixCycle':([198,241,],[212,242,]),'sinoCondicion':([205,],[217,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID punto_programa COLON inicio','programa',5,'p_programa','lexer_parser.py',154),
  ('programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio','programa',6,'p_programa','lexer_parser.py',155),
  ('programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio','programa',7,'p_programa','lexer_parser.py',156),
  ('programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio','programa',6,'p_programa','lexer_parser.py',157),
  ('dec_var_cycle -> dec_var dec_var_cycle','dec_var_cycle',2,'p_dec_var_cycle','lexer_parser.py',163),
  ('dec_var_cycle -> empty','dec_var_cycle',1,'p_dec_var_cycle','lexer_parser.py',164),
  ('dec_func_cycle -> dec_func dec_func_cycle','dec_func_cycle',2,'p_dec_func_cycle','lexer_parser.py',169),
  ('dec_func_cycle -> empty','dec_func_cycle',1,'p_dec_func_cycle','lexer_parser.py',170),
  ('punto_programa -> <empty>','punto_programa',0,'p_punto_programa','lexer_parser.py',175),
  ('inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON','inicio',7,'p_inicio','lexer_parser.py',184),
  ('dec_var -> simple_var','dec_var',1,'p_dec_var','lexer_parser.py',191),
  ('dec_var -> array','dec_var',1,'p_dec_var','lexer_parser.py',192),
  ('dec_var -> matrix','dec_var',1,'p_dec_var','lexer_parser.py',193),
  ('simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON','simple_var',7,'p_simple_var','lexer_parser.py',199),
  ('simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle','simpleVarCycle',4,'p_simple_var','lexer_parser.py',200),
  ('simpleVarCycle -> empty','simpleVarCycle',1,'p_simple_var','lexer_parser.py',201),
  ('punto_simple_var -> <empty>','punto_simple_var',0,'p_punto_simple_var','lexer_parser.py',207),
  ('type -> ENTERO','type',1,'p_type','lexer_parser.py',213),
  ('type -> DECIMAL','type',1,'p_type','lexer_parser.py',214),
  ('type -> LETRA','type',1,'p_type','lexer_parser.py',215),
  ('array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON','array',10,'p_array','lexer_parser.py',224),
  ('arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle','arrayCycle',7,'p_array','lexer_parser.py',225),
  ('arrayCycle -> empty','arrayCycle',1,'p_array','lexer_parser.py',226),
  ('punto_array -> <empty>','punto_array',0,'p_punto_array','lexer_parser.py',232),
  ('matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON','matrix',13,'p_matrix','lexer_parser.py',238),
  ('matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle','matrixCycle',10,'p_matrix','lexer_parser.py',239),
  ('matrixCycle -> empty','matrixCycle',1,'p_matrix','lexer_parser.py',240),
  ('punto_matrix -> <empty>','punto_matrix',0,'p_punto_matrix','lexer_parser.py',246),
  ('dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON','dec_func',14,'p_dec_func','lexer_parser.py',252),
  ('decFuncCycle -> estatutos decFuncCycle','decFuncCycle',2,'p_dec_func','lexer_parser.py',253),
  ('decFuncCycle -> empty','decFuncCycle',1,'p_dec_func','lexer_parser.py',254),
  ('dec_func_regresar -> REGRESAR variable SEMICOLON','dec_func_regresar',3,'p_dec_func_regresar','lexer_parser.py',258),
  ('dec_func_regresar -> empty','dec_func_regresar',1,'p_dec_func_regresar','lexer_parser.py',259),
  ('dec_func_type -> type','dec_func_type',1,'p_dec_func_type','lexer_parser.py',265),
  ('dec_func_type -> SINREGRESAR','dec_func_type',1,'p_dec_func_type','lexer_parser.py',266),
  ('punto_add_func -> <empty>','punto_add_func',0,'p_punto_add_func','lexer_parser.py',272),
  ('parameter -> type ID punto_parameter parameterCycle','parameter',4,'p_parameter','lexer_parser.py',280),
  ('parameter -> empty','parameter',1,'p_parameter','lexer_parser.py',281),
  ('parameterCycle -> COMMA type ID punto_parameter parameterCycle','parameterCycle',5,'p_parameter','lexer_parser.py',282),
  ('parameterCycle -> empty','parameterCycle',1,'p_parameter','lexer_parser.py',283),
  ('punto_parameter -> <empty>','punto_parameter',0,'p_punto_parameter','lexer_parser.py',289),
  ('estatutos -> asignar','estatutos',1,'p_estatutos','lexer_parser.py',295),
  ('estatutos -> llamada_func','estatutos',1,'p_estatutos','lexer_parser.py',296),
  ('estatutos -> ciclo_for','estatutos',1,'p_estatutos','lexer_parser.py',297),
  ('estatutos -> ciclo_while','estatutos',1,'p_estatutos','lexer_parser.py',298),
  ('estatutos -> condicion','estatutos',1,'p_estatutos','lexer_parser.py',299),
  ('estatutos -> escribe','estatutos',1,'p_estatutos','lexer_parser.py',300),
  ('estatutos -> leer','estatutos',1,'p_estatutos','lexer_parser.py',301),
  ('estatutos -> empty','estatutos',1,'p_estatutos','lexer_parser.py',302),
  ('asignar -> variable ASSIGN exp SEMICOLON','asignar',4,'p_asignar','lexer_parser.py',308),
  ('variable -> ID variable_aux','variable',2,'p_variable','lexer_parser.py',314),
  ('variable_aux -> LBRACKET exp RBRACKET','variable_aux',3,'p_variable','lexer_parser.py',315),
  ('variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET','variable_aux',6,'p_variable','lexer_parser.py',316),
  ('variable_aux -> empty','variable_aux',1,'p_variable','lexer_parser.py',317),
  ('leer -> LEER variable SEMICOLON','leer',3,'p_leer','lexer_parser.py',323),
  ('ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON','ciclo_while',9,'p_ciclo_while','lexer_parser.py',329),
  ('whileCycle -> estatutos whileCycle','whileCycle',2,'p_ciclo_while','lexer_parser.py',330),
  ('whileCycle -> empty','whileCycle',1,'p_ciclo_while','lexer_parser.py',331),
  ('ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON','ciclo_for',9,'p_ciclo_for','lexer_parser.py',337),
  ('forCycle -> estatutos forCycle','forCycle',2,'p_ciclo_for','lexer_parser.py',338),
  ('forCycle -> empty','forCycle',1,'p_ciclo_for','lexer_parser.py',339),
  ('condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON','condicion',10,'p_condicion','lexer_parser.py',345),
  ('condicionCycle -> estatutos condicionCycle','condicionCycle',2,'p_condicion','lexer_parser.py',346),
  ('condicionCycle -> empty','condicionCycle',1,'p_condicion','lexer_parser.py',347),
  ('sinoCondicion -> SINO LBRACE estatutos condicionCycle RBRACE','sinoCondicion',5,'p_condicion','lexer_parser.py',348),
  ('sinoCondicion -> empty','sinoCondicion',1,'p_condicion','lexer_parser.py',349),
  ('exp -> term expT','exp',2,'p_exp','lexer_parser.py',355),
  ('expT -> PLUS exp','expT',2,'p_exp','lexer_parser.py',356),
  ('expT -> MINUS exp','expT',2,'p_exp','lexer_parser.py',357),
  ('expT -> empty','expT',1,'p_exp','lexer_parser.py',358),
  ('term -> factor termT','term',2,'p_term','lexer_parser.py',364),
  ('termT -> TIMES term','termT',2,'p_term','lexer_parser.py',365),
  ('termT -> DIVIDE term','termT',2,'p_term','lexer_parser.py',366),
  ('termT -> empty','termT',1,'p_term','lexer_parser.py',367),
  ('factor -> factor_constante','factor',1,'p_factor','lexer_parser.py',373),
  ('factor -> factor_variable','factor',1,'p_factor','lexer_parser.py',374),
  ('factor -> factor_expresion','factor',1,'p_factor','lexer_parser.py',375),
  ('factor_constante -> CTEI','factor_constante',1,'p_factor','lexer_parser.py',376),
  ('factor_constante -> CTEF','factor_constante',1,'p_factor','lexer_parser.py',377),
  ('factor_variable -> ID','factor_variable',1,'p_factor','lexer_parser.py',378),
  ('factor_variable -> ID LBRACKET exp RBRACKET','factor_variable',4,'p_factor','lexer_parser.py',379),
  ('factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET','factor_variable',7,'p_factor','lexer_parser.py',380),
  ('factor_variable -> ID llamada_func','factor_variable',2,'p_factor','lexer_parser.py',381),
  ('factor_expresion -> LPAREN exp RPAREN','factor_expresion',3,'p_factor','lexer_parser.py',382),
  ('llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON','llamada_func',5,'p_llamada_func','lexer_parser.py',388),
  ('llamadaCYCLE -> exp llamadaCYCLE_aux','llamadaCYCLE',2,'p_llamada_func','lexer_parser.py',389),
  ('llamadaCYCLE -> empty','llamadaCYCLE',1,'p_llamada_func','lexer_parser.py',390),
  ('llamadaCYCLE_aux -> COMMA exp llamadaCYCLE_aux','llamadaCYCLE_aux',3,'p_llamada_func','lexer_parser.py',391),
  ('llamadaCYCLE_aux -> empty','llamadaCYCLE_aux',1,'p_llamada_func','lexer_parser.py',392),
  ('escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON','escribe',5,'p_escribe','lexer_parser.py',398),
  ('escribe_aux -> exp escribeCycle','escribe_aux',2,'p_escribe','lexer_parser.py',399),
  ('escribe_aux -> CTESTRING escribeCycle','escribe_aux',2,'p_escribe','lexer_parser.py',400),
  ('escribeCycle -> COMMA escribe_aux','escribeCycle',2,'p_escribe','lexer_parser.py',401),
  ('escribeCycle -> empty','escribeCycle',1,'p_escribe','lexer_parser.py',402),
  ('empty -> <empty>','empty',0,'p_empty','lexer_parser.py',408),
]
