
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaARROW ASSIGN COLON COMMA CTECHAR CTEF CTEI CTESTRING DECIMAL DIVIDE EN ENTERO EQUAL FUNCION GREATER GREATEREQ ID IMPRIMIR INICIO LBRACE LBRACKET LEER LESS LESSEQ LETRA LPAREN MIENTRAS MINUS NOTEQUAL PLUS PORCADA PROGRAMA RBRACE RBRACKET REGRESAR RENGLON RPAREN SEMICOLON SI SINO SINREGRESAR TABLA TIMES VARIABLE o y\n    programa : PROGRAMA ID COLON inicio\n            | PROGRAMA ID COLON dec_var inicio\n            | PROGRAMA ID COLON dec_var dec_func inicio\n            | PROGRAMA ID COLON dec_func inicio\n    \n    inicio : INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON\n    \n    dec_var : simple_var\n            | array\n            | matrix\n    \n    simple_var : VARIABLE type ARROW ID simpleVarCycle SEMICOLON\n    simpleVarCycle : COMMA ID simpleVarCycle\n                    | empty\n    \n    array : RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON\n    arrayCycle : COMMA ID LBRACKET CTEI RBRACKET arrayCycle\n                | empty\n    \n    matrix : TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON\n    matrixCycle : COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle\n                | empty\n    \n    type : ENTERO\n        | DECIMAL\n        | LETRA\n    \n    dec_func : FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON\n    dec_func_return : type\n                    | SINREGRESAR\n    decFuncCycle : estatutos decFuncCycle\n                | empty \n    \n    parameter : type ID parameterCycle \n    parameterCycle : COMMA type ID parameterCycle\n                    | empty \n    \n    estatutos : asignar\n            | llamada_func\n            | ciclo_for\n            | ciclo_while\n            | condicion\n            | escribe\n            | leer\n            | empty\n    \n    asignar : variable ASSIGN exp SEMICOLON\n    \n    variable : ID variable_aux\n    variable_aux : LBRACKET exp RBRACKET\n                | LBRACKET exp RBRACKET LBRACKET exp RBRACKET\n                | empty\n    \n    leer : LEER variable SEMICOLON\n    \n    ciclo_while : MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON\n    whileCycle : estatutos whileCycle\n                | empty\n    \n    ciclo_for : PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON\n    forCycle : estatutos forCycle\n            | empty\n    \n    condicion : SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON\n    condicionCycle : estatutos condicionCycle\n                | empty\n    sinoCondicion : SINO LBRACE estatutos condicionCycle RBRACE\n                | empty\n    \n    exp : term expT\n    expT : PLUS exp\n         | MINUS exp\n         | empty\n    \n    term : factor termT\n    termT : TIMES term\n            | DIVIDE term\n            | empty\n    \n    factor : factor_constante\n            | factor_variable\n            | factor_expresion\n    factor_constante : CTEI\n                    | CTEF\n    factor_variable : ID\n                    | ID LBRACKET exp RBRACKET\n                    | ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET\n                    | ID llamada_func\n    factor_expresion : LPAREN exp RPAREN\n    \n    llamada_func : ID LPAREN llamadaCYCLE RPAREN SEMICOLON\n    llamadaCYCLE : exp llamadaCYCLE_aux\n                | empty\n    llamadaCYCLE_aux : COMMA exp llamadaCYCLE_aux\n                    | empty\n    \n    escribe : IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON\n    escribe_aux : exp escribeCycle\n                | CTESTRING escribeCycle\n    escribeCycle : COMMA escribe_aux\n                | empty\n    \n    empty : \n    '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,5,16,18,29,90,],[0,-1,-2,-4,-3,-5,]),'ID':([2,9,10,11,20,21,22,23,24,25,32,33,34,35,41,42,43,44,45,46,47,48,51,55,57,59,64,65,67,77,78,79,80,81,86,96,98,99,102,103,106,114,122,125,139,142,143,145,148,150,151,153,154,155,157,159,164,165,166,167,168,170,175,177,179,181,182,184,186,189,200,202,203,210,211,214,],[3,-6,-7,-8,31,-22,-23,-18,-19,-20,37,38,39,50,-29,-30,-31,-32,-33,-34,-35,-36,77,83,85,87,77,77,77,105,77,77,77,77,-9,77,77,77,77,77,77,-42,-37,77,77,50,158,160,-72,77,50,50,50,-77,50,-12,50,77,50,50,50,-36,50,-36,50,-36,50,-36,83,201,-15,-46,-43,-49,50,50,]),'COLON':([3,],[4,]),'INICIO':([4,6,7,9,10,11,17,86,159,200,215,],[8,8,8,-6,-7,-8,8,-9,-12,-15,-21,]),'FUNCION':([4,6,9,10,11,86,159,200,],[12,12,-6,-7,-8,-9,-12,-15,]),'VARIABLE':([4,115,],[13,13,]),'RENGLON':([4,115,],[14,14,]),'TABLA':([4,115,],[15,15,]),'LPAREN':([8,31,50,51,52,53,54,64,65,67,78,79,80,81,96,98,99,102,103,105,106,125,139,150,165,],[19,36,65,78,79,80,81,78,78,78,78,78,78,78,78,78,78,78,78,65,78,78,78,78,78,]),'PORCADA':([9,10,11,35,41,42,43,44,45,46,47,48,86,114,122,142,148,151,153,154,155,157,159,164,166,167,168,170,175,177,179,181,182,184,200,202,203,210,211,214,],[-6,-7,-8,51,-29,-30,-31,-32,-33,-34,-35,-36,-9,-42,-37,51,-72,51,51,51,-77,51,-12,51,51,51,51,-36,51,-36,51,-36,51,-36,-15,-46,-43,-49,51,51,]),'MIENTRAS':([9,10,11,35,41,42,43,44,45,46,47,48,86,114,122,142,148,151,153,154,155,157,159,164,166,167,168,170,175,177,179,181,182,184,200,202,203,210,211,214,],[-6,-7,-8,52,-29,-30,-31,-32,-33,-34,-35,-36,-9,-42,-37,52,-72,52,52,52,-77,52,-12,52,52,52,52,-36,52,-36,52,-36,52,-36,-15,-46,-43,-49,52,52,]),'SI':([9,10,11,35,41,42,43,44,45,46,47,48,86,114,122,142,148,151,153,154,155,157,159,164,166,167,168,170,175,177,179,181,182,184,200,202,203,210,211,214,],[-6,-7,-8,53,-29,-30,-31,-32,-33,-34,-35,-36,-9,-42,-37,53,-72,53,53,53,-77,53,-12,53,53,53,53,-36,53,-36,53,-36,53,-36,-15,-46,-43,-49,53,53,]),'IMPRIMIR':([9,10,11,35,41,42,43,44,45,46,47,48,86,114,122,142,148,151,153,154,155,157,159,164,166,167,168,170,175,177,179,181,182,184,200,202,203,210,211,214,],[-6,-7,-8,54,-29,-30,-31,-32,-33,-34,-35,-36,-9,-42,-37,54,-72,54,54,54,-77,54,-12,54,54,54,54,-36,54,-36,54,-36,54,-36,-15,-46,-43,-49,54,54,]),'LEER':([9,10,11,35,41,42,43,44,45,46,47,48,86,114,122,142,148,151,153,154,155,157,159,164,166,167,168,170,175,177,179,181,182,184,200,202,203,210,211,214,],[-6,-7,-8,55,-29,-30,-31,-32,-33,-34,-35,-36,-9,-42,-37,55,-72,55,55,55,-77,55,-12,55,55,55,55,-36,55,-36,55,-36,55,-36,-15,-46,-43,-49,55,55,]),'REGRESAR':([9,10,11,41,42,43,44,45,46,47,48,86,114,122,142,148,155,157,159,168,169,170,185,200,202,203,210,],[-6,-7,-8,-29,-30,-31,-32,-33,-34,-35,-36,-9,-42,-37,-82,-72,-77,-82,-12,-82,186,-25,-24,-15,-46,-43,-49,]),'SINREGRESAR':([12,],[22,]),'ENTERO':([12,13,14,15,36,117,],[23,23,23,23,23,23,]),'DECIMAL':([12,13,14,15,36,117,],[24,24,24,24,24,24,]),'LETRA':([12,13,14,15,36,117,],[25,25,25,25,25,25,]),'RPAREN':([19,56,65,70,71,72,73,74,75,76,77,85,92,93,94,97,100,101,104,107,108,109,110,111,112,113,116,118,124,126,129,130,131,132,134,138,140,141,148,149,152,156,158,162,171,193,],[30,84,-82,-82,-82,-62,-63,-64,-65,-66,-67,-82,123,-82,-74,-54,-57,-58,-61,-70,134,135,136,137,-82,-82,-26,-28,-73,-76,-55,-56,-59,-60,-71,-78,-81,-79,-72,-82,-68,-80,-82,-75,-27,-69,]),'ARROW':([23,24,25,26,27,28,],[-18,-19,-20,32,33,34,]),'LBRACE':([30,70,71,72,73,74,75,76,77,84,97,100,101,104,107,128,129,130,131,132,134,135,136,148,152,193,205,],[35,-82,-82,-62,-63,-64,-65,-66,-67,115,-54,-57,-58,-61,-70,151,-55,-56,-59,-60,-71,153,154,-72,-68,-69,211,]),'RBRACE':([35,40,41,42,43,44,45,46,47,48,114,122,148,151,153,154,155,164,166,167,175,176,177,179,180,181,182,183,184,191,194,196,202,203,207,210,211,214,217,],[-82,63,-29,-30,-31,-32,-33,-34,-35,-36,-42,-37,-72,-82,-82,-82,-77,-82,-82,-82,-82,192,-36,-82,195,-36,-82,197,-36,-47,-44,-50,-46,-43,212,-49,-82,-82,219,]),'COMMA':([37,70,71,72,73,74,75,76,77,85,87,93,97,100,101,104,107,112,113,120,129,130,131,132,134,148,149,152,158,173,193,199,221,],[59,-82,-82,-62,-63,-64,-65,-66,-67,117,59,125,-54,-57,-58,-61,-70,139,139,145,-55,-56,-59,-60,-71,-72,125,-68,117,189,-69,145,189,]),'SEMICOLON':([37,58,60,63,66,68,70,71,72,73,74,75,76,77,82,83,87,91,97,100,101,104,107,119,120,123,127,129,130,131,132,134,137,144,146,148,152,173,174,188,190,192,193,195,197,198,199,204,206,208,212,219,221,222,],[-82,86,-11,90,-38,-41,-82,-82,-62,-63,-64,-65,-66,-67,114,-82,-82,122,-54,-57,-58,-61,-70,-10,-82,148,-39,-55,-56,-59,-60,-71,155,159,-14,-72,-68,-82,-40,200,-17,202,-69,203,-82,207,-82,210,-53,-13,215,-52,-82,-16,]),'LBRACKET':([38,39,50,77,83,121,127,152,160,201,216,],[61,62,67,106,67,147,150,165,172,209,218,]),'ASSIGN':([49,50,66,68,127,174,],[64,-82,-38,-41,-39,-40,]),'CTEI':([51,61,62,64,65,67,78,79,80,81,96,98,99,102,103,106,125,139,147,150,165,172,209,218,],[75,88,89,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,161,75,75,187,213,220,]),'CTEF':([51,64,65,67,78,79,80,81,96,98,99,102,103,106,125,139,150,165,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'EN':([69,70,71,72,73,74,75,76,77,97,100,101,104,107,129,130,131,132,134,148,152,193,],[96,-82,-82,-62,-63,-64,-65,-66,-67,-54,-57,-58,-61,-70,-55,-56,-59,-60,-71,-72,-68,-69,]),'PLUS':([70,71,72,73,74,75,76,77,101,104,107,131,132,134,148,152,193,],[98,-82,-62,-63,-64,-65,-66,-67,-58,-61,-70,-59,-60,-71,-72,-68,-69,]),'MINUS':([70,71,72,73,74,75,76,77,101,104,107,131,132,134,148,152,193,],[99,-82,-62,-63,-64,-65,-66,-67,-58,-61,-70,-59,-60,-71,-72,-68,-69,]),'RBRACKET':([70,71,72,73,74,75,76,77,88,89,95,97,100,101,104,107,129,130,131,132,133,134,148,152,161,163,178,187,193,213,220,],[-82,-82,-62,-63,-64,-65,-66,-67,120,121,127,-54,-57,-58,-61,-70,-55,-56,-59,-60,152,-71,-72,-68,173,174,193,199,-69,216,221,]),'TIMES':([71,72,73,74,75,76,77,107,134,148,152,193,],[102,-62,-63,-64,-65,-66,-67,-70,-71,-72,-68,-69,]),'DIVIDE':([71,72,73,74,75,76,77,107,134,148,152,193,],[103,-62,-63,-64,-65,-66,-67,-70,-71,-72,-68,-69,]),'CTESTRING':([81,139,],[113,113,]),'SINO':([197,],[205,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'inicio':([4,6,7,17,],[5,16,18,29,]),'dec_var':([4,115,],[6,142,]),'dec_func':([4,6,],[7,17,]),'simple_var':([4,115,],[9,9,]),'array':([4,115,],[10,10,]),'matrix':([4,115,],[11,11,]),'dec_func_return':([12,],[20,]),'type':([12,13,14,15,36,117,],[21,26,27,28,57,143,]),'estatutos':([35,142,151,153,154,157,164,166,167,168,175,179,182,211,214,],[40,157,164,166,167,168,175,179,182,168,175,179,182,214,182,]),'asignar':([35,142,151,153,154,157,164,166,167,168,175,179,182,211,214,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'llamada_func':([35,77,142,151,153,154,157,164,166,167,168,175,179,182,211,214,],[42,107,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'ciclo_for':([35,142,151,153,154,157,164,166,167,168,175,179,182,211,214,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'ciclo_while':([35,142,151,153,154,157,164,166,167,168,175,179,182,211,214,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'condicion':([35,142,151,153,154,157,164,166,167,168,175,179,182,211,214,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'escribe':([35,142,151,153,154,157,164,166,167,168,175,179,182,211,214,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'leer':([35,142,151,153,154,157,164,166,167,168,175,179,182,211,214,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'empty':([35,37,50,65,70,71,83,85,87,93,112,113,120,142,149,151,153,154,157,158,164,166,167,168,173,175,179,182,197,199,211,214,221,],[48,60,68,94,100,104,68,118,60,126,140,140,146,48,126,48,48,48,170,118,177,181,184,170,190,177,181,184,206,146,48,184,190,]),'variable':([35,55,142,151,153,154,157,164,166,167,168,175,179,182,186,211,214,],[49,82,49,49,49,49,49,49,49,49,49,49,49,49,198,49,49,]),'parameter':([36,],[56,]),'simpleVarCycle':([37,87,],[58,119,]),'variable_aux':([50,83,],[66,66,]),'exp':([51,64,65,67,78,79,80,81,96,98,99,106,125,139,150,165,],[69,91,93,95,108,109,110,112,128,129,130,133,149,112,163,178,]),'term':([51,64,65,67,78,79,80,81,96,98,99,102,103,106,125,139,150,165,],[70,70,70,70,70,70,70,70,70,70,70,131,132,70,70,70,70,70,]),'factor':([51,64,65,67,78,79,80,81,96,98,99,102,103,106,125,139,150,165,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'factor_constante':([51,64,65,67,78,79,80,81,96,98,99,102,103,106,125,139,150,165,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'factor_variable':([51,64,65,67,78,79,80,81,96,98,99,102,103,106,125,139,150,165,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'factor_expresion':([51,64,65,67,78,79,80,81,96,98,99,102,103,106,125,139,150,165,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'llamadaCYCLE':([65,],[92,]),'expT':([70,],[97,]),'termT':([71,],[101,]),'escribe_aux':([81,139,],[111,156,]),'parameterCycle':([85,158,],[116,171,]),'llamadaCYCLE_aux':([93,149,],[124,162,]),'escribeCycle':([112,113,],[138,141,]),'arrayCycle':([120,199,],[144,208,]),'decFuncCycle':([157,168,],[169,185,]),'forCycle':([164,175,],[176,191,]),'whileCycle':([166,179,],[180,194,]),'condicionCycle':([167,182,214,],[183,196,217,]),'matrixCycle':([173,221,],[188,222,]),'sinoCondicion':([197,],[204,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID COLON inicio','programa',4,'p_programa','lexer_parser.py',150),
  ('programa -> PROGRAMA ID COLON dec_var inicio','programa',5,'p_programa','lexer_parser.py',151),
  ('programa -> PROGRAMA ID COLON dec_var dec_func inicio','programa',6,'p_programa','lexer_parser.py',152),
  ('programa -> PROGRAMA ID COLON dec_func inicio','programa',5,'p_programa','lexer_parser.py',153),
  ('inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON','inicio',7,'p_inicio','lexer_parser.py',159),
  ('dec_var -> simple_var','dec_var',1,'p_dec_var','lexer_parser.py',165),
  ('dec_var -> array','dec_var',1,'p_dec_var','lexer_parser.py',166),
  ('dec_var -> matrix','dec_var',1,'p_dec_var','lexer_parser.py',167),
  ('simple_var -> VARIABLE type ARROW ID simpleVarCycle SEMICOLON','simple_var',6,'p_simple_var','lexer_parser.py',173),
  ('simpleVarCycle -> COMMA ID simpleVarCycle','simpleVarCycle',3,'p_simple_var','lexer_parser.py',174),
  ('simpleVarCycle -> empty','simpleVarCycle',1,'p_simple_var','lexer_parser.py',175),
  ('array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON','array',9,'p_array','lexer_parser.py',181),
  ('arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET arrayCycle','arrayCycle',6,'p_array','lexer_parser.py',182),
  ('arrayCycle -> empty','arrayCycle',1,'p_array','lexer_parser.py',183),
  ('matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON','matrix',12,'p_matrix','lexer_parser.py',189),
  ('matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle','matrixCycle',9,'p_matrix','lexer_parser.py',190),
  ('matrixCycle -> empty','matrixCycle',1,'p_matrix','lexer_parser.py',191),
  ('type -> ENTERO','type',1,'p_type','lexer_parser.py',197),
  ('type -> DECIMAL','type',1,'p_type','lexer_parser.py',198),
  ('type -> LETRA','type',1,'p_type','lexer_parser.py',199),
  ('dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON','dec_func',15,'p_dec_func','lexer_parser.py',205),
  ('dec_func_return -> type','dec_func_return',1,'p_dec_func','lexer_parser.py',206),
  ('dec_func_return -> SINREGRESAR','dec_func_return',1,'p_dec_func','lexer_parser.py',207),
  ('decFuncCycle -> estatutos decFuncCycle','decFuncCycle',2,'p_dec_func','lexer_parser.py',208),
  ('decFuncCycle -> empty','decFuncCycle',1,'p_dec_func','lexer_parser.py',209),
  ('parameter -> type ID parameterCycle','parameter',3,'p_parameter','lexer_parser.py',215),
  ('parameterCycle -> COMMA type ID parameterCycle','parameterCycle',4,'p_parameter','lexer_parser.py',216),
  ('parameterCycle -> empty','parameterCycle',1,'p_parameter','lexer_parser.py',217),
  ('estatutos -> asignar','estatutos',1,'p_estatutos','lexer_parser.py',223),
  ('estatutos -> llamada_func','estatutos',1,'p_estatutos','lexer_parser.py',224),
  ('estatutos -> ciclo_for','estatutos',1,'p_estatutos','lexer_parser.py',225),
  ('estatutos -> ciclo_while','estatutos',1,'p_estatutos','lexer_parser.py',226),
  ('estatutos -> condicion','estatutos',1,'p_estatutos','lexer_parser.py',227),
  ('estatutos -> escribe','estatutos',1,'p_estatutos','lexer_parser.py',228),
  ('estatutos -> leer','estatutos',1,'p_estatutos','lexer_parser.py',229),
  ('estatutos -> empty','estatutos',1,'p_estatutos','lexer_parser.py',230),
  ('asignar -> variable ASSIGN exp SEMICOLON','asignar',4,'p_asignar','lexer_parser.py',236),
  ('variable -> ID variable_aux','variable',2,'p_variable','lexer_parser.py',242),
  ('variable_aux -> LBRACKET exp RBRACKET','variable_aux',3,'p_variable','lexer_parser.py',243),
  ('variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET','variable_aux',6,'p_variable','lexer_parser.py',244),
  ('variable_aux -> empty','variable_aux',1,'p_variable','lexer_parser.py',245),
  ('leer -> LEER variable SEMICOLON','leer',3,'p_leer','lexer_parser.py',251),
  ('ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON','ciclo_while',9,'p_ciclo_while','lexer_parser.py',257),
  ('whileCycle -> estatutos whileCycle','whileCycle',2,'p_ciclo_while','lexer_parser.py',258),
  ('whileCycle -> empty','whileCycle',1,'p_ciclo_while','lexer_parser.py',259),
  ('ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON','ciclo_for',9,'p_ciclo_for','lexer_parser.py',265),
  ('forCycle -> estatutos forCycle','forCycle',2,'p_ciclo_for','lexer_parser.py',266),
  ('forCycle -> empty','forCycle',1,'p_ciclo_for','lexer_parser.py',267),
  ('condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON','condicion',10,'p_condicion','lexer_parser.py',273),
  ('condicionCycle -> estatutos condicionCycle','condicionCycle',2,'p_condicion','lexer_parser.py',274),
  ('condicionCycle -> empty','condicionCycle',1,'p_condicion','lexer_parser.py',275),
  ('sinoCondicion -> SINO LBRACE estatutos condicionCycle RBRACE','sinoCondicion',5,'p_condicion','lexer_parser.py',276),
  ('sinoCondicion -> empty','sinoCondicion',1,'p_condicion','lexer_parser.py',277),
  ('exp -> term expT','exp',2,'p_exp','lexer_parser.py',283),
  ('expT -> PLUS exp','expT',2,'p_exp','lexer_parser.py',284),
  ('expT -> MINUS exp','expT',2,'p_exp','lexer_parser.py',285),
  ('expT -> empty','expT',1,'p_exp','lexer_parser.py',286),
  ('term -> factor termT','term',2,'p_term','lexer_parser.py',292),
  ('termT -> TIMES term','termT',2,'p_term','lexer_parser.py',293),
  ('termT -> DIVIDE term','termT',2,'p_term','lexer_parser.py',294),
  ('termT -> empty','termT',1,'p_term','lexer_parser.py',295),
  ('factor -> factor_constante','factor',1,'p_factor','lexer_parser.py',301),
  ('factor -> factor_variable','factor',1,'p_factor','lexer_parser.py',302),
  ('factor -> factor_expresion','factor',1,'p_factor','lexer_parser.py',303),
  ('factor_constante -> CTEI','factor_constante',1,'p_factor','lexer_parser.py',304),
  ('factor_constante -> CTEF','factor_constante',1,'p_factor','lexer_parser.py',305),
  ('factor_variable -> ID','factor_variable',1,'p_factor','lexer_parser.py',306),
  ('factor_variable -> ID LBRACKET exp RBRACKET','factor_variable',4,'p_factor','lexer_parser.py',307),
  ('factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET','factor_variable',7,'p_factor','lexer_parser.py',308),
  ('factor_variable -> ID llamada_func','factor_variable',2,'p_factor','lexer_parser.py',309),
  ('factor_expresion -> LPAREN exp RPAREN','factor_expresion',3,'p_factor','lexer_parser.py',310),
  ('llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON','llamada_func',5,'p_llamada_func','lexer_parser.py',316),
  ('llamadaCYCLE -> exp llamadaCYCLE_aux','llamadaCYCLE',2,'p_llamada_func','lexer_parser.py',317),
  ('llamadaCYCLE -> empty','llamadaCYCLE',1,'p_llamada_func','lexer_parser.py',318),
  ('llamadaCYCLE_aux -> COMMA exp llamadaCYCLE_aux','llamadaCYCLE_aux',3,'p_llamada_func','lexer_parser.py',319),
  ('llamadaCYCLE_aux -> empty','llamadaCYCLE_aux',1,'p_llamada_func','lexer_parser.py',320),
  ('escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON','escribe',5,'p_escribe','lexer_parser.py',326),
  ('escribe_aux -> exp escribeCycle','escribe_aux',2,'p_escribe','lexer_parser.py',327),
  ('escribe_aux -> CTESTRING escribeCycle','escribe_aux',2,'p_escribe','lexer_parser.py',328),
  ('escribeCycle -> COMMA escribe_aux','escribeCycle',2,'p_escribe','lexer_parser.py',329),
  ('escribeCycle -> empty','escribeCycle',1,'p_escribe','lexer_parser.py',330),
  ('empty -> <empty>','empty',0,'p_empty','lexer_parser.py',336),
]
