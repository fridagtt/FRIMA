Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID punto_programa COLON inicio
Rule 2     programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio
Rule 3     programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio
Rule 4     programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio
Rule 5     punto_programa -> <empty>
Rule 6     inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto inicio_estatutos RBRACE SEMICOLON
Rule 7     inicio_estatutos -> estatutos_opciones inicio_estatutos
Rule 8     inicio_estatutos -> empty
Rule 9     punto_update_goto -> <empty>
Rule 10    dec_var_cycle -> dec_var dec_var_cycle
Rule 11    dec_var_cycle -> empty
Rule 12    dec_func_cycle -> dec_func p_dec_func_aux
Rule 13    p_dec_func_aux -> dec_func p_dec_func_aux
Rule 14    p_dec_func_aux -> empty
Rule 15    dec_var -> simple_var
Rule 16    dec_var -> array
Rule 17    dec_var -> matrix
Rule 18    type -> ENTERO
Rule 19    type -> DECIMAL
Rule 20    type -> LETRA
Rule 21    simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
Rule 22    simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle
Rule 23    simpleVarCycle -> empty
Rule 24    punto_simple_var -> <empty>
Rule 25    array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
Rule 26    arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle
Rule 27    arrayCycle -> empty
Rule 28    punto_array -> <empty>
Rule 29    matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON
Rule 30    matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle
Rule 31    matrixCycle -> empty
Rule 32    punto_matrix -> <empty>
Rule 33    dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
Rule 34    dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
Rule 35    punto_global_func_var -> <empty>
Rule 36    punto_end_function -> <empty>
Rule 37    punto_add_func -> <empty>
Rule 38    parameter -> type ID punto_add_parameter parameterCycle
Rule 39    parameter -> empty
Rule 40    parameterCycle -> COMMA type ID punto_add_parameter parameterCycle
Rule 41    parameterCycle -> empty
Rule 42    punto_add_parameter -> <empty>
Rule 43    estatutos -> estatutosCycle
Rule 44    estatutos -> func_regresar
Rule 45    estatutosCycle -> estatutos_opciones estatutos
Rule 46    estatutosCycle -> estatutos_opciones
Rule 47    estatutos_opciones -> asignar
Rule 48    estatutos_opciones -> llamada_func_void
Rule 49    estatutos_opciones -> ciclo_for
Rule 50    estatutos_opciones -> ciclo_while
Rule 51    estatutos_opciones -> condicion
Rule 52    estatutos_opciones -> imprimir
Rule 53    estatutos_opciones -> leer
Rule 54    func_regresar -> REGRESAR exp SEMICOLON punto_check_types
Rule 55    punto_check_types -> <empty>
Rule 56    asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
Rule 57    variable -> ID variable_aux
Rule 58    variable_aux -> LBRACKET exp RBRACKET
Rule 59    variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 60    variable_aux -> punto_push_id
Rule 61    punto_push_id -> <empty>
Rule 62    push_op_igual -> <empty>
Rule 63    check_op_igual -> <empty>
Rule 64    leer -> LEER variable SEMICOLON
Rule 65    ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
Rule 66    punto_inicio_while -> <empty>
Rule 67    punto_medio_while -> <empty>
Rule 68    punto_fin_while -> <empty>
Rule 69    ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
Rule 70    punto_existe_id -> <empty>
Rule 71    punto_valida_int -> <empty>
Rule 72    punto_valida_exp -> <empty>
Rule 73    punto_termina_for -> <empty>
Rule 74    condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
Rule 75    condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
Rule 76    punto_si -> <empty>
Rule 77    punto_fin_si -> <empty>
Rule 78    punto_sino -> <empty>
Rule 79    hyper_exp -> super_exp hyper_exp_aux
Rule 80    hyper_exp_aux -> push_op_logicos super_exp check_op_logicos
Rule 81    hyper_exp_aux -> empty
Rule 82    check_op_logicos -> <empty>
Rule 83    push_op_logicos -> Y
Rule 84    push_op_logicos -> O
Rule 85    push_op_logicos -> empty
Rule 86    super_exp -> exp super_exp_aux
Rule 87    super_exp_aux -> push_op_relacionales exp check_op_relacionales
Rule 88    super_exp_aux -> empty
Rule 89    check_op_relacionales -> <empty>
Rule 90    push_op_relacionales -> GREATER
Rule 91    push_op_relacionales -> LESS
Rule 92    push_op_relacionales -> GREATEREQ
Rule 93    push_op_relacionales -> LESSEQ
Rule 94    push_op_relacionales -> NOTEQUAL
Rule 95    push_op_relacionales -> EQUAL
Rule 96    exp -> term check_op_masmenos exp_aux
Rule 97    exp_aux -> push_op_exp_masmenos exp
Rule 98    exp_aux -> empty
Rule 99    push_op_exp_masmenos -> PLUS
Rule 100   push_op_exp_masmenos -> MINUS
Rule 101   check_op_masmenos -> <empty>
Rule 102   term -> factor check_op_pordiv term_aux
Rule 103   term_aux -> push_op_exp_pordiv term
Rule 104   term_aux -> empty
Rule 105   check_op_pordiv -> <empty>
Rule 106   push_op_exp_pordiv -> TIMES
Rule 107   push_op_exp_pordiv -> DIVIDE
Rule 108   factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
Rule 109   factor -> factor_constante
Rule 110   factor -> llamada_func_return
Rule 111   factor -> ID LBRACKET hyper_exp RBRACKET
Rule 112   factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
Rule 113   factor -> ID push_id
Rule 114   factor_constante -> CTEI push_int
Rule 115   factor_constante -> CTEF push_float
Rule 116   factor_constante -> CTECHAR push_char
Rule 117   meter_fondo_falso -> <empty>
Rule 118   quitar_fondo_falso -> <empty>
Rule 119   push_int -> <empty>
Rule 120   push_float -> <empty>
Rule 121   push_id -> <empty>
Rule 122   push_char -> <empty>
Rule 123   func_params_aux -> COMMA exp punto_check_param func_params_aux
Rule 124   func_params_aux -> empty
Rule 125   func_params -> exp punto_check_param func_params_aux
Rule 126   func_params -> empty
Rule 127   punto_check_param -> <empty>
Rule 128   llamada_func_void -> ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON
Rule 129   llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub
Rule 130   punto_func_exists -> <empty>
Rule 131   punto_validate_isvoid -> <empty>
Rule 132   punto_create_era -> <empty>
Rule 133   punto_check_total_params -> <empty>
Rule 134   punto_create_gosub -> <empty>
Rule 135   imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
Rule 136   imprimir_aux -> exp push_imprimir imprimirCycle
Rule 137   imprimir_aux -> CTESTRING push_imprimir imprimirCycle
Rule 138   imprimirCycle -> COMMA imprimir_aux
Rule 139   imprimirCycle -> empty
Rule 140   push_imprimir -> <empty>
Rule 141   empty -> <empty>

Terminals, with rules where they appear

ARROW                : 21 25 29
ASSIGN               : 56 69
COLON                : 1 2 3 4
COMMA                : 22 26 30 40 123 138
CTECHAR              : 116
CTEF                 : 115
CTEI                 : 25 26 29 29 30 30 114
CTESTRING            : 137
DECIMAL              : 19
DIVIDE               : 107
ENTERO               : 18
EQUAL                : 95
FUNCION              : 33 34
GREATER              : 90
GREATEREQ            : 92
HASTA                : 69
ID                   : 1 2 3 4 21 22 25 26 29 30 33 34 38 40 57 69 111 112 113 128 129
IMPRIMIR             : 135
INICIO               : 6
LBRACE               : 6 33 34 65 69 74 75 75
LBRACKET             : 25 26 29 29 30 30 58 59 59 111 112 112
LEER                 : 64
LESS                 : 91
LESSEQ               : 93
LETRA                : 20
LPAREN               : 6 33 34 65 74 75 108 128 129 135
MIENTRAS             : 65
MINUS                : 100
NOTEQUAL             : 94
O                    : 84
PLUS                 : 99
PORCADA              : 69
PROGRAMA             : 1 2 3 4
RBRACE               : 6 33 34 65 69 74 75 75
RBRACKET             : 25 26 29 29 30 30 58 59 59 111 112 112
REGRESAR             : 54
RENGLON              : 25
RPAREN               : 6 33 34 65 74 75 108 128 129 135
SEMICOLON            : 6 21 25 29 33 34 54 56 64 65 69 74 75 128 135
SI                   : 74 75
SINO                 : 75
SINREGRESAR          : 34
TABLA                : 29
TIMES                : 106
VARIABLE             : 21
Y                    : 83
error                : 

Nonterminals, with rules where they appear

array                : 16
arrayCycle           : 25 26
asignar              : 47
check_op_igual       : 56
check_op_logicos     : 80
check_op_masmenos    : 96
check_op_pordiv      : 102
check_op_relacionales : 87
ciclo_for            : 49
ciclo_while          : 50
condicion            : 51
dec_func             : 12 13
dec_func_cycle       : 3 4
dec_var              : 10
dec_var_cycle        : 2 3 10 33 34
empty                : 8 11 14 23 27 31 39 41 81 85 88 98 104 124 126 139
estatutos            : 33 34 45 65 69 74 75 75
estatutosCycle       : 43
estatutos_opciones   : 7 45 46
exp                  : 54 58 59 59 86 87 97 123 125 136
exp_aux              : 96
factor               : 102
factor_constante     : 109
func_params          : 128 129
func_params_aux      : 123 125
func_regresar        : 44
hyper_exp            : 56 65 69 69 74 75 108 111 112 112
hyper_exp_aux        : 79
imprimir             : 52
imprimirCycle        : 136 137
imprimir_aux         : 135 138
inicio               : 1 2 3 4
inicio_estatutos     : 6 7
leer                 : 53
llamada_func_return  : 110
llamada_func_void    : 48
matrix               : 17
matrixCycle          : 29 30
meter_fondo_falso    : 108
p_dec_func_aux       : 12 13
parameter            : 33 34
parameterCycle       : 38 40
programa             : 0
punto_add_func       : 33 34
punto_add_parameter  : 38 40
punto_array          : 25 26
punto_check_param    : 123 125
punto_check_total_params : 128 129
punto_check_types    : 54
punto_create_era     : 128 129
punto_create_gosub   : 128 129
punto_end_function   : 33 34
punto_existe_id      : 69
punto_fin_si         : 74 75
punto_fin_while      : 65
punto_func_exists    : 128 129
punto_global_func_var : 33
punto_inicio_while   : 65
punto_matrix         : 29 30
punto_medio_while    : 65
punto_programa       : 1 2 3 4
punto_push_id        : 60
punto_si             : 74 75
punto_simple_var     : 21 22
punto_sino           : 75
punto_termina_for    : 69
punto_update_goto    : 6
punto_valida_exp     : 69
punto_valida_int     : 69
punto_validate_isvoid : 128
push_char            : 116
push_float           : 115
push_id              : 113
push_imprimir        : 136 137
push_int             : 114
push_op_exp_masmenos : 97
push_op_exp_pordiv   : 103
push_op_igual        : 56
push_op_logicos      : 80
push_op_relacionales : 87
quitar_fondo_falso   : 108
simpleVarCycle       : 21 22
simple_var           : 15
super_exp            : 79 80
super_exp_aux        : 86
term                 : 96 103
term_aux             : 102
type                 : 21 25 29 33 38 40
variable             : 56 64
variable_aux         : 57

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID punto_programa COLON inicio
    (2) programa -> . PROGRAMA ID punto_programa COLON dec_var_cycle inicio
    (3) programa -> . PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> . PROGRAMA ID punto_programa COLON dec_func_cycle inicio

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID punto_programa COLON inicio
    (2) programa -> PROGRAMA . ID punto_programa COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA . ID punto_programa COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA . ID punto_programa COLON dec_func_cycle inicio

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . punto_programa COLON inicio
    (2) programa -> PROGRAMA ID . punto_programa COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA ID . punto_programa COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA ID . punto_programa COLON dec_func_cycle inicio
    (5) punto_programa -> .

    COLON           reduce using rule 5 (punto_programa -> .)

    punto_programa                 shift and go to state 4

state 4

    (1) programa -> PROGRAMA ID punto_programa . COLON inicio
    (2) programa -> PROGRAMA ID punto_programa . COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA ID punto_programa . COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA ID punto_programa . COLON dec_func_cycle inicio

    COLON           shift and go to state 5


state 5

    (1) programa -> PROGRAMA ID punto_programa COLON . inicio
    (2) programa -> PROGRAMA ID punto_programa COLON . dec_var_cycle inicio
    (3) programa -> PROGRAMA ID punto_programa COLON . dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA ID punto_programa COLON . dec_func_cycle inicio
    (6) inicio -> . INICIO LPAREN RPAREN LBRACE punto_update_goto inicio_estatutos RBRACE SEMICOLON
    (10) dec_var_cycle -> . dec_var dec_var_cycle
    (11) dec_var_cycle -> . empty
    (12) dec_func_cycle -> . dec_func p_dec_func_aux
    (15) dec_var -> . simple_var
    (16) dec_var -> . array
    (17) dec_var -> . matrix
    (141) empty -> .
    (33) dec_func -> . FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (34) dec_func -> . FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (21) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (25) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (29) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

  ! shift/reduce conflict for INICIO resolved as shift
  ! shift/reduce conflict for FUNCION resolved as shift
    INICIO          shift and go to state 9
    FUNCION         shift and go to state 16
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

  ! INICIO          [ reduce using rule 141 (empty -> .) ]
  ! FUNCION         [ reduce using rule 141 (empty -> .) ]

    inicio                         shift and go to state 6
    dec_var_cycle                  shift and go to state 7
    dec_func_cycle                 shift and go to state 8
    dec_var                        shift and go to state 10
    empty                          shift and go to state 11
    dec_func                       shift and go to state 12
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 6

    (1) programa -> PROGRAMA ID punto_programa COLON inicio .

    $end            reduce using rule 1 (programa -> PROGRAMA ID punto_programa COLON inicio .)


state 7

    (2) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle . inicio
    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle . dec_func_cycle inicio
    (6) inicio -> . INICIO LPAREN RPAREN LBRACE punto_update_goto inicio_estatutos RBRACE SEMICOLON
    (12) dec_func_cycle -> . dec_func p_dec_func_aux
    (33) dec_func -> . FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (34) dec_func -> . FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    INICIO          shift and go to state 9
    FUNCION         shift and go to state 16

    inicio                         shift and go to state 20
    dec_func_cycle                 shift and go to state 21
    dec_func                       shift and go to state 12

state 8

    (4) programa -> PROGRAMA ID punto_programa COLON dec_func_cycle . inicio
    (6) inicio -> . INICIO LPAREN RPAREN LBRACE punto_update_goto inicio_estatutos RBRACE SEMICOLON

    INICIO          shift and go to state 9

    inicio                         shift and go to state 22

state 9

    (6) inicio -> INICIO . LPAREN RPAREN LBRACE punto_update_goto inicio_estatutos RBRACE SEMICOLON

    LPAREN          shift and go to state 23


state 10

    (10) dec_var_cycle -> dec_var . dec_var_cycle
    (10) dec_var_cycle -> . dec_var dec_var_cycle
    (11) dec_var_cycle -> . empty
    (15) dec_var -> . simple_var
    (16) dec_var -> . array
    (17) dec_var -> . matrix
    (141) empty -> .
    (21) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (25) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (29) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    INICIO          reduce using rule 141 (empty -> .)
    FUNCION         reduce using rule 141 (empty -> .)
    REGRESAR        reduce using rule 141 (empty -> .)
    ID              reduce using rule 141 (empty -> .)
    PORCADA         reduce using rule 141 (empty -> .)
    MIENTRAS        reduce using rule 141 (empty -> .)
    SI              reduce using rule 141 (empty -> .)
    IMPRIMIR        reduce using rule 141 (empty -> .)
    LEER            reduce using rule 141 (empty -> .)
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

    dec_var                        shift and go to state 10
    dec_var_cycle                  shift and go to state 24
    empty                          shift and go to state 11
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 11

    (11) dec_var_cycle -> empty .

    INICIO          reduce using rule 11 (dec_var_cycle -> empty .)
    FUNCION         reduce using rule 11 (dec_var_cycle -> empty .)
    REGRESAR        reduce using rule 11 (dec_var_cycle -> empty .)
    ID              reduce using rule 11 (dec_var_cycle -> empty .)
    PORCADA         reduce using rule 11 (dec_var_cycle -> empty .)
    MIENTRAS        reduce using rule 11 (dec_var_cycle -> empty .)
    SI              reduce using rule 11 (dec_var_cycle -> empty .)
    IMPRIMIR        reduce using rule 11 (dec_var_cycle -> empty .)
    LEER            reduce using rule 11 (dec_var_cycle -> empty .)


state 12

    (12) dec_func_cycle -> dec_func . p_dec_func_aux
    (13) p_dec_func_aux -> . dec_func p_dec_func_aux
    (14) p_dec_func_aux -> . empty
    (33) dec_func -> . FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (34) dec_func -> . FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (141) empty -> .

    FUNCION         shift and go to state 16
    INICIO          reduce using rule 141 (empty -> .)

    dec_func                       shift and go to state 25
    p_dec_func_aux                 shift and go to state 26
    empty                          shift and go to state 27

state 13

    (15) dec_var -> simple_var .

    VARIABLE        reduce using rule 15 (dec_var -> simple_var .)
    RENGLON         reduce using rule 15 (dec_var -> simple_var .)
    TABLA           reduce using rule 15 (dec_var -> simple_var .)
    INICIO          reduce using rule 15 (dec_var -> simple_var .)
    FUNCION         reduce using rule 15 (dec_var -> simple_var .)
    REGRESAR        reduce using rule 15 (dec_var -> simple_var .)
    ID              reduce using rule 15 (dec_var -> simple_var .)
    PORCADA         reduce using rule 15 (dec_var -> simple_var .)
    MIENTRAS        reduce using rule 15 (dec_var -> simple_var .)
    SI              reduce using rule 15 (dec_var -> simple_var .)
    IMPRIMIR        reduce using rule 15 (dec_var -> simple_var .)
    LEER            reduce using rule 15 (dec_var -> simple_var .)


state 14

    (16) dec_var -> array .

    VARIABLE        reduce using rule 16 (dec_var -> array .)
    RENGLON         reduce using rule 16 (dec_var -> array .)
    TABLA           reduce using rule 16 (dec_var -> array .)
    INICIO          reduce using rule 16 (dec_var -> array .)
    FUNCION         reduce using rule 16 (dec_var -> array .)
    REGRESAR        reduce using rule 16 (dec_var -> array .)
    ID              reduce using rule 16 (dec_var -> array .)
    PORCADA         reduce using rule 16 (dec_var -> array .)
    MIENTRAS        reduce using rule 16 (dec_var -> array .)
    SI              reduce using rule 16 (dec_var -> array .)
    IMPRIMIR        reduce using rule 16 (dec_var -> array .)
    LEER            reduce using rule 16 (dec_var -> array .)


state 15

    (17) dec_var -> matrix .

    VARIABLE        reduce using rule 17 (dec_var -> matrix .)
    RENGLON         reduce using rule 17 (dec_var -> matrix .)
    TABLA           reduce using rule 17 (dec_var -> matrix .)
    INICIO          reduce using rule 17 (dec_var -> matrix .)
    FUNCION         reduce using rule 17 (dec_var -> matrix .)
    REGRESAR        reduce using rule 17 (dec_var -> matrix .)
    ID              reduce using rule 17 (dec_var -> matrix .)
    PORCADA         reduce using rule 17 (dec_var -> matrix .)
    MIENTRAS        reduce using rule 17 (dec_var -> matrix .)
    SI              reduce using rule 17 (dec_var -> matrix .)
    IMPRIMIR        reduce using rule 17 (dec_var -> matrix .)
    LEER            reduce using rule 17 (dec_var -> matrix .)


state 16

    (33) dec_func -> FUNCION . type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (34) dec_func -> FUNCION . SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    SINREGRESAR     shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32

    type                           shift and go to state 28

state 17

    (21) simple_var -> VARIABLE . type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32

    type                           shift and go to state 33

state 18

    (25) array -> RENGLON . type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32

    type                           shift and go to state 34

state 19

    (29) matrix -> TABLA . type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32

    type                           shift and go to state 35

state 20

    (2) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio .

    $end            reduce using rule 2 (programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio .)


state 21

    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle . inicio
    (6) inicio -> . INICIO LPAREN RPAREN LBRACE punto_update_goto inicio_estatutos RBRACE SEMICOLON

    INICIO          shift and go to state 9

    inicio                         shift and go to state 36

state 22

    (4) programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio .

    $end            reduce using rule 4 (programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio .)


state 23

    (6) inicio -> INICIO LPAREN . RPAREN LBRACE punto_update_goto inicio_estatutos RBRACE SEMICOLON

    RPAREN          shift and go to state 37


state 24

    (10) dec_var_cycle -> dec_var dec_var_cycle .

    INICIO          reduce using rule 10 (dec_var_cycle -> dec_var dec_var_cycle .)
    FUNCION         reduce using rule 10 (dec_var_cycle -> dec_var dec_var_cycle .)
    REGRESAR        reduce using rule 10 (dec_var_cycle -> dec_var dec_var_cycle .)
    ID              reduce using rule 10 (dec_var_cycle -> dec_var dec_var_cycle .)
    PORCADA         reduce using rule 10 (dec_var_cycle -> dec_var dec_var_cycle .)
    MIENTRAS        reduce using rule 10 (dec_var_cycle -> dec_var dec_var_cycle .)
    SI              reduce using rule 10 (dec_var_cycle -> dec_var dec_var_cycle .)
    IMPRIMIR        reduce using rule 10 (dec_var_cycle -> dec_var dec_var_cycle .)
    LEER            reduce using rule 10 (dec_var_cycle -> dec_var dec_var_cycle .)


state 25

    (13) p_dec_func_aux -> dec_func . p_dec_func_aux
    (13) p_dec_func_aux -> . dec_func p_dec_func_aux
    (14) p_dec_func_aux -> . empty
    (33) dec_func -> . FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (34) dec_func -> . FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (141) empty -> .

    FUNCION         shift and go to state 16
    INICIO          reduce using rule 141 (empty -> .)

    dec_func                       shift and go to state 25
    p_dec_func_aux                 shift and go to state 38
    empty                          shift and go to state 27

state 26

    (12) dec_func_cycle -> dec_func p_dec_func_aux .

    INICIO          reduce using rule 12 (dec_func_cycle -> dec_func p_dec_func_aux .)


state 27

    (14) p_dec_func_aux -> empty .

    INICIO          reduce using rule 14 (p_dec_func_aux -> empty .)


state 28

    (33) dec_func -> FUNCION type . ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    ID              shift and go to state 39


state 29

    (34) dec_func -> FUNCION SINREGRESAR . ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    ID              shift and go to state 40


state 30

    (18) type -> ENTERO .

    ID              reduce using rule 18 (type -> ENTERO .)
    ARROW           reduce using rule 18 (type -> ENTERO .)


state 31

    (19) type -> DECIMAL .

    ID              reduce using rule 19 (type -> DECIMAL .)
    ARROW           reduce using rule 19 (type -> DECIMAL .)


state 32

    (20) type -> LETRA .

    ID              reduce using rule 20 (type -> LETRA .)
    ARROW           reduce using rule 20 (type -> LETRA .)


state 33

    (21) simple_var -> VARIABLE type . ARROW ID punto_simple_var simpleVarCycle SEMICOLON

    ARROW           shift and go to state 41


state 34

    (25) array -> RENGLON type . ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON

    ARROW           shift and go to state 42


state 35

    (29) matrix -> TABLA type . ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    ARROW           shift and go to state 43


state 36

    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio .

    $end            reduce using rule 3 (programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio .)


state 37

    (6) inicio -> INICIO LPAREN RPAREN . LBRACE punto_update_goto inicio_estatutos RBRACE SEMICOLON

    LBRACE          shift and go to state 44


state 38

    (13) p_dec_func_aux -> dec_func p_dec_func_aux .

    INICIO          reduce using rule 13 (p_dec_func_aux -> dec_func p_dec_func_aux .)


state 39

    (33) dec_func -> FUNCION type ID . punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (37) punto_add_func -> .

    LPAREN          reduce using rule 37 (punto_add_func -> .)

    punto_add_func                 shift and go to state 45

state 40

    (34) dec_func -> FUNCION SINREGRESAR ID . punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (37) punto_add_func -> .

    LPAREN          reduce using rule 37 (punto_add_func -> .)

    punto_add_func                 shift and go to state 46

state 41

    (21) simple_var -> VARIABLE type ARROW . ID punto_simple_var simpleVarCycle SEMICOLON

    ID              shift and go to state 47


state 42

    (25) array -> RENGLON type ARROW . ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON

    ID              shift and go to state 48


state 43

    (29) matrix -> TABLA type ARROW . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    ID              shift and go to state 49


state 44

    (6) inicio -> INICIO LPAREN RPAREN LBRACE . punto_update_goto inicio_estatutos RBRACE SEMICOLON
    (9) punto_update_goto -> .

    ID              reduce using rule 9 (punto_update_goto -> .)
    PORCADA         reduce using rule 9 (punto_update_goto -> .)
    MIENTRAS        reduce using rule 9 (punto_update_goto -> .)
    SI              reduce using rule 9 (punto_update_goto -> .)
    IMPRIMIR        reduce using rule 9 (punto_update_goto -> .)
    LEER            reduce using rule 9 (punto_update_goto -> .)
    RBRACE          reduce using rule 9 (punto_update_goto -> .)

    punto_update_goto              shift and go to state 50

state 45

    (33) dec_func -> FUNCION type ID punto_add_func . punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (35) punto_global_func_var -> .

    LPAREN          reduce using rule 35 (punto_global_func_var -> .)

    punto_global_func_var          shift and go to state 51

state 46

    (34) dec_func -> FUNCION SINREGRESAR ID punto_add_func . LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    LPAREN          shift and go to state 52


state 47

    (21) simple_var -> VARIABLE type ARROW ID . punto_simple_var simpleVarCycle SEMICOLON
    (24) punto_simple_var -> .

    COMMA           reduce using rule 24 (punto_simple_var -> .)
    SEMICOLON       reduce using rule 24 (punto_simple_var -> .)

    punto_simple_var               shift and go to state 53

state 48

    (25) array -> RENGLON type ARROW ID . LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON

    LBRACKET        shift and go to state 54


state 49

    (29) matrix -> TABLA type ARROW ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    LBRACKET        shift and go to state 55


state 50

    (6) inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto . inicio_estatutos RBRACE SEMICOLON
    (7) inicio_estatutos -> . estatutos_opciones inicio_estatutos
    (8) inicio_estatutos -> . empty
    (47) estatutos_opciones -> . asignar
    (48) estatutos_opciones -> . llamada_func_void
    (49) estatutos_opciones -> . ciclo_for
    (50) estatutos_opciones -> . ciclo_while
    (51) estatutos_opciones -> . condicion
    (52) estatutos_opciones -> . imprimir
    (53) estatutos_opciones -> . leer
    (141) empty -> .
    (56) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (128) llamada_func_void -> . ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON
    (69) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (65) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (74) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (75) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (135) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (64) leer -> . LEER variable SEMICOLON
    (57) variable -> . ID variable_aux

    RBRACE          reduce using rule 141 (empty -> .)
    ID              shift and go to state 67
    PORCADA         shift and go to state 68
    MIENTRAS        shift and go to state 69
    SI              shift and go to state 70
    IMPRIMIR        shift and go to state 71
    LEER            shift and go to state 72

    inicio_estatutos               shift and go to state 56
    estatutos_opciones             shift and go to state 57
    empty                          shift and go to state 58
    asignar                        shift and go to state 59
    llamada_func_void              shift and go to state 60
    ciclo_for                      shift and go to state 61
    ciclo_while                    shift and go to state 62
    condicion                      shift and go to state 63
    imprimir                       shift and go to state 64
    leer                           shift and go to state 65
    variable                       shift and go to state 66

state 51

    (33) dec_func -> FUNCION type ID punto_add_func punto_global_func_var . LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    LPAREN          shift and go to state 73


state 52

    (34) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN . parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (38) parameter -> . type ID punto_add_parameter parameterCycle
    (39) parameter -> . empty
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA
    (141) empty -> .

    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32
    RPAREN          reduce using rule 141 (empty -> .)

    parameter                      shift and go to state 74
    type                           shift and go to state 75
    empty                          shift and go to state 76

state 53

    (21) simple_var -> VARIABLE type ARROW ID punto_simple_var . simpleVarCycle SEMICOLON
    (22) simpleVarCycle -> . COMMA ID punto_simple_var simpleVarCycle
    (23) simpleVarCycle -> . empty
    (141) empty -> .

    COMMA           shift and go to state 78
    SEMICOLON       reduce using rule 141 (empty -> .)

    simpleVarCycle                 shift and go to state 77
    empty                          shift and go to state 79

state 54

    (25) array -> RENGLON type ARROW ID LBRACKET . CTEI RBRACKET punto_array arrayCycle SEMICOLON

    CTEI            shift and go to state 80


state 55

    (29) matrix -> TABLA type ARROW ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    CTEI            shift and go to state 81


state 56

    (6) inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto inicio_estatutos . RBRACE SEMICOLON

    RBRACE          shift and go to state 82


state 57

    (7) inicio_estatutos -> estatutos_opciones . inicio_estatutos
    (7) inicio_estatutos -> . estatutos_opciones inicio_estatutos
    (8) inicio_estatutos -> . empty
    (47) estatutos_opciones -> . asignar
    (48) estatutos_opciones -> . llamada_func_void
    (49) estatutos_opciones -> . ciclo_for
    (50) estatutos_opciones -> . ciclo_while
    (51) estatutos_opciones -> . condicion
    (52) estatutos_opciones -> . imprimir
    (53) estatutos_opciones -> . leer
    (141) empty -> .
    (56) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (128) llamada_func_void -> . ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON
    (69) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (65) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (74) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (75) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (135) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (64) leer -> . LEER variable SEMICOLON
    (57) variable -> . ID variable_aux

    RBRACE          reduce using rule 141 (empty -> .)
    ID              shift and go to state 67
    PORCADA         shift and go to state 68
    MIENTRAS        shift and go to state 69
    SI              shift and go to state 70
    IMPRIMIR        shift and go to state 71
    LEER            shift and go to state 72

    estatutos_opciones             shift and go to state 57
    inicio_estatutos               shift and go to state 83
    empty                          shift and go to state 58
    asignar                        shift and go to state 59
    llamada_func_void              shift and go to state 60
    ciclo_for                      shift and go to state 61
    ciclo_while                    shift and go to state 62
    condicion                      shift and go to state 63
    imprimir                       shift and go to state 64
    leer                           shift and go to state 65
    variable                       shift and go to state 66

state 58

    (8) inicio_estatutos -> empty .

    RBRACE          reduce using rule 8 (inicio_estatutos -> empty .)


state 59

    (47) estatutos_opciones -> asignar .

    ID              reduce using rule 47 (estatutos_opciones -> asignar .)
    PORCADA         reduce using rule 47 (estatutos_opciones -> asignar .)
    MIENTRAS        reduce using rule 47 (estatutos_opciones -> asignar .)
    SI              reduce using rule 47 (estatutos_opciones -> asignar .)
    IMPRIMIR        reduce using rule 47 (estatutos_opciones -> asignar .)
    LEER            reduce using rule 47 (estatutos_opciones -> asignar .)
    RBRACE          reduce using rule 47 (estatutos_opciones -> asignar .)
    REGRESAR        reduce using rule 47 (estatutos_opciones -> asignar .)


state 60

    (48) estatutos_opciones -> llamada_func_void .

    ID              reduce using rule 48 (estatutos_opciones -> llamada_func_void .)
    PORCADA         reduce using rule 48 (estatutos_opciones -> llamada_func_void .)
    MIENTRAS        reduce using rule 48 (estatutos_opciones -> llamada_func_void .)
    SI              reduce using rule 48 (estatutos_opciones -> llamada_func_void .)
    IMPRIMIR        reduce using rule 48 (estatutos_opciones -> llamada_func_void .)
    LEER            reduce using rule 48 (estatutos_opciones -> llamada_func_void .)
    RBRACE          reduce using rule 48 (estatutos_opciones -> llamada_func_void .)
    REGRESAR        reduce using rule 48 (estatutos_opciones -> llamada_func_void .)


state 61

    (49) estatutos_opciones -> ciclo_for .

    ID              reduce using rule 49 (estatutos_opciones -> ciclo_for .)
    PORCADA         reduce using rule 49 (estatutos_opciones -> ciclo_for .)
    MIENTRAS        reduce using rule 49 (estatutos_opciones -> ciclo_for .)
    SI              reduce using rule 49 (estatutos_opciones -> ciclo_for .)
    IMPRIMIR        reduce using rule 49 (estatutos_opciones -> ciclo_for .)
    LEER            reduce using rule 49 (estatutos_opciones -> ciclo_for .)
    RBRACE          reduce using rule 49 (estatutos_opciones -> ciclo_for .)
    REGRESAR        reduce using rule 49 (estatutos_opciones -> ciclo_for .)


state 62

    (50) estatutos_opciones -> ciclo_while .

    ID              reduce using rule 50 (estatutos_opciones -> ciclo_while .)
    PORCADA         reduce using rule 50 (estatutos_opciones -> ciclo_while .)
    MIENTRAS        reduce using rule 50 (estatutos_opciones -> ciclo_while .)
    SI              reduce using rule 50 (estatutos_opciones -> ciclo_while .)
    IMPRIMIR        reduce using rule 50 (estatutos_opciones -> ciclo_while .)
    LEER            reduce using rule 50 (estatutos_opciones -> ciclo_while .)
    RBRACE          reduce using rule 50 (estatutos_opciones -> ciclo_while .)
    REGRESAR        reduce using rule 50 (estatutos_opciones -> ciclo_while .)


state 63

    (51) estatutos_opciones -> condicion .

    ID              reduce using rule 51 (estatutos_opciones -> condicion .)
    PORCADA         reduce using rule 51 (estatutos_opciones -> condicion .)
    MIENTRAS        reduce using rule 51 (estatutos_opciones -> condicion .)
    SI              reduce using rule 51 (estatutos_opciones -> condicion .)
    IMPRIMIR        reduce using rule 51 (estatutos_opciones -> condicion .)
    LEER            reduce using rule 51 (estatutos_opciones -> condicion .)
    RBRACE          reduce using rule 51 (estatutos_opciones -> condicion .)
    REGRESAR        reduce using rule 51 (estatutos_opciones -> condicion .)


state 64

    (52) estatutos_opciones -> imprimir .

    ID              reduce using rule 52 (estatutos_opciones -> imprimir .)
    PORCADA         reduce using rule 52 (estatutos_opciones -> imprimir .)
    MIENTRAS        reduce using rule 52 (estatutos_opciones -> imprimir .)
    SI              reduce using rule 52 (estatutos_opciones -> imprimir .)
    IMPRIMIR        reduce using rule 52 (estatutos_opciones -> imprimir .)
    LEER            reduce using rule 52 (estatutos_opciones -> imprimir .)
    RBRACE          reduce using rule 52 (estatutos_opciones -> imprimir .)
    REGRESAR        reduce using rule 52 (estatutos_opciones -> imprimir .)


state 65

    (53) estatutos_opciones -> leer .

    ID              reduce using rule 53 (estatutos_opciones -> leer .)
    PORCADA         reduce using rule 53 (estatutos_opciones -> leer .)
    MIENTRAS        reduce using rule 53 (estatutos_opciones -> leer .)
    SI              reduce using rule 53 (estatutos_opciones -> leer .)
    IMPRIMIR        reduce using rule 53 (estatutos_opciones -> leer .)
    LEER            reduce using rule 53 (estatutos_opciones -> leer .)
    RBRACE          reduce using rule 53 (estatutos_opciones -> leer .)
    REGRESAR        reduce using rule 53 (estatutos_opciones -> leer .)


state 66

    (56) asignar -> variable . ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON

    ASSIGN          shift and go to state 84


state 67

    (128) llamada_func_void -> ID . LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON
    (57) variable -> ID . variable_aux
    (58) variable_aux -> . LBRACKET exp RBRACKET
    (59) variable_aux -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (60) variable_aux -> . punto_push_id
    (61) punto_push_id -> .

    LPAREN          shift and go to state 85
    LBRACKET        shift and go to state 87
    ASSIGN          reduce using rule 61 (punto_push_id -> .)

    variable_aux                   shift and go to state 86
    punto_push_id                  shift and go to state 88

state 68

    (69) ciclo_for -> PORCADA . ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON

    ID              shift and go to state 89


state 69

    (65) ciclo_while -> MIENTRAS . punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (66) punto_inicio_while -> .

    LPAREN          reduce using rule 66 (punto_inicio_while -> .)

    punto_inicio_while             shift and go to state 90

state 70

    (74) condicion -> SI . LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (75) condicion -> SI . LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON

    LPAREN          shift and go to state 91


state 71

    (135) imprimir -> IMPRIMIR . LPAREN imprimir_aux RPAREN SEMICOLON

    LPAREN          shift and go to state 92


state 72

    (64) leer -> LEER . variable SEMICOLON
    (57) variable -> . ID variable_aux

    ID              shift and go to state 94

    variable                       shift and go to state 93

state 73

    (33) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN . parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (38) parameter -> . type ID punto_add_parameter parameterCycle
    (39) parameter -> . empty
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA
    (141) empty -> .

    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32
    RPAREN          reduce using rule 141 (empty -> .)

    type                           shift and go to state 75
    parameter                      shift and go to state 95
    empty                          shift and go to state 76

state 74

    (34) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter . RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    RPAREN          shift and go to state 96


state 75

    (38) parameter -> type . ID punto_add_parameter parameterCycle

    ID              shift and go to state 97


state 76

    (39) parameter -> empty .

    RPAREN          reduce using rule 39 (parameter -> empty .)


state 77

    (21) simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle . SEMICOLON

    SEMICOLON       shift and go to state 98


state 78

    (22) simpleVarCycle -> COMMA . ID punto_simple_var simpleVarCycle

    ID              shift and go to state 99


state 79

    (23) simpleVarCycle -> empty .

    SEMICOLON       reduce using rule 23 (simpleVarCycle -> empty .)


state 80

    (25) array -> RENGLON type ARROW ID LBRACKET CTEI . RBRACKET punto_array arrayCycle SEMICOLON

    RBRACKET        shift and go to state 100


state 81

    (29) matrix -> TABLA type ARROW ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    RBRACKET        shift and go to state 101


state 82

    (6) inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto inicio_estatutos RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 102


state 83

    (7) inicio_estatutos -> estatutos_opciones inicio_estatutos .

    RBRACE          reduce using rule 7 (inicio_estatutos -> estatutos_opciones inicio_estatutos .)


state 84

    (56) asignar -> variable ASSIGN . push_op_igual hyper_exp check_op_igual SEMICOLON
    (62) push_op_igual -> .

    LPAREN          reduce using rule 62 (push_op_igual -> .)
    ID              reduce using rule 62 (push_op_igual -> .)
    CTEI            reduce using rule 62 (push_op_igual -> .)
    CTEF            reduce using rule 62 (push_op_igual -> .)
    CTECHAR         reduce using rule 62 (push_op_igual -> .)

    push_op_igual                  shift and go to state 103

state 85

    (128) llamada_func_void -> ID LPAREN . punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON
    (130) punto_func_exists -> .

    LPAREN          reduce using rule 130 (punto_func_exists -> .)
    ID              reduce using rule 130 (punto_func_exists -> .)
    CTEI            reduce using rule 130 (punto_func_exists -> .)
    CTEF            reduce using rule 130 (punto_func_exists -> .)
    CTECHAR         reduce using rule 130 (punto_func_exists -> .)
    RPAREN          reduce using rule 130 (punto_func_exists -> .)

    punto_func_exists              shift and go to state 104

state 86

    (57) variable -> ID variable_aux .

    ASSIGN          reduce using rule 57 (variable -> ID variable_aux .)
    SEMICOLON       reduce using rule 57 (variable -> ID variable_aux .)


state 87

    (58) variable_aux -> LBRACKET . exp RBRACKET
    (59) variable_aux -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (96) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    exp                            shift and go to state 105
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 88

    (60) variable_aux -> punto_push_id .

    ASSIGN          reduce using rule 60 (variable_aux -> punto_push_id .)
    SEMICOLON       reduce using rule 60 (variable_aux -> punto_push_id .)


state 89

    (69) ciclo_for -> PORCADA ID . punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (70) punto_existe_id -> .

    ASSIGN          reduce using rule 70 (punto_existe_id -> .)

    punto_existe_id                shift and go to state 115

state 90

    (65) ciclo_while -> MIENTRAS punto_inicio_while . LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON

    LPAREN          shift and go to state 116


state 91

    (74) condicion -> SI LPAREN . hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (75) condicion -> SI LPAREN . hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (79) hyper_exp -> . super_exp hyper_exp_aux
    (86) super_exp -> . exp super_exp_aux
    (96) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    hyper_exp                      shift and go to state 117
    super_exp                      shift and go to state 118
    exp                            shift and go to state 119
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 92

    (135) imprimir -> IMPRIMIR LPAREN . imprimir_aux RPAREN SEMICOLON
    (136) imprimir_aux -> . exp push_imprimir imprimirCycle
    (137) imprimir_aux -> . CTESTRING push_imprimir imprimirCycle
    (96) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    CTESTRING       shift and go to state 122
    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    imprimir_aux                   shift and go to state 120
    exp                            shift and go to state 121
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 93

    (64) leer -> LEER variable . SEMICOLON

    SEMICOLON       shift and go to state 123


state 94

    (57) variable -> ID . variable_aux
    (58) variable_aux -> . LBRACKET exp RBRACKET
    (59) variable_aux -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (60) variable_aux -> . punto_push_id
    (61) punto_push_id -> .

    LBRACKET        shift and go to state 87
    SEMICOLON       reduce using rule 61 (punto_push_id -> .)

    variable_aux                   shift and go to state 86
    punto_push_id                  shift and go to state 88

state 95

    (33) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter . RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    RPAREN          shift and go to state 124


state 96

    (34) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN . LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    LBRACE          shift and go to state 125


state 97

    (38) parameter -> type ID . punto_add_parameter parameterCycle
    (42) punto_add_parameter -> .

    COMMA           reduce using rule 42 (punto_add_parameter -> .)
    RPAREN          reduce using rule 42 (punto_add_parameter -> .)

    punto_add_parameter            shift and go to state 126

state 98

    (21) simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .

    VARIABLE        reduce using rule 21 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    RENGLON         reduce using rule 21 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    TABLA           reduce using rule 21 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    INICIO          reduce using rule 21 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    FUNCION         reduce using rule 21 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    REGRESAR        reduce using rule 21 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    ID              reduce using rule 21 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    PORCADA         reduce using rule 21 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    MIENTRAS        reduce using rule 21 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    SI              reduce using rule 21 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 21 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    LEER            reduce using rule 21 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)


state 99

    (22) simpleVarCycle -> COMMA ID . punto_simple_var simpleVarCycle
    (24) punto_simple_var -> .

    COMMA           reduce using rule 24 (punto_simple_var -> .)
    SEMICOLON       reduce using rule 24 (punto_simple_var -> .)

    punto_simple_var               shift and go to state 127

state 100

    (25) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET . punto_array arrayCycle SEMICOLON
    (28) punto_array -> .

    COMMA           reduce using rule 28 (punto_array -> .)
    SEMICOLON       reduce using rule 28 (punto_array -> .)

    punto_array                    shift and go to state 128

state 101

    (29) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    LBRACKET        shift and go to state 129


state 102

    (6) inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto inicio_estatutos RBRACE SEMICOLON .

    $end            reduce using rule 6 (inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto inicio_estatutos RBRACE SEMICOLON .)


state 103

    (56) asignar -> variable ASSIGN push_op_igual . hyper_exp check_op_igual SEMICOLON
    (79) hyper_exp -> . super_exp hyper_exp_aux
    (86) super_exp -> . exp super_exp_aux
    (96) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    hyper_exp                      shift and go to state 130
    super_exp                      shift and go to state 118
    exp                            shift and go to state 119
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 104

    (128) llamada_func_void -> ID LPAREN punto_func_exists . punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON
    (131) punto_validate_isvoid -> .

    LPAREN          reduce using rule 131 (punto_validate_isvoid -> .)
    ID              reduce using rule 131 (punto_validate_isvoid -> .)
    CTEI            reduce using rule 131 (punto_validate_isvoid -> .)
    CTEF            reduce using rule 131 (punto_validate_isvoid -> .)
    CTECHAR         reduce using rule 131 (punto_validate_isvoid -> .)
    RPAREN          reduce using rule 131 (punto_validate_isvoid -> .)

    punto_validate_isvoid          shift and go to state 131

state 105

    (58) variable_aux -> LBRACKET exp . RBRACKET
    (59) variable_aux -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET

    RBRACKET        shift and go to state 132


state 106

    (96) exp -> term . check_op_masmenos exp_aux
    (101) check_op_masmenos -> .

    PLUS            reduce using rule 101 (check_op_masmenos -> .)
    MINUS           reduce using rule 101 (check_op_masmenos -> .)
    RBRACKET        reduce using rule 101 (check_op_masmenos -> .)
    GREATER         reduce using rule 101 (check_op_masmenos -> .)
    LESS            reduce using rule 101 (check_op_masmenos -> .)
    GREATEREQ       reduce using rule 101 (check_op_masmenos -> .)
    LESSEQ          reduce using rule 101 (check_op_masmenos -> .)
    NOTEQUAL        reduce using rule 101 (check_op_masmenos -> .)
    EQUAL           reduce using rule 101 (check_op_masmenos -> .)
    Y               reduce using rule 101 (check_op_masmenos -> .)
    O               reduce using rule 101 (check_op_masmenos -> .)
    LPAREN          reduce using rule 101 (check_op_masmenos -> .)
    ID              reduce using rule 101 (check_op_masmenos -> .)
    CTEI            reduce using rule 101 (check_op_masmenos -> .)
    CTEF            reduce using rule 101 (check_op_masmenos -> .)
    CTECHAR         reduce using rule 101 (check_op_masmenos -> .)
    RPAREN          reduce using rule 101 (check_op_masmenos -> .)
    COMMA           reduce using rule 101 (check_op_masmenos -> .)
    SEMICOLON       reduce using rule 101 (check_op_masmenos -> .)
    HASTA           reduce using rule 101 (check_op_masmenos -> .)
    LBRACE          reduce using rule 101 (check_op_masmenos -> .)

    check_op_masmenos              shift and go to state 133

state 107

    (102) term -> factor . check_op_pordiv term_aux
    (105) check_op_pordiv -> .

    TIMES           reduce using rule 105 (check_op_pordiv -> .)
    DIVIDE          reduce using rule 105 (check_op_pordiv -> .)
    PLUS            reduce using rule 105 (check_op_pordiv -> .)
    MINUS           reduce using rule 105 (check_op_pordiv -> .)
    RBRACKET        reduce using rule 105 (check_op_pordiv -> .)
    GREATER         reduce using rule 105 (check_op_pordiv -> .)
    LESS            reduce using rule 105 (check_op_pordiv -> .)
    GREATEREQ       reduce using rule 105 (check_op_pordiv -> .)
    LESSEQ          reduce using rule 105 (check_op_pordiv -> .)
    NOTEQUAL        reduce using rule 105 (check_op_pordiv -> .)
    EQUAL           reduce using rule 105 (check_op_pordiv -> .)
    Y               reduce using rule 105 (check_op_pordiv -> .)
    O               reduce using rule 105 (check_op_pordiv -> .)
    LPAREN          reduce using rule 105 (check_op_pordiv -> .)
    ID              reduce using rule 105 (check_op_pordiv -> .)
    CTEI            reduce using rule 105 (check_op_pordiv -> .)
    CTEF            reduce using rule 105 (check_op_pordiv -> .)
    CTECHAR         reduce using rule 105 (check_op_pordiv -> .)
    RPAREN          reduce using rule 105 (check_op_pordiv -> .)
    COMMA           reduce using rule 105 (check_op_pordiv -> .)
    SEMICOLON       reduce using rule 105 (check_op_pordiv -> .)
    HASTA           reduce using rule 105 (check_op_pordiv -> .)
    LBRACE          reduce using rule 105 (check_op_pordiv -> .)

    check_op_pordiv                shift and go to state 134

state 108

    (108) factor -> LPAREN . meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (117) meter_fondo_falso -> .

    LPAREN          reduce using rule 117 (meter_fondo_falso -> .)
    ID              reduce using rule 117 (meter_fondo_falso -> .)
    CTEI            reduce using rule 117 (meter_fondo_falso -> .)
    CTEF            reduce using rule 117 (meter_fondo_falso -> .)
    CTECHAR         reduce using rule 117 (meter_fondo_falso -> .)

    meter_fondo_falso              shift and go to state 135

state 109

    (109) factor -> factor_constante .

    TIMES           reduce using rule 109 (factor -> factor_constante .)
    DIVIDE          reduce using rule 109 (factor -> factor_constante .)
    PLUS            reduce using rule 109 (factor -> factor_constante .)
    MINUS           reduce using rule 109 (factor -> factor_constante .)
    RBRACKET        reduce using rule 109 (factor -> factor_constante .)
    GREATER         reduce using rule 109 (factor -> factor_constante .)
    LESS            reduce using rule 109 (factor -> factor_constante .)
    GREATEREQ       reduce using rule 109 (factor -> factor_constante .)
    LESSEQ          reduce using rule 109 (factor -> factor_constante .)
    NOTEQUAL        reduce using rule 109 (factor -> factor_constante .)
    EQUAL           reduce using rule 109 (factor -> factor_constante .)
    Y               reduce using rule 109 (factor -> factor_constante .)
    O               reduce using rule 109 (factor -> factor_constante .)
    LPAREN          reduce using rule 109 (factor -> factor_constante .)
    ID              reduce using rule 109 (factor -> factor_constante .)
    CTEI            reduce using rule 109 (factor -> factor_constante .)
    CTEF            reduce using rule 109 (factor -> factor_constante .)
    CTECHAR         reduce using rule 109 (factor -> factor_constante .)
    RPAREN          reduce using rule 109 (factor -> factor_constante .)
    COMMA           reduce using rule 109 (factor -> factor_constante .)
    SEMICOLON       reduce using rule 109 (factor -> factor_constante .)
    HASTA           reduce using rule 109 (factor -> factor_constante .)
    LBRACE          reduce using rule 109 (factor -> factor_constante .)


state 110

    (110) factor -> llamada_func_return .

    TIMES           reduce using rule 110 (factor -> llamada_func_return .)
    DIVIDE          reduce using rule 110 (factor -> llamada_func_return .)
    PLUS            reduce using rule 110 (factor -> llamada_func_return .)
    MINUS           reduce using rule 110 (factor -> llamada_func_return .)
    RBRACKET        reduce using rule 110 (factor -> llamada_func_return .)
    GREATER         reduce using rule 110 (factor -> llamada_func_return .)
    LESS            reduce using rule 110 (factor -> llamada_func_return .)
    GREATEREQ       reduce using rule 110 (factor -> llamada_func_return .)
    LESSEQ          reduce using rule 110 (factor -> llamada_func_return .)
    NOTEQUAL        reduce using rule 110 (factor -> llamada_func_return .)
    EQUAL           reduce using rule 110 (factor -> llamada_func_return .)
    Y               reduce using rule 110 (factor -> llamada_func_return .)
    O               reduce using rule 110 (factor -> llamada_func_return .)
    LPAREN          reduce using rule 110 (factor -> llamada_func_return .)
    ID              reduce using rule 110 (factor -> llamada_func_return .)
    CTEI            reduce using rule 110 (factor -> llamada_func_return .)
    CTEF            reduce using rule 110 (factor -> llamada_func_return .)
    CTECHAR         reduce using rule 110 (factor -> llamada_func_return .)
    RPAREN          reduce using rule 110 (factor -> llamada_func_return .)
    COMMA           reduce using rule 110 (factor -> llamada_func_return .)
    SEMICOLON       reduce using rule 110 (factor -> llamada_func_return .)
    HASTA           reduce using rule 110 (factor -> llamada_func_return .)
    LBRACE          reduce using rule 110 (factor -> llamada_func_return .)


state 111

    (111) factor -> ID . LBRACKET hyper_exp RBRACKET
    (112) factor -> ID . LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> ID . push_id
    (129) llamada_func_return -> ID . LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub
    (121) push_id -> .

  ! shift/reduce conflict for LPAREN resolved as shift
    LBRACKET        shift and go to state 136
    LPAREN          shift and go to state 138
    TIMES           reduce using rule 121 (push_id -> .)
    DIVIDE          reduce using rule 121 (push_id -> .)
    PLUS            reduce using rule 121 (push_id -> .)
    MINUS           reduce using rule 121 (push_id -> .)
    RBRACKET        reduce using rule 121 (push_id -> .)
    GREATER         reduce using rule 121 (push_id -> .)
    LESS            reduce using rule 121 (push_id -> .)
    GREATEREQ       reduce using rule 121 (push_id -> .)
    LESSEQ          reduce using rule 121 (push_id -> .)
    NOTEQUAL        reduce using rule 121 (push_id -> .)
    EQUAL           reduce using rule 121 (push_id -> .)
    Y               reduce using rule 121 (push_id -> .)
    O               reduce using rule 121 (push_id -> .)
    ID              reduce using rule 121 (push_id -> .)
    CTEI            reduce using rule 121 (push_id -> .)
    CTEF            reduce using rule 121 (push_id -> .)
    CTECHAR         reduce using rule 121 (push_id -> .)
    RPAREN          reduce using rule 121 (push_id -> .)
    COMMA           reduce using rule 121 (push_id -> .)
    SEMICOLON       reduce using rule 121 (push_id -> .)
    HASTA           reduce using rule 121 (push_id -> .)
    LBRACE          reduce using rule 121 (push_id -> .)

  ! LPAREN          [ reduce using rule 121 (push_id -> .) ]

    push_id                        shift and go to state 137

state 112

    (114) factor_constante -> CTEI . push_int
    (119) push_int -> .

    TIMES           reduce using rule 119 (push_int -> .)
    DIVIDE          reduce using rule 119 (push_int -> .)
    PLUS            reduce using rule 119 (push_int -> .)
    MINUS           reduce using rule 119 (push_int -> .)
    RBRACKET        reduce using rule 119 (push_int -> .)
    GREATER         reduce using rule 119 (push_int -> .)
    LESS            reduce using rule 119 (push_int -> .)
    GREATEREQ       reduce using rule 119 (push_int -> .)
    LESSEQ          reduce using rule 119 (push_int -> .)
    NOTEQUAL        reduce using rule 119 (push_int -> .)
    EQUAL           reduce using rule 119 (push_int -> .)
    Y               reduce using rule 119 (push_int -> .)
    O               reduce using rule 119 (push_int -> .)
    LPAREN          reduce using rule 119 (push_int -> .)
    ID              reduce using rule 119 (push_int -> .)
    CTEI            reduce using rule 119 (push_int -> .)
    CTEF            reduce using rule 119 (push_int -> .)
    CTECHAR         reduce using rule 119 (push_int -> .)
    RPAREN          reduce using rule 119 (push_int -> .)
    COMMA           reduce using rule 119 (push_int -> .)
    SEMICOLON       reduce using rule 119 (push_int -> .)
    HASTA           reduce using rule 119 (push_int -> .)
    LBRACE          reduce using rule 119 (push_int -> .)

    push_int                       shift and go to state 139

state 113

    (115) factor_constante -> CTEF . push_float
    (120) push_float -> .

    TIMES           reduce using rule 120 (push_float -> .)
    DIVIDE          reduce using rule 120 (push_float -> .)
    PLUS            reduce using rule 120 (push_float -> .)
    MINUS           reduce using rule 120 (push_float -> .)
    RBRACKET        reduce using rule 120 (push_float -> .)
    GREATER         reduce using rule 120 (push_float -> .)
    LESS            reduce using rule 120 (push_float -> .)
    GREATEREQ       reduce using rule 120 (push_float -> .)
    LESSEQ          reduce using rule 120 (push_float -> .)
    NOTEQUAL        reduce using rule 120 (push_float -> .)
    EQUAL           reduce using rule 120 (push_float -> .)
    Y               reduce using rule 120 (push_float -> .)
    O               reduce using rule 120 (push_float -> .)
    LPAREN          reduce using rule 120 (push_float -> .)
    ID              reduce using rule 120 (push_float -> .)
    CTEI            reduce using rule 120 (push_float -> .)
    CTEF            reduce using rule 120 (push_float -> .)
    CTECHAR         reduce using rule 120 (push_float -> .)
    RPAREN          reduce using rule 120 (push_float -> .)
    COMMA           reduce using rule 120 (push_float -> .)
    SEMICOLON       reduce using rule 120 (push_float -> .)
    HASTA           reduce using rule 120 (push_float -> .)
    LBRACE          reduce using rule 120 (push_float -> .)

    push_float                     shift and go to state 140

state 114

    (116) factor_constante -> CTECHAR . push_char
    (122) push_char -> .

    TIMES           reduce using rule 122 (push_char -> .)
    DIVIDE          reduce using rule 122 (push_char -> .)
    PLUS            reduce using rule 122 (push_char -> .)
    MINUS           reduce using rule 122 (push_char -> .)
    RBRACKET        reduce using rule 122 (push_char -> .)
    GREATER         reduce using rule 122 (push_char -> .)
    LESS            reduce using rule 122 (push_char -> .)
    GREATEREQ       reduce using rule 122 (push_char -> .)
    LESSEQ          reduce using rule 122 (push_char -> .)
    NOTEQUAL        reduce using rule 122 (push_char -> .)
    EQUAL           reduce using rule 122 (push_char -> .)
    Y               reduce using rule 122 (push_char -> .)
    O               reduce using rule 122 (push_char -> .)
    LPAREN          reduce using rule 122 (push_char -> .)
    ID              reduce using rule 122 (push_char -> .)
    CTEI            reduce using rule 122 (push_char -> .)
    CTEF            reduce using rule 122 (push_char -> .)
    CTECHAR         reduce using rule 122 (push_char -> .)
    RPAREN          reduce using rule 122 (push_char -> .)
    COMMA           reduce using rule 122 (push_char -> .)
    SEMICOLON       reduce using rule 122 (push_char -> .)
    HASTA           reduce using rule 122 (push_char -> .)
    LBRACE          reduce using rule 122 (push_char -> .)

    push_char                      shift and go to state 141

state 115

    (69) ciclo_for -> PORCADA ID punto_existe_id . ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON

    ASSIGN          shift and go to state 142


state 116

    (65) ciclo_while -> MIENTRAS punto_inicio_while LPAREN . hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (79) hyper_exp -> . super_exp hyper_exp_aux
    (86) super_exp -> . exp super_exp_aux
    (96) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    hyper_exp                      shift and go to state 143
    super_exp                      shift and go to state 118
    exp                            shift and go to state 119
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 117

    (74) condicion -> SI LPAREN hyper_exp . RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (75) condicion -> SI LPAREN hyper_exp . RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON

    RPAREN          shift and go to state 144


state 118

    (79) hyper_exp -> super_exp . hyper_exp_aux
    (80) hyper_exp_aux -> . push_op_logicos super_exp check_op_logicos
    (81) hyper_exp_aux -> . empty
    (83) push_op_logicos -> . Y
    (84) push_op_logicos -> . O
    (85) push_op_logicos -> . empty
    (141) empty -> .

    Y               shift and go to state 148
    O               shift and go to state 149
    RPAREN          reduce using rule 141 (empty -> .)
    SEMICOLON       reduce using rule 141 (empty -> .)
    RBRACKET        reduce using rule 141 (empty -> .)
    HASTA           reduce using rule 141 (empty -> .)
    LBRACE          reduce using rule 141 (empty -> .)
    LPAREN          reduce using rule 141 (empty -> .)
    ID              reduce using rule 141 (empty -> .)
    CTEI            reduce using rule 141 (empty -> .)
    CTEF            reduce using rule 141 (empty -> .)
    CTECHAR         reduce using rule 141 (empty -> .)

    hyper_exp_aux                  shift and go to state 145
    push_op_logicos                shift and go to state 146
    empty                          shift and go to state 147

state 119

    (86) super_exp -> exp . super_exp_aux
    (87) super_exp_aux -> . push_op_relacionales exp check_op_relacionales
    (88) super_exp_aux -> . empty
    (90) push_op_relacionales -> . GREATER
    (91) push_op_relacionales -> . LESS
    (92) push_op_relacionales -> . GREATEREQ
    (93) push_op_relacionales -> . LESSEQ
    (94) push_op_relacionales -> . NOTEQUAL
    (95) push_op_relacionales -> . EQUAL
    (141) empty -> .

    GREATER         shift and go to state 153
    LESS            shift and go to state 154
    GREATEREQ       shift and go to state 155
    LESSEQ          shift and go to state 156
    NOTEQUAL        shift and go to state 157
    EQUAL           shift and go to state 158
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    LPAREN          reduce using rule 141 (empty -> .)
    ID              reduce using rule 141 (empty -> .)
    CTEI            reduce using rule 141 (empty -> .)
    CTEF            reduce using rule 141 (empty -> .)
    CTECHAR         reduce using rule 141 (empty -> .)
    RPAREN          reduce using rule 141 (empty -> .)
    SEMICOLON       reduce using rule 141 (empty -> .)
    RBRACKET        reduce using rule 141 (empty -> .)
    HASTA           reduce using rule 141 (empty -> .)
    LBRACE          reduce using rule 141 (empty -> .)

    super_exp_aux                  shift and go to state 150
    push_op_relacionales           shift and go to state 151
    empty                          shift and go to state 152

state 120

    (135) imprimir -> IMPRIMIR LPAREN imprimir_aux . RPAREN SEMICOLON

    RPAREN          shift and go to state 159


state 121

    (136) imprimir_aux -> exp . push_imprimir imprimirCycle
    (140) push_imprimir -> .

    COMMA           reduce using rule 140 (push_imprimir -> .)
    RPAREN          reduce using rule 140 (push_imprimir -> .)

    push_imprimir                  shift and go to state 160

state 122

    (137) imprimir_aux -> CTESTRING . push_imprimir imprimirCycle
    (140) push_imprimir -> .

    COMMA           reduce using rule 140 (push_imprimir -> .)
    RPAREN          reduce using rule 140 (push_imprimir -> .)

    push_imprimir                  shift and go to state 161

state 123

    (64) leer -> LEER variable SEMICOLON .

    ID              reduce using rule 64 (leer -> LEER variable SEMICOLON .)
    PORCADA         reduce using rule 64 (leer -> LEER variable SEMICOLON .)
    MIENTRAS        reduce using rule 64 (leer -> LEER variable SEMICOLON .)
    SI              reduce using rule 64 (leer -> LEER variable SEMICOLON .)
    IMPRIMIR        reduce using rule 64 (leer -> LEER variable SEMICOLON .)
    LEER            reduce using rule 64 (leer -> LEER variable SEMICOLON .)
    RBRACE          reduce using rule 64 (leer -> LEER variable SEMICOLON .)
    REGRESAR        reduce using rule 64 (leer -> LEER variable SEMICOLON .)


state 124

    (33) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN . LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    LBRACE          shift and go to state 162


state 125

    (34) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE . dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (10) dec_var_cycle -> . dec_var dec_var_cycle
    (11) dec_var_cycle -> . empty
    (15) dec_var -> . simple_var
    (16) dec_var -> . array
    (17) dec_var -> . matrix
    (141) empty -> .
    (21) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (25) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (29) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    REGRESAR        reduce using rule 141 (empty -> .)
    ID              reduce using rule 141 (empty -> .)
    PORCADA         reduce using rule 141 (empty -> .)
    MIENTRAS        reduce using rule 141 (empty -> .)
    SI              reduce using rule 141 (empty -> .)
    IMPRIMIR        reduce using rule 141 (empty -> .)
    LEER            reduce using rule 141 (empty -> .)
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

    dec_var_cycle                  shift and go to state 163
    dec_var                        shift and go to state 10
    empty                          shift and go to state 11
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 126

    (38) parameter -> type ID punto_add_parameter . parameterCycle
    (40) parameterCycle -> . COMMA type ID punto_add_parameter parameterCycle
    (41) parameterCycle -> . empty
    (141) empty -> .

    COMMA           shift and go to state 165
    RPAREN          reduce using rule 141 (empty -> .)

    parameterCycle                 shift and go to state 164
    empty                          shift and go to state 166

state 127

    (22) simpleVarCycle -> COMMA ID punto_simple_var . simpleVarCycle
    (22) simpleVarCycle -> . COMMA ID punto_simple_var simpleVarCycle
    (23) simpleVarCycle -> . empty
    (141) empty -> .

    COMMA           shift and go to state 78
    SEMICOLON       reduce using rule 141 (empty -> .)

    simpleVarCycle                 shift and go to state 167
    empty                          shift and go to state 79

state 128

    (25) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array . arrayCycle SEMICOLON
    (26) arrayCycle -> . COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle
    (27) arrayCycle -> . empty
    (141) empty -> .

    COMMA           shift and go to state 169
    SEMICOLON       reduce using rule 141 (empty -> .)

    arrayCycle                     shift and go to state 168
    empty                          shift and go to state 170

state 129

    (29) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    CTEI            shift and go to state 171


state 130

    (56) asignar -> variable ASSIGN push_op_igual hyper_exp . check_op_igual SEMICOLON
    (63) check_op_igual -> .

    SEMICOLON       reduce using rule 63 (check_op_igual -> .)

    check_op_igual                 shift and go to state 172

state 131

    (128) llamada_func_void -> ID LPAREN punto_func_exists punto_validate_isvoid . punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON
    (132) punto_create_era -> .

    LPAREN          reduce using rule 132 (punto_create_era -> .)
    ID              reduce using rule 132 (punto_create_era -> .)
    CTEI            reduce using rule 132 (punto_create_era -> .)
    CTEF            reduce using rule 132 (punto_create_era -> .)
    CTECHAR         reduce using rule 132 (punto_create_era -> .)
    RPAREN          reduce using rule 132 (punto_create_era -> .)

    punto_create_era               shift and go to state 173

state 132

    (58) variable_aux -> LBRACKET exp RBRACKET .
    (59) variable_aux -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    ASSIGN          reduce using rule 58 (variable_aux -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 58 (variable_aux -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 174


state 133

    (96) exp -> term check_op_masmenos . exp_aux
    (97) exp_aux -> . push_op_exp_masmenos exp
    (98) exp_aux -> . empty
    (99) push_op_exp_masmenos -> . PLUS
    (100) push_op_exp_masmenos -> . MINUS
    (141) empty -> .

    PLUS            shift and go to state 178
    MINUS           shift and go to state 179
    RBRACKET        reduce using rule 141 (empty -> .)
    GREATER         reduce using rule 141 (empty -> .)
    LESS            reduce using rule 141 (empty -> .)
    GREATEREQ       reduce using rule 141 (empty -> .)
    LESSEQ          reduce using rule 141 (empty -> .)
    NOTEQUAL        reduce using rule 141 (empty -> .)
    EQUAL           reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    LPAREN          reduce using rule 141 (empty -> .)
    ID              reduce using rule 141 (empty -> .)
    CTEI            reduce using rule 141 (empty -> .)
    CTEF            reduce using rule 141 (empty -> .)
    CTECHAR         reduce using rule 141 (empty -> .)
    RPAREN          reduce using rule 141 (empty -> .)
    COMMA           reduce using rule 141 (empty -> .)
    SEMICOLON       reduce using rule 141 (empty -> .)
    HASTA           reduce using rule 141 (empty -> .)
    LBRACE          reduce using rule 141 (empty -> .)

    exp_aux                        shift and go to state 175
    push_op_exp_masmenos           shift and go to state 176
    empty                          shift and go to state 177

state 134

    (102) term -> factor check_op_pordiv . term_aux
    (103) term_aux -> . push_op_exp_pordiv term
    (104) term_aux -> . empty
    (106) push_op_exp_pordiv -> . TIMES
    (107) push_op_exp_pordiv -> . DIVIDE
    (141) empty -> .

    TIMES           shift and go to state 183
    DIVIDE          shift and go to state 184
    PLUS            reduce using rule 141 (empty -> .)
    MINUS           reduce using rule 141 (empty -> .)
    RBRACKET        reduce using rule 141 (empty -> .)
    GREATER         reduce using rule 141 (empty -> .)
    LESS            reduce using rule 141 (empty -> .)
    GREATEREQ       reduce using rule 141 (empty -> .)
    LESSEQ          reduce using rule 141 (empty -> .)
    NOTEQUAL        reduce using rule 141 (empty -> .)
    EQUAL           reduce using rule 141 (empty -> .)
    Y               reduce using rule 141 (empty -> .)
    O               reduce using rule 141 (empty -> .)
    LPAREN          reduce using rule 141 (empty -> .)
    ID              reduce using rule 141 (empty -> .)
    CTEI            reduce using rule 141 (empty -> .)
    CTEF            reduce using rule 141 (empty -> .)
    CTECHAR         reduce using rule 141 (empty -> .)
    RPAREN          reduce using rule 141 (empty -> .)
    COMMA           reduce using rule 141 (empty -> .)
    SEMICOLON       reduce using rule 141 (empty -> .)
    HASTA           reduce using rule 141 (empty -> .)
    LBRACE          reduce using rule 141 (empty -> .)

    term_aux                       shift and go to state 180
    push_op_exp_pordiv             shift and go to state 181
    empty                          shift and go to state 182

state 135

    (108) factor -> LPAREN meter_fondo_falso . hyper_exp RPAREN quitar_fondo_falso
    (79) hyper_exp -> . super_exp hyper_exp_aux
    (86) super_exp -> . exp super_exp_aux
    (96) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    hyper_exp                      shift and go to state 185
    super_exp                      shift and go to state 118
    exp                            shift and go to state 119
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 136

    (111) factor -> ID LBRACKET . hyper_exp RBRACKET
    (112) factor -> ID LBRACKET . hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (79) hyper_exp -> . super_exp hyper_exp_aux
    (86) super_exp -> . exp super_exp_aux
    (96) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    hyper_exp                      shift and go to state 186
    super_exp                      shift and go to state 118
    exp                            shift and go to state 119
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 137

    (113) factor -> ID push_id .

    TIMES           reduce using rule 113 (factor -> ID push_id .)
    DIVIDE          reduce using rule 113 (factor -> ID push_id .)
    PLUS            reduce using rule 113 (factor -> ID push_id .)
    MINUS           reduce using rule 113 (factor -> ID push_id .)
    RBRACKET        reduce using rule 113 (factor -> ID push_id .)
    GREATER         reduce using rule 113 (factor -> ID push_id .)
    LESS            reduce using rule 113 (factor -> ID push_id .)
    GREATEREQ       reduce using rule 113 (factor -> ID push_id .)
    LESSEQ          reduce using rule 113 (factor -> ID push_id .)
    NOTEQUAL        reduce using rule 113 (factor -> ID push_id .)
    EQUAL           reduce using rule 113 (factor -> ID push_id .)
    Y               reduce using rule 113 (factor -> ID push_id .)
    O               reduce using rule 113 (factor -> ID push_id .)
    LPAREN          reduce using rule 113 (factor -> ID push_id .)
    ID              reduce using rule 113 (factor -> ID push_id .)
    CTEI            reduce using rule 113 (factor -> ID push_id .)
    CTEF            reduce using rule 113 (factor -> ID push_id .)
    CTECHAR         reduce using rule 113 (factor -> ID push_id .)
    RPAREN          reduce using rule 113 (factor -> ID push_id .)
    COMMA           reduce using rule 113 (factor -> ID push_id .)
    SEMICOLON       reduce using rule 113 (factor -> ID push_id .)
    HASTA           reduce using rule 113 (factor -> ID push_id .)
    LBRACE          reduce using rule 113 (factor -> ID push_id .)


state 138

    (129) llamada_func_return -> ID LPAREN . punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub
    (130) punto_func_exists -> .

    LPAREN          reduce using rule 130 (punto_func_exists -> .)
    ID              reduce using rule 130 (punto_func_exists -> .)
    CTEI            reduce using rule 130 (punto_func_exists -> .)
    CTEF            reduce using rule 130 (punto_func_exists -> .)
    CTECHAR         reduce using rule 130 (punto_func_exists -> .)
    RPAREN          reduce using rule 130 (punto_func_exists -> .)

    punto_func_exists              shift and go to state 187

state 139

    (114) factor_constante -> CTEI push_int .

    TIMES           reduce using rule 114 (factor_constante -> CTEI push_int .)
    DIVIDE          reduce using rule 114 (factor_constante -> CTEI push_int .)
    PLUS            reduce using rule 114 (factor_constante -> CTEI push_int .)
    MINUS           reduce using rule 114 (factor_constante -> CTEI push_int .)
    RBRACKET        reduce using rule 114 (factor_constante -> CTEI push_int .)
    GREATER         reduce using rule 114 (factor_constante -> CTEI push_int .)
    LESS            reduce using rule 114 (factor_constante -> CTEI push_int .)
    GREATEREQ       reduce using rule 114 (factor_constante -> CTEI push_int .)
    LESSEQ          reduce using rule 114 (factor_constante -> CTEI push_int .)
    NOTEQUAL        reduce using rule 114 (factor_constante -> CTEI push_int .)
    EQUAL           reduce using rule 114 (factor_constante -> CTEI push_int .)
    Y               reduce using rule 114 (factor_constante -> CTEI push_int .)
    O               reduce using rule 114 (factor_constante -> CTEI push_int .)
    LPAREN          reduce using rule 114 (factor_constante -> CTEI push_int .)
    ID              reduce using rule 114 (factor_constante -> CTEI push_int .)
    CTEI            reduce using rule 114 (factor_constante -> CTEI push_int .)
    CTEF            reduce using rule 114 (factor_constante -> CTEI push_int .)
    CTECHAR         reduce using rule 114 (factor_constante -> CTEI push_int .)
    RPAREN          reduce using rule 114 (factor_constante -> CTEI push_int .)
    COMMA           reduce using rule 114 (factor_constante -> CTEI push_int .)
    SEMICOLON       reduce using rule 114 (factor_constante -> CTEI push_int .)
    HASTA           reduce using rule 114 (factor_constante -> CTEI push_int .)
    LBRACE          reduce using rule 114 (factor_constante -> CTEI push_int .)


state 140

    (115) factor_constante -> CTEF push_float .

    TIMES           reduce using rule 115 (factor_constante -> CTEF push_float .)
    DIVIDE          reduce using rule 115 (factor_constante -> CTEF push_float .)
    PLUS            reduce using rule 115 (factor_constante -> CTEF push_float .)
    MINUS           reduce using rule 115 (factor_constante -> CTEF push_float .)
    RBRACKET        reduce using rule 115 (factor_constante -> CTEF push_float .)
    GREATER         reduce using rule 115 (factor_constante -> CTEF push_float .)
    LESS            reduce using rule 115 (factor_constante -> CTEF push_float .)
    GREATEREQ       reduce using rule 115 (factor_constante -> CTEF push_float .)
    LESSEQ          reduce using rule 115 (factor_constante -> CTEF push_float .)
    NOTEQUAL        reduce using rule 115 (factor_constante -> CTEF push_float .)
    EQUAL           reduce using rule 115 (factor_constante -> CTEF push_float .)
    Y               reduce using rule 115 (factor_constante -> CTEF push_float .)
    O               reduce using rule 115 (factor_constante -> CTEF push_float .)
    LPAREN          reduce using rule 115 (factor_constante -> CTEF push_float .)
    ID              reduce using rule 115 (factor_constante -> CTEF push_float .)
    CTEI            reduce using rule 115 (factor_constante -> CTEF push_float .)
    CTEF            reduce using rule 115 (factor_constante -> CTEF push_float .)
    CTECHAR         reduce using rule 115 (factor_constante -> CTEF push_float .)
    RPAREN          reduce using rule 115 (factor_constante -> CTEF push_float .)
    COMMA           reduce using rule 115 (factor_constante -> CTEF push_float .)
    SEMICOLON       reduce using rule 115 (factor_constante -> CTEF push_float .)
    HASTA           reduce using rule 115 (factor_constante -> CTEF push_float .)
    LBRACE          reduce using rule 115 (factor_constante -> CTEF push_float .)


state 141

    (116) factor_constante -> CTECHAR push_char .

    TIMES           reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    DIVIDE          reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    PLUS            reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    MINUS           reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    RBRACKET        reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    GREATER         reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    LESS            reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    GREATEREQ       reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    LESSEQ          reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    NOTEQUAL        reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    EQUAL           reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    Y               reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    O               reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    LPAREN          reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    ID              reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    CTEI            reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    CTEF            reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    CTECHAR         reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    RPAREN          reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    COMMA           reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    SEMICOLON       reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    HASTA           reduce using rule 116 (factor_constante -> CTECHAR push_char .)
    LBRACE          reduce using rule 116 (factor_constante -> CTECHAR push_char .)


state 142

    (69) ciclo_for -> PORCADA ID punto_existe_id ASSIGN . hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (79) hyper_exp -> . super_exp hyper_exp_aux
    (86) super_exp -> . exp super_exp_aux
    (96) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    hyper_exp                      shift and go to state 188
    super_exp                      shift and go to state 118
    exp                            shift and go to state 119
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 143

    (65) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp . RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON

    RPAREN          shift and go to state 189


state 144

    (74) condicion -> SI LPAREN hyper_exp RPAREN . punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (75) condicion -> SI LPAREN hyper_exp RPAREN . punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (76) punto_si -> .

    LBRACE          reduce using rule 76 (punto_si -> .)

    punto_si                       shift and go to state 190

state 145

    (79) hyper_exp -> super_exp hyper_exp_aux .

    RPAREN          reduce using rule 79 (hyper_exp -> super_exp hyper_exp_aux .)
    SEMICOLON       reduce using rule 79 (hyper_exp -> super_exp hyper_exp_aux .)
    RBRACKET        reduce using rule 79 (hyper_exp -> super_exp hyper_exp_aux .)
    HASTA           reduce using rule 79 (hyper_exp -> super_exp hyper_exp_aux .)
    LBRACE          reduce using rule 79 (hyper_exp -> super_exp hyper_exp_aux .)


state 146

    (80) hyper_exp_aux -> push_op_logicos . super_exp check_op_logicos
    (86) super_exp -> . exp super_exp_aux
    (96) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    super_exp                      shift and go to state 191
    exp                            shift and go to state 119
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 147

    (81) hyper_exp_aux -> empty .
    (85) push_op_logicos -> empty .

    RPAREN          reduce using rule 81 (hyper_exp_aux -> empty .)
    SEMICOLON       reduce using rule 81 (hyper_exp_aux -> empty .)
    RBRACKET        reduce using rule 81 (hyper_exp_aux -> empty .)
    HASTA           reduce using rule 81 (hyper_exp_aux -> empty .)
    LBRACE          reduce using rule 81 (hyper_exp_aux -> empty .)
    LPAREN          reduce using rule 85 (push_op_logicos -> empty .)
    ID              reduce using rule 85 (push_op_logicos -> empty .)
    CTEI            reduce using rule 85 (push_op_logicos -> empty .)
    CTEF            reduce using rule 85 (push_op_logicos -> empty .)
    CTECHAR         reduce using rule 85 (push_op_logicos -> empty .)


state 148

    (83) push_op_logicos -> Y .

    LPAREN          reduce using rule 83 (push_op_logicos -> Y .)
    ID              reduce using rule 83 (push_op_logicos -> Y .)
    CTEI            reduce using rule 83 (push_op_logicos -> Y .)
    CTEF            reduce using rule 83 (push_op_logicos -> Y .)
    CTECHAR         reduce using rule 83 (push_op_logicos -> Y .)


state 149

    (84) push_op_logicos -> O .

    LPAREN          reduce using rule 84 (push_op_logicos -> O .)
    ID              reduce using rule 84 (push_op_logicos -> O .)
    CTEI            reduce using rule 84 (push_op_logicos -> O .)
    CTEF            reduce using rule 84 (push_op_logicos -> O .)
    CTECHAR         reduce using rule 84 (push_op_logicos -> O .)


state 150

    (86) super_exp -> exp super_exp_aux .

    Y               reduce using rule 86 (super_exp -> exp super_exp_aux .)
    O               reduce using rule 86 (super_exp -> exp super_exp_aux .)
    LPAREN          reduce using rule 86 (super_exp -> exp super_exp_aux .)
    ID              reduce using rule 86 (super_exp -> exp super_exp_aux .)
    CTEI            reduce using rule 86 (super_exp -> exp super_exp_aux .)
    CTEF            reduce using rule 86 (super_exp -> exp super_exp_aux .)
    CTECHAR         reduce using rule 86 (super_exp -> exp super_exp_aux .)
    RPAREN          reduce using rule 86 (super_exp -> exp super_exp_aux .)
    SEMICOLON       reduce using rule 86 (super_exp -> exp super_exp_aux .)
    RBRACKET        reduce using rule 86 (super_exp -> exp super_exp_aux .)
    HASTA           reduce using rule 86 (super_exp -> exp super_exp_aux .)
    LBRACE          reduce using rule 86 (super_exp -> exp super_exp_aux .)


state 151

    (87) super_exp_aux -> push_op_relacionales . exp check_op_relacionales
    (96) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    exp                            shift and go to state 192
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 152

    (88) super_exp_aux -> empty .

    Y               reduce using rule 88 (super_exp_aux -> empty .)
    O               reduce using rule 88 (super_exp_aux -> empty .)
    LPAREN          reduce using rule 88 (super_exp_aux -> empty .)
    ID              reduce using rule 88 (super_exp_aux -> empty .)
    CTEI            reduce using rule 88 (super_exp_aux -> empty .)
    CTEF            reduce using rule 88 (super_exp_aux -> empty .)
    CTECHAR         reduce using rule 88 (super_exp_aux -> empty .)
    RPAREN          reduce using rule 88 (super_exp_aux -> empty .)
    SEMICOLON       reduce using rule 88 (super_exp_aux -> empty .)
    RBRACKET        reduce using rule 88 (super_exp_aux -> empty .)
    HASTA           reduce using rule 88 (super_exp_aux -> empty .)
    LBRACE          reduce using rule 88 (super_exp_aux -> empty .)


state 153

    (90) push_op_relacionales -> GREATER .

    LPAREN          reduce using rule 90 (push_op_relacionales -> GREATER .)
    ID              reduce using rule 90 (push_op_relacionales -> GREATER .)
    CTEI            reduce using rule 90 (push_op_relacionales -> GREATER .)
    CTEF            reduce using rule 90 (push_op_relacionales -> GREATER .)
    CTECHAR         reduce using rule 90 (push_op_relacionales -> GREATER .)


state 154

    (91) push_op_relacionales -> LESS .

    LPAREN          reduce using rule 91 (push_op_relacionales -> LESS .)
    ID              reduce using rule 91 (push_op_relacionales -> LESS .)
    CTEI            reduce using rule 91 (push_op_relacionales -> LESS .)
    CTEF            reduce using rule 91 (push_op_relacionales -> LESS .)
    CTECHAR         reduce using rule 91 (push_op_relacionales -> LESS .)


state 155

    (92) push_op_relacionales -> GREATEREQ .

    LPAREN          reduce using rule 92 (push_op_relacionales -> GREATEREQ .)
    ID              reduce using rule 92 (push_op_relacionales -> GREATEREQ .)
    CTEI            reduce using rule 92 (push_op_relacionales -> GREATEREQ .)
    CTEF            reduce using rule 92 (push_op_relacionales -> GREATEREQ .)
    CTECHAR         reduce using rule 92 (push_op_relacionales -> GREATEREQ .)


state 156

    (93) push_op_relacionales -> LESSEQ .

    LPAREN          reduce using rule 93 (push_op_relacionales -> LESSEQ .)
    ID              reduce using rule 93 (push_op_relacionales -> LESSEQ .)
    CTEI            reduce using rule 93 (push_op_relacionales -> LESSEQ .)
    CTEF            reduce using rule 93 (push_op_relacionales -> LESSEQ .)
    CTECHAR         reduce using rule 93 (push_op_relacionales -> LESSEQ .)


state 157

    (94) push_op_relacionales -> NOTEQUAL .

    LPAREN          reduce using rule 94 (push_op_relacionales -> NOTEQUAL .)
    ID              reduce using rule 94 (push_op_relacionales -> NOTEQUAL .)
    CTEI            reduce using rule 94 (push_op_relacionales -> NOTEQUAL .)
    CTEF            reduce using rule 94 (push_op_relacionales -> NOTEQUAL .)
    CTECHAR         reduce using rule 94 (push_op_relacionales -> NOTEQUAL .)


state 158

    (95) push_op_relacionales -> EQUAL .

    LPAREN          reduce using rule 95 (push_op_relacionales -> EQUAL .)
    ID              reduce using rule 95 (push_op_relacionales -> EQUAL .)
    CTEI            reduce using rule 95 (push_op_relacionales -> EQUAL .)
    CTEF            reduce using rule 95 (push_op_relacionales -> EQUAL .)
    CTECHAR         reduce using rule 95 (push_op_relacionales -> EQUAL .)


state 159

    (135) imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 193


state 160

    (136) imprimir_aux -> exp push_imprimir . imprimirCycle
    (138) imprimirCycle -> . COMMA imprimir_aux
    (139) imprimirCycle -> . empty
    (141) empty -> .

    COMMA           shift and go to state 195
    RPAREN          reduce using rule 141 (empty -> .)

    imprimirCycle                  shift and go to state 194
    empty                          shift and go to state 196

state 161

    (137) imprimir_aux -> CTESTRING push_imprimir . imprimirCycle
    (138) imprimirCycle -> . COMMA imprimir_aux
    (139) imprimirCycle -> . empty
    (141) empty -> .

    COMMA           shift and go to state 195
    RPAREN          reduce using rule 141 (empty -> .)

    imprimirCycle                  shift and go to state 197
    empty                          shift and go to state 196

state 162

    (33) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE . dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (10) dec_var_cycle -> . dec_var dec_var_cycle
    (11) dec_var_cycle -> . empty
    (15) dec_var -> . simple_var
    (16) dec_var -> . array
    (17) dec_var -> . matrix
    (141) empty -> .
    (21) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (25) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (29) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    REGRESAR        reduce using rule 141 (empty -> .)
    ID              reduce using rule 141 (empty -> .)
    PORCADA         reduce using rule 141 (empty -> .)
    MIENTRAS        reduce using rule 141 (empty -> .)
    SI              reduce using rule 141 (empty -> .)
    IMPRIMIR        reduce using rule 141 (empty -> .)
    LEER            reduce using rule 141 (empty -> .)
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

    dec_var_cycle                  shift and go to state 198
    dec_var                        shift and go to state 10
    empty                          shift and go to state 11
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 163

    (34) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle . estatutos RBRACE SEMICOLON punto_end_function
    (43) estatutos -> . estatutosCycle
    (44) estatutos -> . func_regresar
    (45) estatutosCycle -> . estatutos_opciones estatutos
    (46) estatutosCycle -> . estatutos_opciones
    (54) func_regresar -> . REGRESAR exp SEMICOLON punto_check_types
    (47) estatutos_opciones -> . asignar
    (48) estatutos_opciones -> . llamada_func_void
    (49) estatutos_opciones -> . ciclo_for
    (50) estatutos_opciones -> . ciclo_while
    (51) estatutos_opciones -> . condicion
    (52) estatutos_opciones -> . imprimir
    (53) estatutos_opciones -> . leer
    (56) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (128) llamada_func_void -> . ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON
    (69) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (65) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (74) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (75) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (135) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (64) leer -> . LEER variable SEMICOLON
    (57) variable -> . ID variable_aux

    REGRESAR        shift and go to state 203
    ID              shift and go to state 67
    PORCADA         shift and go to state 68
    MIENTRAS        shift and go to state 69
    SI              shift and go to state 70
    IMPRIMIR        shift and go to state 71
    LEER            shift and go to state 72

    estatutos                      shift and go to state 199
    estatutosCycle                 shift and go to state 200
    func_regresar                  shift and go to state 201
    estatutos_opciones             shift and go to state 202
    asignar                        shift and go to state 59
    llamada_func_void              shift and go to state 60
    ciclo_for                      shift and go to state 61
    ciclo_while                    shift and go to state 62
    condicion                      shift and go to state 63
    imprimir                       shift and go to state 64
    leer                           shift and go to state 65
    variable                       shift and go to state 66

state 164

    (38) parameter -> type ID punto_add_parameter parameterCycle .

    RPAREN          reduce using rule 38 (parameter -> type ID punto_add_parameter parameterCycle .)


state 165

    (40) parameterCycle -> COMMA . type ID punto_add_parameter parameterCycle
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32

    type                           shift and go to state 204

state 166

    (41) parameterCycle -> empty .

    RPAREN          reduce using rule 41 (parameterCycle -> empty .)


state 167

    (22) simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle .

    SEMICOLON       reduce using rule 22 (simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle .)


state 168

    (25) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle . SEMICOLON

    SEMICOLON       shift and go to state 205


state 169

    (26) arrayCycle -> COMMA . ID LBRACKET CTEI RBRACKET punto_array arrayCycle

    ID              shift and go to state 206


state 170

    (27) arrayCycle -> empty .

    SEMICOLON       reduce using rule 27 (arrayCycle -> empty .)


state 171

    (29) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET punto_matrix matrixCycle SEMICOLON

    RBRACKET        shift and go to state 207


state 172

    (56) asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual . SEMICOLON

    SEMICOLON       shift and go to state 208


state 173

    (128) llamada_func_void -> ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era . func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON
    (125) func_params -> . exp punto_check_param func_params_aux
    (126) func_params -> . empty
    (96) exp -> . term check_op_masmenos exp_aux
    (141) empty -> .
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    RPAREN          reduce using rule 141 (empty -> .)
    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    func_params                    shift and go to state 209
    exp                            shift and go to state 210
    empty                          shift and go to state 211
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 174

    (59) variable_aux -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (96) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    exp                            shift and go to state 212
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 175

    (96) exp -> term check_op_masmenos exp_aux .

    RBRACKET        reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)
    GREATER         reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)
    LESS            reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)
    GREATEREQ       reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)
    LESSEQ          reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)
    NOTEQUAL        reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)
    EQUAL           reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)
    Y               reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)
    O               reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)
    LPAREN          reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)
    ID              reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)
    CTEI            reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)
    CTEF            reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)
    CTECHAR         reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)
    RPAREN          reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)
    COMMA           reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)
    SEMICOLON       reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)
    HASTA           reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)
    LBRACE          reduce using rule 96 (exp -> term check_op_masmenos exp_aux .)


state 176

    (97) exp_aux -> push_op_exp_masmenos . exp
    (96) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    exp                            shift and go to state 213
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 177

    (98) exp_aux -> empty .

    RBRACKET        reduce using rule 98 (exp_aux -> empty .)
    GREATER         reduce using rule 98 (exp_aux -> empty .)
    LESS            reduce using rule 98 (exp_aux -> empty .)
    GREATEREQ       reduce using rule 98 (exp_aux -> empty .)
    LESSEQ          reduce using rule 98 (exp_aux -> empty .)
    NOTEQUAL        reduce using rule 98 (exp_aux -> empty .)
    EQUAL           reduce using rule 98 (exp_aux -> empty .)
    Y               reduce using rule 98 (exp_aux -> empty .)
    O               reduce using rule 98 (exp_aux -> empty .)
    LPAREN          reduce using rule 98 (exp_aux -> empty .)
    ID              reduce using rule 98 (exp_aux -> empty .)
    CTEI            reduce using rule 98 (exp_aux -> empty .)
    CTEF            reduce using rule 98 (exp_aux -> empty .)
    CTECHAR         reduce using rule 98 (exp_aux -> empty .)
    RPAREN          reduce using rule 98 (exp_aux -> empty .)
    COMMA           reduce using rule 98 (exp_aux -> empty .)
    SEMICOLON       reduce using rule 98 (exp_aux -> empty .)
    HASTA           reduce using rule 98 (exp_aux -> empty .)
    LBRACE          reduce using rule 98 (exp_aux -> empty .)


state 178

    (99) push_op_exp_masmenos -> PLUS .

    LPAREN          reduce using rule 99 (push_op_exp_masmenos -> PLUS .)
    ID              reduce using rule 99 (push_op_exp_masmenos -> PLUS .)
    CTEI            reduce using rule 99 (push_op_exp_masmenos -> PLUS .)
    CTEF            reduce using rule 99 (push_op_exp_masmenos -> PLUS .)
    CTECHAR         reduce using rule 99 (push_op_exp_masmenos -> PLUS .)


state 179

    (100) push_op_exp_masmenos -> MINUS .

    LPAREN          reduce using rule 100 (push_op_exp_masmenos -> MINUS .)
    ID              reduce using rule 100 (push_op_exp_masmenos -> MINUS .)
    CTEI            reduce using rule 100 (push_op_exp_masmenos -> MINUS .)
    CTEF            reduce using rule 100 (push_op_exp_masmenos -> MINUS .)
    CTECHAR         reduce using rule 100 (push_op_exp_masmenos -> MINUS .)


state 180

    (102) term -> factor check_op_pordiv term_aux .

    PLUS            reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    MINUS           reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    RBRACKET        reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    GREATER         reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    LESS            reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    GREATEREQ       reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    LESSEQ          reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    NOTEQUAL        reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    EQUAL           reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    Y               reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    O               reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    LPAREN          reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    ID              reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    CTEI            reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    CTEF            reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    CTECHAR         reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    RPAREN          reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    COMMA           reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    SEMICOLON       reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    HASTA           reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    LBRACE          reduce using rule 102 (term -> factor check_op_pordiv term_aux .)


state 181

    (103) term_aux -> push_op_exp_pordiv . term
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    term                           shift and go to state 214
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 182

    (104) term_aux -> empty .

    PLUS            reduce using rule 104 (term_aux -> empty .)
    MINUS           reduce using rule 104 (term_aux -> empty .)
    RBRACKET        reduce using rule 104 (term_aux -> empty .)
    GREATER         reduce using rule 104 (term_aux -> empty .)
    LESS            reduce using rule 104 (term_aux -> empty .)
    GREATEREQ       reduce using rule 104 (term_aux -> empty .)
    LESSEQ          reduce using rule 104 (term_aux -> empty .)
    NOTEQUAL        reduce using rule 104 (term_aux -> empty .)
    EQUAL           reduce using rule 104 (term_aux -> empty .)
    Y               reduce using rule 104 (term_aux -> empty .)
    O               reduce using rule 104 (term_aux -> empty .)
    LPAREN          reduce using rule 104 (term_aux -> empty .)
    ID              reduce using rule 104 (term_aux -> empty .)
    CTEI            reduce using rule 104 (term_aux -> empty .)
    CTEF            reduce using rule 104 (term_aux -> empty .)
    CTECHAR         reduce using rule 104 (term_aux -> empty .)
    RPAREN          reduce using rule 104 (term_aux -> empty .)
    COMMA           reduce using rule 104 (term_aux -> empty .)
    SEMICOLON       reduce using rule 104 (term_aux -> empty .)
    HASTA           reduce using rule 104 (term_aux -> empty .)
    LBRACE          reduce using rule 104 (term_aux -> empty .)


state 183

    (106) push_op_exp_pordiv -> TIMES .

    LPAREN          reduce using rule 106 (push_op_exp_pordiv -> TIMES .)
    ID              reduce using rule 106 (push_op_exp_pordiv -> TIMES .)
    CTEI            reduce using rule 106 (push_op_exp_pordiv -> TIMES .)
    CTEF            reduce using rule 106 (push_op_exp_pordiv -> TIMES .)
    CTECHAR         reduce using rule 106 (push_op_exp_pordiv -> TIMES .)


state 184

    (107) push_op_exp_pordiv -> DIVIDE .

    LPAREN          reduce using rule 107 (push_op_exp_pordiv -> DIVIDE .)
    ID              reduce using rule 107 (push_op_exp_pordiv -> DIVIDE .)
    CTEI            reduce using rule 107 (push_op_exp_pordiv -> DIVIDE .)
    CTEF            reduce using rule 107 (push_op_exp_pordiv -> DIVIDE .)
    CTECHAR         reduce using rule 107 (push_op_exp_pordiv -> DIVIDE .)


state 185

    (108) factor -> LPAREN meter_fondo_falso hyper_exp . RPAREN quitar_fondo_falso

    RPAREN          shift and go to state 215


state 186

    (111) factor -> ID LBRACKET hyper_exp . RBRACKET
    (112) factor -> ID LBRACKET hyper_exp . RBRACKET LBRACKET hyper_exp RBRACKET

    RBRACKET        shift and go to state 216


state 187

    (129) llamada_func_return -> ID LPAREN punto_func_exists . punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub
    (132) punto_create_era -> .

    LPAREN          reduce using rule 132 (punto_create_era -> .)
    ID              reduce using rule 132 (punto_create_era -> .)
    CTEI            reduce using rule 132 (punto_create_era -> .)
    CTEF            reduce using rule 132 (punto_create_era -> .)
    CTECHAR         reduce using rule 132 (punto_create_era -> .)
    RPAREN          reduce using rule 132 (punto_create_era -> .)

    punto_create_era               shift and go to state 217

state 188

    (69) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp . punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (71) punto_valida_int -> .

    HASTA           reduce using rule 71 (punto_valida_int -> .)

    punto_valida_int               shift and go to state 218

state 189

    (65) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN . punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (67) punto_medio_while -> .

    LBRACE          reduce using rule 67 (punto_medio_while -> .)

    punto_medio_while              shift and go to state 219

state 190

    (74) condicion -> SI LPAREN hyper_exp RPAREN punto_si . LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (75) condicion -> SI LPAREN hyper_exp RPAREN punto_si . LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON

    LBRACE          shift and go to state 220


state 191

    (80) hyper_exp_aux -> push_op_logicos super_exp . check_op_logicos
    (82) check_op_logicos -> .

    RPAREN          reduce using rule 82 (check_op_logicos -> .)
    SEMICOLON       reduce using rule 82 (check_op_logicos -> .)
    RBRACKET        reduce using rule 82 (check_op_logicos -> .)
    HASTA           reduce using rule 82 (check_op_logicos -> .)
    LBRACE          reduce using rule 82 (check_op_logicos -> .)

    check_op_logicos               shift and go to state 221

state 192

    (87) super_exp_aux -> push_op_relacionales exp . check_op_relacionales
    (89) check_op_relacionales -> .

    Y               reduce using rule 89 (check_op_relacionales -> .)
    O               reduce using rule 89 (check_op_relacionales -> .)
    LPAREN          reduce using rule 89 (check_op_relacionales -> .)
    ID              reduce using rule 89 (check_op_relacionales -> .)
    CTEI            reduce using rule 89 (check_op_relacionales -> .)
    CTEF            reduce using rule 89 (check_op_relacionales -> .)
    CTECHAR         reduce using rule 89 (check_op_relacionales -> .)
    RPAREN          reduce using rule 89 (check_op_relacionales -> .)
    SEMICOLON       reduce using rule 89 (check_op_relacionales -> .)
    RBRACKET        reduce using rule 89 (check_op_relacionales -> .)
    HASTA           reduce using rule 89 (check_op_relacionales -> .)
    LBRACE          reduce using rule 89 (check_op_relacionales -> .)

    check_op_relacionales          shift and go to state 222

state 193

    (135) imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .

    ID              reduce using rule 135 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    PORCADA         reduce using rule 135 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 135 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    SI              reduce using rule 135 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 135 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    LEER            reduce using rule 135 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    RBRACE          reduce using rule 135 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    REGRESAR        reduce using rule 135 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)


state 194

    (136) imprimir_aux -> exp push_imprimir imprimirCycle .

    RPAREN          reduce using rule 136 (imprimir_aux -> exp push_imprimir imprimirCycle .)


state 195

    (138) imprimirCycle -> COMMA . imprimir_aux
    (136) imprimir_aux -> . exp push_imprimir imprimirCycle
    (137) imprimir_aux -> . CTESTRING push_imprimir imprimirCycle
    (96) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    CTESTRING       shift and go to state 122
    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    imprimir_aux                   shift and go to state 223
    exp                            shift and go to state 121
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 196

    (139) imprimirCycle -> empty .

    RPAREN          reduce using rule 139 (imprimirCycle -> empty .)


state 197

    (137) imprimir_aux -> CTESTRING push_imprimir imprimirCycle .

    RPAREN          reduce using rule 137 (imprimir_aux -> CTESTRING push_imprimir imprimirCycle .)


state 198

    (33) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle . estatutos RBRACE SEMICOLON punto_end_function
    (43) estatutos -> . estatutosCycle
    (44) estatutos -> . func_regresar
    (45) estatutosCycle -> . estatutos_opciones estatutos
    (46) estatutosCycle -> . estatutos_opciones
    (54) func_regresar -> . REGRESAR exp SEMICOLON punto_check_types
    (47) estatutos_opciones -> . asignar
    (48) estatutos_opciones -> . llamada_func_void
    (49) estatutos_opciones -> . ciclo_for
    (50) estatutos_opciones -> . ciclo_while
    (51) estatutos_opciones -> . condicion
    (52) estatutos_opciones -> . imprimir
    (53) estatutos_opciones -> . leer
    (56) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (128) llamada_func_void -> . ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON
    (69) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (65) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (74) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (75) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (135) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (64) leer -> . LEER variable SEMICOLON
    (57) variable -> . ID variable_aux

    REGRESAR        shift and go to state 203
    ID              shift and go to state 67
    PORCADA         shift and go to state 68
    MIENTRAS        shift and go to state 69
    SI              shift and go to state 70
    IMPRIMIR        shift and go to state 71
    LEER            shift and go to state 72

    estatutos                      shift and go to state 224
    estatutosCycle                 shift and go to state 200
    func_regresar                  shift and go to state 201
    estatutos_opciones             shift and go to state 202
    asignar                        shift and go to state 59
    llamada_func_void              shift and go to state 60
    ciclo_for                      shift and go to state 61
    ciclo_while                    shift and go to state 62
    condicion                      shift and go to state 63
    imprimir                       shift and go to state 64
    leer                           shift and go to state 65
    variable                       shift and go to state 66

state 199

    (34) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos . RBRACE SEMICOLON punto_end_function

    RBRACE          shift and go to state 225


state 200

    (43) estatutos -> estatutosCycle .

    RBRACE          reduce using rule 43 (estatutos -> estatutosCycle .)


state 201

    (44) estatutos -> func_regresar .

    RBRACE          reduce using rule 44 (estatutos -> func_regresar .)


state 202

    (45) estatutosCycle -> estatutos_opciones . estatutos
    (46) estatutosCycle -> estatutos_opciones .
    (43) estatutos -> . estatutosCycle
    (44) estatutos -> . func_regresar
    (45) estatutosCycle -> . estatutos_opciones estatutos
    (46) estatutosCycle -> . estatutos_opciones
    (54) func_regresar -> . REGRESAR exp SEMICOLON punto_check_types
    (47) estatutos_opciones -> . asignar
    (48) estatutos_opciones -> . llamada_func_void
    (49) estatutos_opciones -> . ciclo_for
    (50) estatutos_opciones -> . ciclo_while
    (51) estatutos_opciones -> . condicion
    (52) estatutos_opciones -> . imprimir
    (53) estatutos_opciones -> . leer
    (56) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (128) llamada_func_void -> . ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON
    (69) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (65) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (74) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (75) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (135) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (64) leer -> . LEER variable SEMICOLON
    (57) variable -> . ID variable_aux

    RBRACE          reduce using rule 46 (estatutosCycle -> estatutos_opciones .)
    REGRESAR        shift and go to state 203
    ID              shift and go to state 67
    PORCADA         shift and go to state 68
    MIENTRAS        shift and go to state 69
    SI              shift and go to state 70
    IMPRIMIR        shift and go to state 71
    LEER            shift and go to state 72

    estatutos_opciones             shift and go to state 202
    estatutos                      shift and go to state 226
    estatutosCycle                 shift and go to state 200
    func_regresar                  shift and go to state 201
    asignar                        shift and go to state 59
    llamada_func_void              shift and go to state 60
    ciclo_for                      shift and go to state 61
    ciclo_while                    shift and go to state 62
    condicion                      shift and go to state 63
    imprimir                       shift and go to state 64
    leer                           shift and go to state 65
    variable                       shift and go to state 66

state 203

    (54) func_regresar -> REGRESAR . exp SEMICOLON punto_check_types
    (96) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    exp                            shift and go to state 227
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 204

    (40) parameterCycle -> COMMA type . ID punto_add_parameter parameterCycle

    ID              shift and go to state 228


state 205

    (25) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .

    VARIABLE        reduce using rule 25 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    RENGLON         reduce using rule 25 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    TABLA           reduce using rule 25 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    INICIO          reduce using rule 25 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    FUNCION         reduce using rule 25 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    REGRESAR        reduce using rule 25 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    ID              reduce using rule 25 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    PORCADA         reduce using rule 25 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    MIENTRAS        reduce using rule 25 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    SI              reduce using rule 25 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 25 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    LEER            reduce using rule 25 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)


state 206

    (26) arrayCycle -> COMMA ID . LBRACKET CTEI RBRACKET punto_array arrayCycle

    LBRACKET        shift and go to state 229


state 207

    (29) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . punto_matrix matrixCycle SEMICOLON
    (32) punto_matrix -> .

    COMMA           reduce using rule 32 (punto_matrix -> .)
    SEMICOLON       reduce using rule 32 (punto_matrix -> .)

    punto_matrix                   shift and go to state 230

state 208

    (56) asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .

    ID              reduce using rule 56 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    PORCADA         reduce using rule 56 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    MIENTRAS        reduce using rule 56 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    SI              reduce using rule 56 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    IMPRIMIR        reduce using rule 56 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    LEER            reduce using rule 56 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    RBRACE          reduce using rule 56 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    REGRESAR        reduce using rule 56 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)


state 209

    (128) llamada_func_void -> ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params . RPAREN punto_check_total_params punto_create_gosub SEMICOLON

    RPAREN          shift and go to state 231


state 210

    (125) func_params -> exp . punto_check_param func_params_aux
    (127) punto_check_param -> .

    COMMA           reduce using rule 127 (punto_check_param -> .)
    RPAREN          reduce using rule 127 (punto_check_param -> .)

    punto_check_param              shift and go to state 232

state 211

    (126) func_params -> empty .

    RPAREN          reduce using rule 126 (func_params -> empty .)


state 212

    (59) variable_aux -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 233


state 213

    (97) exp_aux -> push_op_exp_masmenos exp .

    RBRACKET        reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)
    GREATER         reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)
    LESS            reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)
    GREATEREQ       reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)
    LESSEQ          reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)
    NOTEQUAL        reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)
    EQUAL           reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)
    Y               reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)
    O               reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)
    LPAREN          reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)
    ID              reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)
    CTEI            reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)
    CTEF            reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)
    CTECHAR         reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)
    RPAREN          reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)
    COMMA           reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)
    SEMICOLON       reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)
    HASTA           reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)
    LBRACE          reduce using rule 97 (exp_aux -> push_op_exp_masmenos exp .)


state 214

    (103) term_aux -> push_op_exp_pordiv term .

    PLUS            reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    MINUS           reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    RBRACKET        reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    GREATER         reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    LESS            reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    GREATEREQ       reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    LESSEQ          reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    NOTEQUAL        reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    EQUAL           reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    Y               reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    O               reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    LPAREN          reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    ID              reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    CTEI            reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    CTEF            reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    CTECHAR         reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    RPAREN          reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    COMMA           reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    SEMICOLON       reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    HASTA           reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    LBRACE          reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)


state 215

    (108) factor -> LPAREN meter_fondo_falso hyper_exp RPAREN . quitar_fondo_falso
    (118) quitar_fondo_falso -> .

    TIMES           reduce using rule 118 (quitar_fondo_falso -> .)
    DIVIDE          reduce using rule 118 (quitar_fondo_falso -> .)
    PLUS            reduce using rule 118 (quitar_fondo_falso -> .)
    MINUS           reduce using rule 118 (quitar_fondo_falso -> .)
    RBRACKET        reduce using rule 118 (quitar_fondo_falso -> .)
    GREATER         reduce using rule 118 (quitar_fondo_falso -> .)
    LESS            reduce using rule 118 (quitar_fondo_falso -> .)
    GREATEREQ       reduce using rule 118 (quitar_fondo_falso -> .)
    LESSEQ          reduce using rule 118 (quitar_fondo_falso -> .)
    NOTEQUAL        reduce using rule 118 (quitar_fondo_falso -> .)
    EQUAL           reduce using rule 118 (quitar_fondo_falso -> .)
    Y               reduce using rule 118 (quitar_fondo_falso -> .)
    O               reduce using rule 118 (quitar_fondo_falso -> .)
    LPAREN          reduce using rule 118 (quitar_fondo_falso -> .)
    ID              reduce using rule 118 (quitar_fondo_falso -> .)
    CTEI            reduce using rule 118 (quitar_fondo_falso -> .)
    CTEF            reduce using rule 118 (quitar_fondo_falso -> .)
    CTECHAR         reduce using rule 118 (quitar_fondo_falso -> .)
    RPAREN          reduce using rule 118 (quitar_fondo_falso -> .)
    COMMA           reduce using rule 118 (quitar_fondo_falso -> .)
    SEMICOLON       reduce using rule 118 (quitar_fondo_falso -> .)
    HASTA           reduce using rule 118 (quitar_fondo_falso -> .)
    LBRACE          reduce using rule 118 (quitar_fondo_falso -> .)

    quitar_fondo_falso             shift and go to state 234

state 216

    (111) factor -> ID LBRACKET hyper_exp RBRACKET .
    (112) factor -> ID LBRACKET hyper_exp RBRACKET . LBRACKET hyper_exp RBRACKET

    TIMES           reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    DIVIDE          reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    PLUS            reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    MINUS           reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    RBRACKET        reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    GREATER         reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    LESS            reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    GREATEREQ       reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    LESSEQ          reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    NOTEQUAL        reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    EQUAL           reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    Y               reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    O               reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    LPAREN          reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    ID              reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    CTEI            reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    CTEF            reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    CTECHAR         reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    RPAREN          reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    COMMA           reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    SEMICOLON       reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    HASTA           reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    LBRACE          reduce using rule 111 (factor -> ID LBRACKET hyper_exp RBRACKET .)
    LBRACKET        shift and go to state 235


state 217

    (129) llamada_func_return -> ID LPAREN punto_func_exists punto_create_era . func_params RPAREN punto_check_total_params punto_create_gosub
    (125) func_params -> . exp punto_check_param func_params_aux
    (126) func_params -> . empty
    (96) exp -> . term check_op_masmenos exp_aux
    (141) empty -> .
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    RPAREN          reduce using rule 141 (empty -> .)
    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    func_params                    shift and go to state 236
    exp                            shift and go to state 210
    empty                          shift and go to state 211
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 218

    (69) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int . HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON

    HASTA           shift and go to state 237


state 219

    (65) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while . LBRACE estatutos RBRACE punto_fin_while SEMICOLON

    LBRACE          shift and go to state 238


state 220

    (74) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE . estatutos RBRACE punto_fin_si SEMICOLON
    (75) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE . estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (43) estatutos -> . estatutosCycle
    (44) estatutos -> . func_regresar
    (45) estatutosCycle -> . estatutos_opciones estatutos
    (46) estatutosCycle -> . estatutos_opciones
    (54) func_regresar -> . REGRESAR exp SEMICOLON punto_check_types
    (47) estatutos_opciones -> . asignar
    (48) estatutos_opciones -> . llamada_func_void
    (49) estatutos_opciones -> . ciclo_for
    (50) estatutos_opciones -> . ciclo_while
    (51) estatutos_opciones -> . condicion
    (52) estatutos_opciones -> . imprimir
    (53) estatutos_opciones -> . leer
    (56) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (128) llamada_func_void -> . ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON
    (69) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (65) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (74) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (75) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (135) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (64) leer -> . LEER variable SEMICOLON
    (57) variable -> . ID variable_aux

    REGRESAR        shift and go to state 203
    ID              shift and go to state 67
    PORCADA         shift and go to state 68
    MIENTRAS        shift and go to state 69
    SI              shift and go to state 70
    IMPRIMIR        shift and go to state 71
    LEER            shift and go to state 72

    estatutos                      shift and go to state 239
    estatutosCycle                 shift and go to state 200
    func_regresar                  shift and go to state 201
    estatutos_opciones             shift and go to state 202
    asignar                        shift and go to state 59
    llamada_func_void              shift and go to state 60
    ciclo_for                      shift and go to state 61
    ciclo_while                    shift and go to state 62
    condicion                      shift and go to state 63
    imprimir                       shift and go to state 64
    leer                           shift and go to state 65
    variable                       shift and go to state 66

state 221

    (80) hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .

    RPAREN          reduce using rule 80 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    SEMICOLON       reduce using rule 80 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    RBRACKET        reduce using rule 80 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    HASTA           reduce using rule 80 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    LBRACE          reduce using rule 80 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)


state 222

    (87) super_exp_aux -> push_op_relacionales exp check_op_relacionales .

    Y               reduce using rule 87 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    O               reduce using rule 87 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    LPAREN          reduce using rule 87 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    ID              reduce using rule 87 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    CTEI            reduce using rule 87 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    CTEF            reduce using rule 87 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    CTECHAR         reduce using rule 87 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    RPAREN          reduce using rule 87 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    SEMICOLON       reduce using rule 87 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    RBRACKET        reduce using rule 87 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    HASTA           reduce using rule 87 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    LBRACE          reduce using rule 87 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)


state 223

    (138) imprimirCycle -> COMMA imprimir_aux .

    RPAREN          reduce using rule 138 (imprimirCycle -> COMMA imprimir_aux .)


state 224

    (33) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos . RBRACE SEMICOLON punto_end_function

    RBRACE          shift and go to state 240


state 225

    (34) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE . SEMICOLON punto_end_function

    SEMICOLON       shift and go to state 241


state 226

    (45) estatutosCycle -> estatutos_opciones estatutos .

    RBRACE          reduce using rule 45 (estatutosCycle -> estatutos_opciones estatutos .)


state 227

    (54) func_regresar -> REGRESAR exp . SEMICOLON punto_check_types

    SEMICOLON       shift and go to state 242


state 228

    (40) parameterCycle -> COMMA type ID . punto_add_parameter parameterCycle
    (42) punto_add_parameter -> .

    COMMA           reduce using rule 42 (punto_add_parameter -> .)
    RPAREN          reduce using rule 42 (punto_add_parameter -> .)

    punto_add_parameter            shift and go to state 243

state 229

    (26) arrayCycle -> COMMA ID LBRACKET . CTEI RBRACKET punto_array arrayCycle

    CTEI            shift and go to state 244


state 230

    (29) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix . matrixCycle SEMICOLON
    (30) matrixCycle -> . COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle
    (31) matrixCycle -> . empty
    (141) empty -> .

    COMMA           shift and go to state 246
    SEMICOLON       reduce using rule 141 (empty -> .)

    matrixCycle                    shift and go to state 245
    empty                          shift and go to state 247

state 231

    (128) llamada_func_void -> ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN . punto_check_total_params punto_create_gosub SEMICOLON
    (133) punto_check_total_params -> .

    SEMICOLON       reduce using rule 133 (punto_check_total_params -> .)

    punto_check_total_params       shift and go to state 248

state 232

    (125) func_params -> exp punto_check_param . func_params_aux
    (123) func_params_aux -> . COMMA exp punto_check_param func_params_aux
    (124) func_params_aux -> . empty
    (141) empty -> .

    COMMA           shift and go to state 250
    RPAREN          reduce using rule 141 (empty -> .)

    func_params_aux                shift and go to state 249
    empty                          shift and go to state 251

state 233

    (59) variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    ASSIGN          reduce using rule 59 (variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 59 (variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 234

    (108) factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .

    TIMES           reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    DIVIDE          reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    PLUS            reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    MINUS           reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    RBRACKET        reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    GREATER         reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LESS            reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    GREATEREQ       reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LESSEQ          reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    NOTEQUAL        reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    EQUAL           reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    Y               reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    O               reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LPAREN          reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    ID              reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    CTEI            reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    CTEF            reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    CTECHAR         reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    RPAREN          reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    COMMA           reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    SEMICOLON       reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    HASTA           reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LBRACE          reduce using rule 108 (factor -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)


state 235

    (112) factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET . hyper_exp RBRACKET
    (79) hyper_exp -> . super_exp hyper_exp_aux
    (86) super_exp -> . exp super_exp_aux
    (96) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    hyper_exp                      shift and go to state 252
    super_exp                      shift and go to state 118
    exp                            shift and go to state 119
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 236

    (129) llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params . RPAREN punto_check_total_params punto_create_gosub

    RPAREN          shift and go to state 253


state 237

    (69) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA . hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (79) hyper_exp -> . super_exp hyper_exp_aux
    (86) super_exp -> . exp super_exp_aux
    (96) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    hyper_exp                      shift and go to state 254
    super_exp                      shift and go to state 118
    exp                            shift and go to state 119
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 238

    (65) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE . estatutos RBRACE punto_fin_while SEMICOLON
    (43) estatutos -> . estatutosCycle
    (44) estatutos -> . func_regresar
    (45) estatutosCycle -> . estatutos_opciones estatutos
    (46) estatutosCycle -> . estatutos_opciones
    (54) func_regresar -> . REGRESAR exp SEMICOLON punto_check_types
    (47) estatutos_opciones -> . asignar
    (48) estatutos_opciones -> . llamada_func_void
    (49) estatutos_opciones -> . ciclo_for
    (50) estatutos_opciones -> . ciclo_while
    (51) estatutos_opciones -> . condicion
    (52) estatutos_opciones -> . imprimir
    (53) estatutos_opciones -> . leer
    (56) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (128) llamada_func_void -> . ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON
    (69) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (65) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (74) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (75) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (135) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (64) leer -> . LEER variable SEMICOLON
    (57) variable -> . ID variable_aux

    REGRESAR        shift and go to state 203
    ID              shift and go to state 67
    PORCADA         shift and go to state 68
    MIENTRAS        shift and go to state 69
    SI              shift and go to state 70
    IMPRIMIR        shift and go to state 71
    LEER            shift and go to state 72

    estatutos                      shift and go to state 255
    estatutosCycle                 shift and go to state 200
    func_regresar                  shift and go to state 201
    estatutos_opciones             shift and go to state 202
    asignar                        shift and go to state 59
    llamada_func_void              shift and go to state 60
    ciclo_for                      shift and go to state 61
    ciclo_while                    shift and go to state 62
    condicion                      shift and go to state 63
    imprimir                       shift and go to state 64
    leer                           shift and go to state 65
    variable                       shift and go to state 66

state 239

    (74) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos . RBRACE punto_fin_si SEMICOLON
    (75) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos . RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON

    RBRACE          shift and go to state 256


state 240

    (33) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE . SEMICOLON punto_end_function

    SEMICOLON       shift and go to state 257


state 241

    (34) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON . punto_end_function
    (36) punto_end_function -> .

    FUNCION         reduce using rule 36 (punto_end_function -> .)
    INICIO          reduce using rule 36 (punto_end_function -> .)

    punto_end_function             shift and go to state 258

state 242

    (54) func_regresar -> REGRESAR exp SEMICOLON . punto_check_types
    (55) punto_check_types -> .

    RBRACE          reduce using rule 55 (punto_check_types -> .)

    punto_check_types              shift and go to state 259

state 243

    (40) parameterCycle -> COMMA type ID punto_add_parameter . parameterCycle
    (40) parameterCycle -> . COMMA type ID punto_add_parameter parameterCycle
    (41) parameterCycle -> . empty
    (141) empty -> .

    COMMA           shift and go to state 165
    RPAREN          reduce using rule 141 (empty -> .)

    parameterCycle                 shift and go to state 260
    empty                          shift and go to state 166

state 244

    (26) arrayCycle -> COMMA ID LBRACKET CTEI . RBRACKET punto_array arrayCycle

    RBRACKET        shift and go to state 261


state 245

    (29) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle . SEMICOLON

    SEMICOLON       shift and go to state 262


state 246

    (30) matrixCycle -> COMMA . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    ID              shift and go to state 263


state 247

    (31) matrixCycle -> empty .

    SEMICOLON       reduce using rule 31 (matrixCycle -> empty .)


state 248

    (128) llamada_func_void -> ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params . punto_create_gosub SEMICOLON
    (134) punto_create_gosub -> .

    SEMICOLON       reduce using rule 134 (punto_create_gosub -> .)

    punto_create_gosub             shift and go to state 264

state 249

    (125) func_params -> exp punto_check_param func_params_aux .

    RPAREN          reduce using rule 125 (func_params -> exp punto_check_param func_params_aux .)


state 250

    (123) func_params_aux -> COMMA . exp punto_check_param func_params_aux
    (96) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (108) factor -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (109) factor -> . factor_constante
    (110) factor -> . llamada_func_return
    (111) factor -> . ID LBRACKET hyper_exp RBRACKET
    (112) factor -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (113) factor -> . ID push_id
    (114) factor_constante -> . CTEI push_int
    (115) factor_constante -> . CTEF push_float
    (116) factor_constante -> . CTECHAR push_char
    (129) llamada_func_return -> . ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub

    LPAREN          shift and go to state 108
    ID              shift and go to state 111
    CTEI            shift and go to state 112
    CTEF            shift and go to state 113
    CTECHAR         shift and go to state 114

    exp                            shift and go to state 265
    term                           shift and go to state 106
    factor                         shift and go to state 107
    factor_constante               shift and go to state 109
    llamada_func_return            shift and go to state 110

state 251

    (124) func_params_aux -> empty .

    RPAREN          reduce using rule 124 (func_params_aux -> empty .)


state 252

    (112) factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp . RBRACKET

    RBRACKET        shift and go to state 266


state 253

    (129) llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN . punto_check_total_params punto_create_gosub
    (133) punto_check_total_params -> .

    TIMES           reduce using rule 133 (punto_check_total_params -> .)
    DIVIDE          reduce using rule 133 (punto_check_total_params -> .)
    PLUS            reduce using rule 133 (punto_check_total_params -> .)
    MINUS           reduce using rule 133 (punto_check_total_params -> .)
    RBRACKET        reduce using rule 133 (punto_check_total_params -> .)
    GREATER         reduce using rule 133 (punto_check_total_params -> .)
    LESS            reduce using rule 133 (punto_check_total_params -> .)
    GREATEREQ       reduce using rule 133 (punto_check_total_params -> .)
    LESSEQ          reduce using rule 133 (punto_check_total_params -> .)
    NOTEQUAL        reduce using rule 133 (punto_check_total_params -> .)
    EQUAL           reduce using rule 133 (punto_check_total_params -> .)
    Y               reduce using rule 133 (punto_check_total_params -> .)
    O               reduce using rule 133 (punto_check_total_params -> .)
    LPAREN          reduce using rule 133 (punto_check_total_params -> .)
    ID              reduce using rule 133 (punto_check_total_params -> .)
    CTEI            reduce using rule 133 (punto_check_total_params -> .)
    CTEF            reduce using rule 133 (punto_check_total_params -> .)
    CTECHAR         reduce using rule 133 (punto_check_total_params -> .)
    RPAREN          reduce using rule 133 (punto_check_total_params -> .)
    COMMA           reduce using rule 133 (punto_check_total_params -> .)
    SEMICOLON       reduce using rule 133 (punto_check_total_params -> .)
    HASTA           reduce using rule 133 (punto_check_total_params -> .)
    LBRACE          reduce using rule 133 (punto_check_total_params -> .)

    punto_check_total_params       shift and go to state 267

state 254

    (69) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp . punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (72) punto_valida_exp -> .

    LBRACE          reduce using rule 72 (punto_valida_exp -> .)

    punto_valida_exp               shift and go to state 268

state 255

    (65) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos . RBRACE punto_fin_while SEMICOLON

    RBRACE          shift and go to state 269


state 256

    (74) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE . punto_fin_si SEMICOLON
    (75) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE . SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (77) punto_fin_si -> .

    SINO            shift and go to state 271
    SEMICOLON       reduce using rule 77 (punto_fin_si -> .)

    punto_fin_si                   shift and go to state 270

state 257

    (33) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON . punto_end_function
    (36) punto_end_function -> .

    FUNCION         reduce using rule 36 (punto_end_function -> .)
    INICIO          reduce using rule 36 (punto_end_function -> .)

    punto_end_function             shift and go to state 272

state 258

    (34) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function .

    FUNCION         reduce using rule 34 (dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function .)
    INICIO          reduce using rule 34 (dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function .)


state 259

    (54) func_regresar -> REGRESAR exp SEMICOLON punto_check_types .

    RBRACE          reduce using rule 54 (func_regresar -> REGRESAR exp SEMICOLON punto_check_types .)


state 260

    (40) parameterCycle -> COMMA type ID punto_add_parameter parameterCycle .

    RPAREN          reduce using rule 40 (parameterCycle -> COMMA type ID punto_add_parameter parameterCycle .)


state 261

    (26) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET . punto_array arrayCycle
    (28) punto_array -> .

    COMMA           reduce using rule 28 (punto_array -> .)
    SEMICOLON       reduce using rule 28 (punto_array -> .)

    punto_array                    shift and go to state 273

state 262

    (29) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .

    VARIABLE        reduce using rule 29 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    RENGLON         reduce using rule 29 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    TABLA           reduce using rule 29 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    INICIO          reduce using rule 29 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    FUNCION         reduce using rule 29 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    REGRESAR        reduce using rule 29 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    ID              reduce using rule 29 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    PORCADA         reduce using rule 29 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    MIENTRAS        reduce using rule 29 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    SI              reduce using rule 29 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 29 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    LEER            reduce using rule 29 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)


state 263

    (30) matrixCycle -> COMMA ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    LBRACKET        shift and go to state 274


state 264

    (128) llamada_func_void -> ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub . SEMICOLON

    SEMICOLON       shift and go to state 275


state 265

    (123) func_params_aux -> COMMA exp . punto_check_param func_params_aux
    (127) punto_check_param -> .

    COMMA           reduce using rule 127 (punto_check_param -> .)
    RPAREN          reduce using rule 127 (punto_check_param -> .)

    punto_check_param              shift and go to state 276

state 266

    (112) factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .

    TIMES           reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    DIVIDE          reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    PLUS            reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    MINUS           reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    RBRACKET        reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    GREATER         reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LESS            reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    GREATEREQ       reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LESSEQ          reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    NOTEQUAL        reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    EQUAL           reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    Y               reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    O               reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LPAREN          reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    ID              reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    CTEI            reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    CTEF            reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    CTECHAR         reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    RPAREN          reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    COMMA           reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    SEMICOLON       reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    HASTA           reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LBRACE          reduce using rule 112 (factor -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)


state 267

    (129) llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params . punto_create_gosub
    (134) punto_create_gosub -> .

    TIMES           reduce using rule 134 (punto_create_gosub -> .)
    DIVIDE          reduce using rule 134 (punto_create_gosub -> .)
    PLUS            reduce using rule 134 (punto_create_gosub -> .)
    MINUS           reduce using rule 134 (punto_create_gosub -> .)
    RBRACKET        reduce using rule 134 (punto_create_gosub -> .)
    GREATER         reduce using rule 134 (punto_create_gosub -> .)
    LESS            reduce using rule 134 (punto_create_gosub -> .)
    GREATEREQ       reduce using rule 134 (punto_create_gosub -> .)
    LESSEQ          reduce using rule 134 (punto_create_gosub -> .)
    NOTEQUAL        reduce using rule 134 (punto_create_gosub -> .)
    EQUAL           reduce using rule 134 (punto_create_gosub -> .)
    Y               reduce using rule 134 (punto_create_gosub -> .)
    O               reduce using rule 134 (punto_create_gosub -> .)
    LPAREN          reduce using rule 134 (punto_create_gosub -> .)
    ID              reduce using rule 134 (punto_create_gosub -> .)
    CTEI            reduce using rule 134 (punto_create_gosub -> .)
    CTEF            reduce using rule 134 (punto_create_gosub -> .)
    CTECHAR         reduce using rule 134 (punto_create_gosub -> .)
    RPAREN          reduce using rule 134 (punto_create_gosub -> .)
    COMMA           reduce using rule 134 (punto_create_gosub -> .)
    SEMICOLON       reduce using rule 134 (punto_create_gosub -> .)
    HASTA           reduce using rule 134 (punto_create_gosub -> .)
    LBRACE          reduce using rule 134 (punto_create_gosub -> .)

    punto_create_gosub             shift and go to state 277

state 268

    (69) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp . LBRACE estatutos RBRACE punto_termina_for SEMICOLON

    LBRACE          shift and go to state 278


state 269

    (65) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE . punto_fin_while SEMICOLON
    (68) punto_fin_while -> .

    SEMICOLON       reduce using rule 68 (punto_fin_while -> .)

    punto_fin_while                shift and go to state 279

state 270

    (74) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si . SEMICOLON

    SEMICOLON       shift and go to state 280


state 271

    (75) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO . punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (78) punto_sino -> .

    LBRACE          reduce using rule 78 (punto_sino -> .)

    punto_sino                     shift and go to state 281

state 272

    (33) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function .

    FUNCION         reduce using rule 33 (dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function .)
    INICIO          reduce using rule 33 (dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function .)


state 273

    (26) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array . arrayCycle
    (26) arrayCycle -> . COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle
    (27) arrayCycle -> . empty
    (141) empty -> .

    COMMA           shift and go to state 169
    SEMICOLON       reduce using rule 141 (empty -> .)

    arrayCycle                     shift and go to state 282
    empty                          shift and go to state 170

state 274

    (30) matrixCycle -> COMMA ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    CTEI            shift and go to state 283


state 275

    (128) llamada_func_void -> ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON .

    ID              reduce using rule 128 (llamada_func_void -> ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON .)
    PORCADA         reduce using rule 128 (llamada_func_void -> ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON .)
    MIENTRAS        reduce using rule 128 (llamada_func_void -> ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON .)
    SI              reduce using rule 128 (llamada_func_void -> ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON .)
    IMPRIMIR        reduce using rule 128 (llamada_func_void -> ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON .)
    LEER            reduce using rule 128 (llamada_func_void -> ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON .)
    RBRACE          reduce using rule 128 (llamada_func_void -> ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON .)
    REGRESAR        reduce using rule 128 (llamada_func_void -> ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON .)


state 276

    (123) func_params_aux -> COMMA exp punto_check_param . func_params_aux
    (123) func_params_aux -> . COMMA exp punto_check_param func_params_aux
    (124) func_params_aux -> . empty
    (141) empty -> .

    COMMA           shift and go to state 250
    RPAREN          reduce using rule 141 (empty -> .)

    func_params_aux                shift and go to state 284
    empty                          shift and go to state 251

state 277

    (129) llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .

    TIMES           reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    DIVIDE          reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    PLUS            reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    MINUS           reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    RBRACKET        reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    GREATER         reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    LESS            reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    GREATEREQ       reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    LESSEQ          reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    NOTEQUAL        reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    EQUAL           reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    Y               reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    O               reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    LPAREN          reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    ID              reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    CTEI            reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    CTEF            reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    CTECHAR         reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    RPAREN          reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    COMMA           reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    SEMICOLON       reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    HASTA           reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)
    LBRACE          reduce using rule 129 (llamada_func_return -> ID LPAREN punto_func_exists punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub .)


state 278

    (69) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE . estatutos RBRACE punto_termina_for SEMICOLON
    (43) estatutos -> . estatutosCycle
    (44) estatutos -> . func_regresar
    (45) estatutosCycle -> . estatutos_opciones estatutos
    (46) estatutosCycle -> . estatutos_opciones
    (54) func_regresar -> . REGRESAR exp SEMICOLON punto_check_types
    (47) estatutos_opciones -> . asignar
    (48) estatutos_opciones -> . llamada_func_void
    (49) estatutos_opciones -> . ciclo_for
    (50) estatutos_opciones -> . ciclo_while
    (51) estatutos_opciones -> . condicion
    (52) estatutos_opciones -> . imprimir
    (53) estatutos_opciones -> . leer
    (56) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (128) llamada_func_void -> . ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON
    (69) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (65) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (74) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (75) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (135) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (64) leer -> . LEER variable SEMICOLON
    (57) variable -> . ID variable_aux

    REGRESAR        shift and go to state 203
    ID              shift and go to state 67
    PORCADA         shift and go to state 68
    MIENTRAS        shift and go to state 69
    SI              shift and go to state 70
    IMPRIMIR        shift and go to state 71
    LEER            shift and go to state 72

    estatutos                      shift and go to state 285
    estatutosCycle                 shift and go to state 200
    func_regresar                  shift and go to state 201
    estatutos_opciones             shift and go to state 202
    asignar                        shift and go to state 59
    llamada_func_void              shift and go to state 60
    ciclo_for                      shift and go to state 61
    ciclo_while                    shift and go to state 62
    condicion                      shift and go to state 63
    imprimir                       shift and go to state 64
    leer                           shift and go to state 65
    variable                       shift and go to state 66

state 279

    (65) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while . SEMICOLON

    SEMICOLON       shift and go to state 286


state 280

    (74) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .

    ID              reduce using rule 74 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    PORCADA         reduce using rule 74 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    MIENTRAS        reduce using rule 74 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    SI              reduce using rule 74 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    IMPRIMIR        reduce using rule 74 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    LEER            reduce using rule 74 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    RBRACE          reduce using rule 74 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    REGRESAR        reduce using rule 74 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)


state 281

    (75) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino . LBRACE estatutos RBRACE punto_fin_si SEMICOLON

    LBRACE          shift and go to state 287


state 282

    (26) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle .

    SEMICOLON       reduce using rule 26 (arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle .)


state 283

    (30) matrixCycle -> COMMA ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    RBRACKET        shift and go to state 288


state 284

    (123) func_params_aux -> COMMA exp punto_check_param func_params_aux .

    RPAREN          reduce using rule 123 (func_params_aux -> COMMA exp punto_check_param func_params_aux .)


state 285

    (69) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos . RBRACE punto_termina_for SEMICOLON

    RBRACE          shift and go to state 289


state 286

    (65) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .

    ID              reduce using rule 65 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    PORCADA         reduce using rule 65 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    MIENTRAS        reduce using rule 65 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    SI              reduce using rule 65 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    IMPRIMIR        reduce using rule 65 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    LEER            reduce using rule 65 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    RBRACE          reduce using rule 65 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    REGRESAR        reduce using rule 65 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)


state 287

    (75) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE . estatutos RBRACE punto_fin_si SEMICOLON
    (43) estatutos -> . estatutosCycle
    (44) estatutos -> . func_regresar
    (45) estatutosCycle -> . estatutos_opciones estatutos
    (46) estatutosCycle -> . estatutos_opciones
    (54) func_regresar -> . REGRESAR exp SEMICOLON punto_check_types
    (47) estatutos_opciones -> . asignar
    (48) estatutos_opciones -> . llamada_func_void
    (49) estatutos_opciones -> . ciclo_for
    (50) estatutos_opciones -> . ciclo_while
    (51) estatutos_opciones -> . condicion
    (52) estatutos_opciones -> . imprimir
    (53) estatutos_opciones -> . leer
    (56) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (128) llamada_func_void -> . ID LPAREN punto_func_exists punto_validate_isvoid punto_create_era func_params RPAREN punto_check_total_params punto_create_gosub SEMICOLON
    (69) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (65) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (74) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (75) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (135) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (64) leer -> . LEER variable SEMICOLON
    (57) variable -> . ID variable_aux

    REGRESAR        shift and go to state 203
    ID              shift and go to state 67
    PORCADA         shift and go to state 68
    MIENTRAS        shift and go to state 69
    SI              shift and go to state 70
    IMPRIMIR        shift and go to state 71
    LEER            shift and go to state 72

    estatutos                      shift and go to state 290
    estatutosCycle                 shift and go to state 200
    func_regresar                  shift and go to state 201
    estatutos_opciones             shift and go to state 202
    asignar                        shift and go to state 59
    llamada_func_void              shift and go to state 60
    ciclo_for                      shift and go to state 61
    ciclo_while                    shift and go to state 62
    condicion                      shift and go to state 63
    imprimir                       shift and go to state 64
    leer                           shift and go to state 65
    variable                       shift and go to state 66

state 288

    (30) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    LBRACKET        shift and go to state 291


state 289

    (69) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE . punto_termina_for SEMICOLON
    (73) punto_termina_for -> .

    SEMICOLON       reduce using rule 73 (punto_termina_for -> .)

    punto_termina_for              shift and go to state 292

state 290

    (75) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos . RBRACE punto_fin_si SEMICOLON

    RBRACE          shift and go to state 293


state 291

    (30) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET punto_matrix matrixCycle

    CTEI            shift and go to state 294


state 292

    (69) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for . SEMICOLON

    SEMICOLON       shift and go to state 295


state 293

    (75) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE . punto_fin_si SEMICOLON
    (77) punto_fin_si -> .

    SEMICOLON       reduce using rule 77 (punto_fin_si -> .)

    punto_fin_si                   shift and go to state 296

state 294

    (30) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET punto_matrix matrixCycle

    RBRACKET        shift and go to state 297


state 295

    (69) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .

    ID              reduce using rule 69 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    PORCADA         reduce using rule 69 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    MIENTRAS        reduce using rule 69 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    SI              reduce using rule 69 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    IMPRIMIR        reduce using rule 69 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    LEER            reduce using rule 69 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    RBRACE          reduce using rule 69 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    REGRESAR        reduce using rule 69 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)


state 296

    (75) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si . SEMICOLON

    SEMICOLON       shift and go to state 298


state 297

    (30) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . punto_matrix matrixCycle
    (32) punto_matrix -> .

    COMMA           reduce using rule 32 (punto_matrix -> .)
    SEMICOLON       reduce using rule 32 (punto_matrix -> .)

    punto_matrix                   shift and go to state 299

state 298

    (75) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .

    ID              reduce using rule 75 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    PORCADA         reduce using rule 75 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    MIENTRAS        reduce using rule 75 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    SI              reduce using rule 75 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    IMPRIMIR        reduce using rule 75 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    LEER            reduce using rule 75 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    RBRACE          reduce using rule 75 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    REGRESAR        reduce using rule 75 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)


state 299

    (30) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix . matrixCycle
    (30) matrixCycle -> . COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle
    (31) matrixCycle -> . empty
    (141) empty -> .

    COMMA           shift and go to state 246
    SEMICOLON       reduce using rule 141 (empty -> .)

    matrixCycle                    shift and go to state 300
    empty                          shift and go to state 247

state 300

    (30) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle .

    SEMICOLON       reduce using rule 30 (matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INICIO in state 5 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 5 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 111 resolved as shift
