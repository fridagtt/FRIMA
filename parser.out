Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTECHAR

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID punto_programa COLON inicio
Rule 2     programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio
Rule 3     programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio
Rule 4     programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio
Rule 5     punto_programa -> <empty>
Rule 6     inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON
Rule 7     punto_update_goto -> <empty>
Rule 8     dec_var_cycle -> dec_var dec_var_cycle
Rule 9     dec_var_cycle -> empty
Rule 10    dec_func_cycle -> dec_func dec_func_cycle
Rule 11    dec_func_cycle -> empty
Rule 12    dec_var -> simple_var
Rule 13    dec_var -> array
Rule 14    dec_var -> matrix
Rule 15    type -> ENTERO
Rule 16    type -> DECIMAL
Rule 17    type -> LETRA
Rule 18    simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
Rule 19    simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle
Rule 20    simpleVarCycle -> empty
Rule 21    punto_simple_var -> <empty>
Rule 22    array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
Rule 23    arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle
Rule 24    arrayCycle -> empty
Rule 25    punto_array -> <empty>
Rule 26    matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON
Rule 27    matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle
Rule 28    matrixCycle -> empty
Rule 29    punto_matrix -> <empty>
Rule 30    dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos dec_func_regresar RBRACE SEMICOLON punto_end_function
Rule 31    dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
Rule 32    punto_global_func_var -> <empty>
Rule 33    dec_func_regresar -> REGRESAR exp SEMICOLON
Rule 34    dec_func_regresar -> empty
Rule 35    punto_end_function -> <empty>
Rule 36    punto_add_func -> <empty>
Rule 37    parameter -> type ID punto_add_parameter parameterCycle
Rule 38    parameter -> empty
Rule 39    parameterCycle -> COMMA type ID punto_add_parameter parameterCycle
Rule 40    parameterCycle -> empty
Rule 41    punto_add_parameter -> <empty>
Rule 42    estatutos -> estatutos_opciones estatutos
Rule 43    estatutos -> empty
Rule 44    estatutos_opciones -> asignar
Rule 45    estatutos_opciones -> llamada_func
Rule 46    estatutos_opciones -> ciclo_for
Rule 47    estatutos_opciones -> ciclo_while
Rule 48    estatutos_opciones -> condicion
Rule 49    estatutos_opciones -> imprimir
Rule 50    estatutos_opciones -> leer
Rule 51    func_regresar -> REGRESAR exp SEMICOLON
Rule 52    asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
Rule 53    variable -> ID variable_aux
Rule 54    variable_aux -> LBRACKET exp RBRACKET
Rule 55    variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 56    variable_aux -> empty
Rule 57    push_op_igual -> <empty>
Rule 58    check_op_igual -> <empty>
Rule 59    leer -> LEER variable SEMICOLON
Rule 60    ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
Rule 61    punto_inicio_while -> <empty>
Rule 62    punto_medio_while -> <empty>
Rule 63    punto_fin_while -> <empty>
Rule 64    ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
Rule 65    punto_existe_id -> <empty>
Rule 66    punto_valida_int -> <empty>
Rule 67    punto_valida_exp -> <empty>
Rule 68    punto_termina_for -> <empty>
Rule 69    condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
Rule 70    condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
Rule 71    punto_si -> <empty>
Rule 72    punto_fin_si -> <empty>
Rule 73    punto_sino -> <empty>
Rule 74    hyper_exp -> super_exp hyper_exp_aux
Rule 75    hyper_exp_aux -> push_op_logicos super_exp check_op_logicos
Rule 76    hyper_exp_aux -> empty
Rule 77    check_op_logicos -> <empty>
Rule 78    push_op_logicos -> Y
Rule 79    push_op_logicos -> O
Rule 80    push_op_logicos -> empty
Rule 81    super_exp -> exp super_exp_aux
Rule 82    super_exp_aux -> push_op_relacionales exp check_op_relacionales
Rule 83    super_exp_aux -> empty
Rule 84    check_op_relacionales -> <empty>
Rule 85    push_op_relacionales -> GREATER
Rule 86    push_op_relacionales -> LESS
Rule 87    push_op_relacionales -> GREATEREQ
Rule 88    push_op_relacionales -> LESSEQ
Rule 89    push_op_relacionales -> NOTEQUAL
Rule 90    push_op_relacionales -> EQUAL
Rule 91    push_op_relacionales -> empty
Rule 92    exp -> term check_op_masmenos exp_aux
Rule 93    exp_aux -> push_op_exp_masmenos exp
Rule 94    exp_aux -> empty
Rule 95    push_op_exp_masmenos -> PLUS
Rule 96    push_op_exp_masmenos -> MINUS
Rule 97    push_op_exp_masmenos -> empty
Rule 98    check_op_masmenos -> <empty>
Rule 99    term -> factor check_op_pordiv term_aux
Rule 100   term_aux -> push_op_exp_pordiv term
Rule 101   term_aux -> empty
Rule 102   check_op_pordiv -> <empty>
Rule 103   push_op_exp_pordiv -> TIMES
Rule 104   push_op_exp_pordiv -> DIVIDE
Rule 105   push_op_exp_pordiv -> empty
Rule 106   factor -> factor_constante
Rule 107   factor -> factor_variable
Rule 108   factor -> factor_expresion
Rule 109   factor_constante -> CTEI push_int
Rule 110   factor_constante -> CTEF push_float
Rule 111   factor_variable -> ID push_id
Rule 112   factor_variable -> ID LBRACKET hyper_exp RBRACKET
Rule 113   factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
Rule 114   factor_variable -> ID llamada_func
Rule 115   factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
Rule 116   meter_fondo_falso -> <empty>
Rule 117   quitar_fondo_falso -> <empty>
Rule 118   push_int -> <empty>
Rule 119   push_float -> <empty>
Rule 120   push_id -> <empty>
Rule 121   llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON
Rule 122   llamadaCYCLE -> hyper_exp llamadaCYCLE_aux
Rule 123   llamadaCYCLE -> empty
Rule 124   llamadaCYCLE_aux -> COMMA hyper_exp llamadaCYCLE_aux
Rule 125   llamadaCYCLE_aux -> empty
Rule 126   imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
Rule 127   imprimir_aux -> exp push_imprimir imprimirCycle
Rule 128   imprimir_aux -> CTESTRING push_imprimir imprimirCycle
Rule 129   imprimirCycle -> COMMA imprimir_aux
Rule 130   imprimirCycle -> empty
Rule 131   push_imprimir -> <empty>
Rule 132   empty -> <empty>

Terminals, with rules where they appear

ARROW                : 18 22 26
ASSIGN               : 52 64
COLON                : 1 2 3 4
COMMA                : 19 23 27 39 124 129
CTECHAR              : 
CTEF                 : 110
CTEI                 : 22 23 26 26 27 27 109
CTESTRING            : 128
DECIMAL              : 16
DIVIDE               : 104
ENTERO               : 15
EQUAL                : 90
FUNCION              : 30 31
GREATER              : 85
GREATEREQ            : 87
HASTA                : 64
ID                   : 1 2 3 4 18 19 22 23 26 27 30 31 37 39 53 64 111 112 113 114 121
IMPRIMIR             : 126
INICIO               : 6
LBRACE               : 6 30 31 60 64 69 70 70
LBRACKET             : 22 23 26 26 27 27 54 55 55 112 113 113
LEER                 : 59
LESS                 : 86
LESSEQ               : 88
LETRA                : 17
LPAREN               : 6 30 31 60 69 70 115 121 126
MIENTRAS             : 60
MINUS                : 96
NOTEQUAL             : 89
O                    : 79
PLUS                 : 95
PORCADA              : 64
PROGRAMA             : 1 2 3 4
RBRACE               : 6 30 31 60 64 69 70 70
RBRACKET             : 22 23 26 26 27 27 54 55 55 112 113 113
REGRESAR             : 33 51
RENGLON              : 22
RPAREN               : 6 30 31 60 69 70 115 121 126
SEMICOLON            : 6 18 22 26 30 31 33 51 52 59 60 64 69 70 121 126
SI                   : 69 70
SINO                 : 70
SINREGRESAR          : 31
TABLA                : 26
TIMES                : 103
VARIABLE             : 18
Y                    : 78
error                : 

Nonterminals, with rules where they appear

array                : 13
arrayCycle           : 22 23
asignar              : 44
check_op_igual       : 52
check_op_logicos     : 75
check_op_masmenos    : 92
check_op_pordiv      : 99
check_op_relacionales : 82
ciclo_for            : 46
ciclo_while          : 47
condicion            : 48
dec_func             : 10
dec_func_cycle       : 3 4 10
dec_func_regresar    : 30
dec_var              : 8
dec_var_cycle        : 2 3 8 30 31
empty                : 9 11 20 24 28 34 38 40 43 56 76 80 83 91 94 97 101 105 123 125 130
estatutos            : 6 30 31 42 60 64 69 70 70
estatutos_opciones   : 42
exp                  : 33 51 54 55 55 81 82 93 127
exp_aux              : 92
factor               : 99
factor_constante     : 106
factor_expresion     : 108
factor_variable      : 107
func_regresar        : 
hyper_exp            : 52 60 64 64 69 70 112 113 113 115 122 124
hyper_exp_aux        : 74
imprimir             : 49
imprimirCycle        : 127 128
imprimir_aux         : 126 129
inicio               : 1 2 3 4
leer                 : 50
llamadaCYCLE         : 121
llamadaCYCLE_aux     : 122 124
llamada_func         : 45 114
matrix               : 14
matrixCycle          : 26 27
meter_fondo_falso    : 115
parameter            : 30 31
parameterCycle       : 37 39
programa             : 0
punto_add_func       : 30 31
punto_add_parameter  : 37 39
punto_array          : 22 23
punto_end_function   : 30 31
punto_existe_id      : 64
punto_fin_si         : 69 70
punto_fin_while      : 60
punto_global_func_var : 30
punto_inicio_while   : 60
punto_matrix         : 26 27
punto_medio_while    : 60
punto_programa       : 1 2 3 4
punto_si             : 69 70
punto_simple_var     : 18 19
punto_sino           : 70
punto_termina_for    : 64
punto_update_goto    : 6
punto_valida_exp     : 64
punto_valida_int     : 64
push_float           : 110
push_id              : 111
push_imprimir        : 127 128
push_int             : 109
push_op_exp_masmenos : 93
push_op_exp_pordiv   : 100
push_op_igual        : 52
push_op_logicos      : 75
push_op_relacionales : 82
quitar_fondo_falso   : 115
simpleVarCycle       : 18 19
simple_var           : 12
super_exp            : 74 75
super_exp_aux        : 81
term                 : 92 100
term_aux             : 99
type                 : 18 22 26 30 37 39
variable             : 52 59
variable_aux         : 53

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID punto_programa COLON inicio
    (2) programa -> . PROGRAMA ID punto_programa COLON dec_var_cycle inicio
    (3) programa -> . PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> . PROGRAMA ID punto_programa COLON dec_func_cycle inicio

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID punto_programa COLON inicio
    (2) programa -> PROGRAMA . ID punto_programa COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA . ID punto_programa COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA . ID punto_programa COLON dec_func_cycle inicio

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . punto_programa COLON inicio
    (2) programa -> PROGRAMA ID . punto_programa COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA ID . punto_programa COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA ID . punto_programa COLON dec_func_cycle inicio
    (5) punto_programa -> .

    COLON           reduce using rule 5 (punto_programa -> .)

    punto_programa                 shift and go to state 4

state 4

    (1) programa -> PROGRAMA ID punto_programa . COLON inicio
    (2) programa -> PROGRAMA ID punto_programa . COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA ID punto_programa . COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA ID punto_programa . COLON dec_func_cycle inicio

    COLON           shift and go to state 5


state 5

    (1) programa -> PROGRAMA ID punto_programa COLON . inicio
    (2) programa -> PROGRAMA ID punto_programa COLON . dec_var_cycle inicio
    (3) programa -> PROGRAMA ID punto_programa COLON . dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA ID punto_programa COLON . dec_func_cycle inicio
    (6) inicio -> . INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON
    (8) dec_var_cycle -> . dec_var dec_var_cycle
    (9) dec_var_cycle -> . empty
    (10) dec_func_cycle -> . dec_func dec_func_cycle
    (11) dec_func_cycle -> . empty
    (12) dec_var -> . simple_var
    (13) dec_var -> . array
    (14) dec_var -> . matrix
    (132) empty -> .
    (30) dec_func -> . FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos dec_func_regresar RBRACE SEMICOLON punto_end_function
    (31) dec_func -> . FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (18) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (22) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (26) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

  ! shift/reduce conflict for INICIO resolved as shift
  ! shift/reduce conflict for FUNCION resolved as shift
    INICIO          shift and go to state 9
    FUNCION         shift and go to state 16
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

  ! INICIO          [ reduce using rule 132 (empty -> .) ]
  ! FUNCION         [ reduce using rule 132 (empty -> .) ]

    inicio                         shift and go to state 6
    dec_var_cycle                  shift and go to state 7
    dec_func_cycle                 shift and go to state 8
    dec_var                        shift and go to state 10
    empty                          shift and go to state 11
    dec_func                       shift and go to state 12
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 6

    (1) programa -> PROGRAMA ID punto_programa COLON inicio .

    $end            reduce using rule 1 (programa -> PROGRAMA ID punto_programa COLON inicio .)


state 7

    (2) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle . inicio
    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle . dec_func_cycle inicio
    (6) inicio -> . INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON
    (10) dec_func_cycle -> . dec_func dec_func_cycle
    (11) dec_func_cycle -> . empty
    (30) dec_func -> . FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos dec_func_regresar RBRACE SEMICOLON punto_end_function
    (31) dec_func -> . FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (132) empty -> .

  ! shift/reduce conflict for INICIO resolved as shift
    INICIO          shift and go to state 9
    FUNCION         shift and go to state 16

  ! INICIO          [ reduce using rule 132 (empty -> .) ]

    inicio                         shift and go to state 20
    dec_func_cycle                 shift and go to state 21
    dec_func                       shift and go to state 12
    empty                          shift and go to state 22

state 8

    (4) programa -> PROGRAMA ID punto_programa COLON dec_func_cycle . inicio
    (6) inicio -> . INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON

    INICIO          shift and go to state 9

    inicio                         shift and go to state 23

state 9

    (6) inicio -> INICIO . LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON

    LPAREN          shift and go to state 24


state 10

    (8) dec_var_cycle -> dec_var . dec_var_cycle
    (8) dec_var_cycle -> . dec_var dec_var_cycle
    (9) dec_var_cycle -> . empty
    (12) dec_var -> . simple_var
    (13) dec_var -> . array
    (14) dec_var -> . matrix
    (132) empty -> .
    (18) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (22) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (26) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    INICIO          reduce using rule 132 (empty -> .)
    FUNCION         reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    PORCADA         reduce using rule 132 (empty -> .)
    MIENTRAS        reduce using rule 132 (empty -> .)
    SI              reduce using rule 132 (empty -> .)
    IMPRIMIR        reduce using rule 132 (empty -> .)
    LEER            reduce using rule 132 (empty -> .)
    RBRACE          reduce using rule 132 (empty -> .)
    REGRESAR        reduce using rule 132 (empty -> .)
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

    dec_var                        shift and go to state 10
    dec_var_cycle                  shift and go to state 25
    empty                          shift and go to state 26
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 11

    (9) dec_var_cycle -> empty .
    (11) dec_func_cycle -> empty .

  ! reduce/reduce conflict for INICIO resolved using rule 9 (dec_var_cycle -> empty .)
    INICIO          reduce using rule 9 (dec_var_cycle -> empty .)
    FUNCION         reduce using rule 9 (dec_var_cycle -> empty .)

  ! INICIO          [ reduce using rule 11 (dec_func_cycle -> empty .) ]


state 12

    (10) dec_func_cycle -> dec_func . dec_func_cycle
    (10) dec_func_cycle -> . dec_func dec_func_cycle
    (11) dec_func_cycle -> . empty
    (30) dec_func -> . FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos dec_func_regresar RBRACE SEMICOLON punto_end_function
    (31) dec_func -> . FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (132) empty -> .

    FUNCION         shift and go to state 16
    INICIO          reduce using rule 132 (empty -> .)

    dec_func                       shift and go to state 12
    dec_func_cycle                 shift and go to state 27
    empty                          shift and go to state 22

state 13

    (12) dec_var -> simple_var .

    VARIABLE        reduce using rule 12 (dec_var -> simple_var .)
    RENGLON         reduce using rule 12 (dec_var -> simple_var .)
    TABLA           reduce using rule 12 (dec_var -> simple_var .)
    INICIO          reduce using rule 12 (dec_var -> simple_var .)
    FUNCION         reduce using rule 12 (dec_var -> simple_var .)
    ID              reduce using rule 12 (dec_var -> simple_var .)
    PORCADA         reduce using rule 12 (dec_var -> simple_var .)
    MIENTRAS        reduce using rule 12 (dec_var -> simple_var .)
    SI              reduce using rule 12 (dec_var -> simple_var .)
    IMPRIMIR        reduce using rule 12 (dec_var -> simple_var .)
    LEER            reduce using rule 12 (dec_var -> simple_var .)
    RBRACE          reduce using rule 12 (dec_var -> simple_var .)
    REGRESAR        reduce using rule 12 (dec_var -> simple_var .)


state 14

    (13) dec_var -> array .

    VARIABLE        reduce using rule 13 (dec_var -> array .)
    RENGLON         reduce using rule 13 (dec_var -> array .)
    TABLA           reduce using rule 13 (dec_var -> array .)
    INICIO          reduce using rule 13 (dec_var -> array .)
    FUNCION         reduce using rule 13 (dec_var -> array .)
    ID              reduce using rule 13 (dec_var -> array .)
    PORCADA         reduce using rule 13 (dec_var -> array .)
    MIENTRAS        reduce using rule 13 (dec_var -> array .)
    SI              reduce using rule 13 (dec_var -> array .)
    IMPRIMIR        reduce using rule 13 (dec_var -> array .)
    LEER            reduce using rule 13 (dec_var -> array .)
    RBRACE          reduce using rule 13 (dec_var -> array .)
    REGRESAR        reduce using rule 13 (dec_var -> array .)


state 15

    (14) dec_var -> matrix .

    VARIABLE        reduce using rule 14 (dec_var -> matrix .)
    RENGLON         reduce using rule 14 (dec_var -> matrix .)
    TABLA           reduce using rule 14 (dec_var -> matrix .)
    INICIO          reduce using rule 14 (dec_var -> matrix .)
    FUNCION         reduce using rule 14 (dec_var -> matrix .)
    ID              reduce using rule 14 (dec_var -> matrix .)
    PORCADA         reduce using rule 14 (dec_var -> matrix .)
    MIENTRAS        reduce using rule 14 (dec_var -> matrix .)
    SI              reduce using rule 14 (dec_var -> matrix .)
    IMPRIMIR        reduce using rule 14 (dec_var -> matrix .)
    LEER            reduce using rule 14 (dec_var -> matrix .)
    RBRACE          reduce using rule 14 (dec_var -> matrix .)
    REGRESAR        reduce using rule 14 (dec_var -> matrix .)


state 16

    (30) dec_func -> FUNCION . type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos dec_func_regresar RBRACE SEMICOLON punto_end_function
    (31) dec_func -> FUNCION . SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (15) type -> . ENTERO
    (16) type -> . DECIMAL
    (17) type -> . LETRA

    SINREGRESAR     shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32

    type                           shift and go to state 28

state 17

    (18) simple_var -> VARIABLE . type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (15) type -> . ENTERO
    (16) type -> . DECIMAL
    (17) type -> . LETRA

    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32

    type                           shift and go to state 33

state 18

    (22) array -> RENGLON . type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (15) type -> . ENTERO
    (16) type -> . DECIMAL
    (17) type -> . LETRA

    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32

    type                           shift and go to state 34

state 19

    (26) matrix -> TABLA . type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON
    (15) type -> . ENTERO
    (16) type -> . DECIMAL
    (17) type -> . LETRA

    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32

    type                           shift and go to state 35

state 20

    (2) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio .

    $end            reduce using rule 2 (programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio .)


state 21

    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle . inicio
    (6) inicio -> . INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON

    INICIO          shift and go to state 9

    inicio                         shift and go to state 36

state 22

    (11) dec_func_cycle -> empty .

    INICIO          reduce using rule 11 (dec_func_cycle -> empty .)


state 23

    (4) programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio .

    $end            reduce using rule 4 (programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio .)


state 24

    (6) inicio -> INICIO LPAREN . RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON

    RPAREN          shift and go to state 37


state 25

    (8) dec_var_cycle -> dec_var dec_var_cycle .

    INICIO          reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)
    FUNCION         reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)
    ID              reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)
    PORCADA         reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)
    MIENTRAS        reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)
    SI              reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)
    IMPRIMIR        reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)
    LEER            reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)
    RBRACE          reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)
    REGRESAR        reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)


state 26

    (9) dec_var_cycle -> empty .

    INICIO          reduce using rule 9 (dec_var_cycle -> empty .)
    FUNCION         reduce using rule 9 (dec_var_cycle -> empty .)
    ID              reduce using rule 9 (dec_var_cycle -> empty .)
    PORCADA         reduce using rule 9 (dec_var_cycle -> empty .)
    MIENTRAS        reduce using rule 9 (dec_var_cycle -> empty .)
    SI              reduce using rule 9 (dec_var_cycle -> empty .)
    IMPRIMIR        reduce using rule 9 (dec_var_cycle -> empty .)
    LEER            reduce using rule 9 (dec_var_cycle -> empty .)
    RBRACE          reduce using rule 9 (dec_var_cycle -> empty .)
    REGRESAR        reduce using rule 9 (dec_var_cycle -> empty .)


state 27

    (10) dec_func_cycle -> dec_func dec_func_cycle .

    INICIO          reduce using rule 10 (dec_func_cycle -> dec_func dec_func_cycle .)


state 28

    (30) dec_func -> FUNCION type . ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos dec_func_regresar RBRACE SEMICOLON punto_end_function

    ID              shift and go to state 38


state 29

    (31) dec_func -> FUNCION SINREGRESAR . ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    ID              shift and go to state 39


state 30

    (15) type -> ENTERO .

    ID              reduce using rule 15 (type -> ENTERO .)
    ARROW           reduce using rule 15 (type -> ENTERO .)


state 31

    (16) type -> DECIMAL .

    ID              reduce using rule 16 (type -> DECIMAL .)
    ARROW           reduce using rule 16 (type -> DECIMAL .)


state 32

    (17) type -> LETRA .

    ID              reduce using rule 17 (type -> LETRA .)
    ARROW           reduce using rule 17 (type -> LETRA .)


state 33

    (18) simple_var -> VARIABLE type . ARROW ID punto_simple_var simpleVarCycle SEMICOLON

    ARROW           shift and go to state 40


state 34

    (22) array -> RENGLON type . ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON

    ARROW           shift and go to state 41


state 35

    (26) matrix -> TABLA type . ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    ARROW           shift and go to state 42


state 36

    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio .

    $end            reduce using rule 3 (programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio .)


state 37

    (6) inicio -> INICIO LPAREN RPAREN . LBRACE punto_update_goto estatutos RBRACE SEMICOLON

    LBRACE          shift and go to state 43


state 38

    (30) dec_func -> FUNCION type ID . punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos dec_func_regresar RBRACE SEMICOLON punto_end_function
    (36) punto_add_func -> .

    LPAREN          reduce using rule 36 (punto_add_func -> .)

    punto_add_func                 shift and go to state 44

state 39

    (31) dec_func -> FUNCION SINREGRESAR ID . punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (36) punto_add_func -> .

    LPAREN          reduce using rule 36 (punto_add_func -> .)

    punto_add_func                 shift and go to state 45

state 40

    (18) simple_var -> VARIABLE type ARROW . ID punto_simple_var simpleVarCycle SEMICOLON

    ID              shift and go to state 46


state 41

    (22) array -> RENGLON type ARROW . ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON

    ID              shift and go to state 47


state 42

    (26) matrix -> TABLA type ARROW . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    ID              shift and go to state 48


state 43

    (6) inicio -> INICIO LPAREN RPAREN LBRACE . punto_update_goto estatutos RBRACE SEMICOLON
    (7) punto_update_goto -> .

    ID              reduce using rule 7 (punto_update_goto -> .)
    PORCADA         reduce using rule 7 (punto_update_goto -> .)
    MIENTRAS        reduce using rule 7 (punto_update_goto -> .)
    SI              reduce using rule 7 (punto_update_goto -> .)
    IMPRIMIR        reduce using rule 7 (punto_update_goto -> .)
    LEER            reduce using rule 7 (punto_update_goto -> .)
    RBRACE          reduce using rule 7 (punto_update_goto -> .)

    punto_update_goto              shift and go to state 49

state 44

    (30) dec_func -> FUNCION type ID punto_add_func . punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos dec_func_regresar RBRACE SEMICOLON punto_end_function
    (32) punto_global_func_var -> .

    LPAREN          reduce using rule 32 (punto_global_func_var -> .)

    punto_global_func_var          shift and go to state 50

state 45

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func . LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    LPAREN          shift and go to state 51


state 46

    (18) simple_var -> VARIABLE type ARROW ID . punto_simple_var simpleVarCycle SEMICOLON
    (21) punto_simple_var -> .

    COMMA           reduce using rule 21 (punto_simple_var -> .)
    SEMICOLON       reduce using rule 21 (punto_simple_var -> .)

    punto_simple_var               shift and go to state 52

state 47

    (22) array -> RENGLON type ARROW ID . LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON

    LBRACKET        shift and go to state 53


state 48

    (26) matrix -> TABLA type ARROW ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    LBRACKET        shift and go to state 54


state 49

    (6) inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto . estatutos RBRACE SEMICOLON
    (42) estatutos -> . estatutos_opciones estatutos
    (43) estatutos -> . empty
    (44) estatutos_opciones -> . asignar
    (45) estatutos_opciones -> . llamada_func
    (46) estatutos_opciones -> . ciclo_for
    (47) estatutos_opciones -> . ciclo_while
    (48) estatutos_opciones -> . condicion
    (49) estatutos_opciones -> . imprimir
    (50) estatutos_opciones -> . leer
    (132) empty -> .
    (52) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (121) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (64) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (60) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (69) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (70) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (126) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (59) leer -> . LEER variable SEMICOLON
    (53) variable -> . ID variable_aux

    RBRACE          reduce using rule 132 (empty -> .)
    ID              shift and go to state 66
    PORCADA         shift and go to state 67
    MIENTRAS        shift and go to state 68
    SI              shift and go to state 69
    IMPRIMIR        shift and go to state 70
    LEER            shift and go to state 71

    estatutos                      shift and go to state 55
    estatutos_opciones             shift and go to state 56
    empty                          shift and go to state 57
    asignar                        shift and go to state 58
    llamada_func                   shift and go to state 59
    ciclo_for                      shift and go to state 60
    ciclo_while                    shift and go to state 61
    condicion                      shift and go to state 62
    imprimir                       shift and go to state 63
    leer                           shift and go to state 64
    variable                       shift and go to state 65

state 50

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var . LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos dec_func_regresar RBRACE SEMICOLON punto_end_function

    LPAREN          shift and go to state 72


state 51

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN . parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (37) parameter -> . type ID punto_add_parameter parameterCycle
    (38) parameter -> . empty
    (15) type -> . ENTERO
    (16) type -> . DECIMAL
    (17) type -> . LETRA
    (132) empty -> .

    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32
    RPAREN          reduce using rule 132 (empty -> .)

    parameter                      shift and go to state 73
    type                           shift and go to state 74
    empty                          shift and go to state 75

state 52

    (18) simple_var -> VARIABLE type ARROW ID punto_simple_var . simpleVarCycle SEMICOLON
    (19) simpleVarCycle -> . COMMA ID punto_simple_var simpleVarCycle
    (20) simpleVarCycle -> . empty
    (132) empty -> .

    COMMA           shift and go to state 77
    SEMICOLON       reduce using rule 132 (empty -> .)

    simpleVarCycle                 shift and go to state 76
    empty                          shift and go to state 78

state 53

    (22) array -> RENGLON type ARROW ID LBRACKET . CTEI RBRACKET punto_array arrayCycle SEMICOLON

    CTEI            shift and go to state 79


state 54

    (26) matrix -> TABLA type ARROW ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    CTEI            shift and go to state 80


state 55

    (6) inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos . RBRACE SEMICOLON

    RBRACE          shift and go to state 81


state 56

    (42) estatutos -> estatutos_opciones . estatutos
    (42) estatutos -> . estatutos_opciones estatutos
    (43) estatutos -> . empty
    (44) estatutos_opciones -> . asignar
    (45) estatutos_opciones -> . llamada_func
    (46) estatutos_opciones -> . ciclo_for
    (47) estatutos_opciones -> . ciclo_while
    (48) estatutos_opciones -> . condicion
    (49) estatutos_opciones -> . imprimir
    (50) estatutos_opciones -> . leer
    (132) empty -> .
    (52) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (121) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (64) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (60) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (69) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (70) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (126) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (59) leer -> . LEER variable SEMICOLON
    (53) variable -> . ID variable_aux

    RBRACE          reduce using rule 132 (empty -> .)
    REGRESAR        reduce using rule 132 (empty -> .)
    ID              shift and go to state 66
    PORCADA         shift and go to state 67
    MIENTRAS        shift and go to state 68
    SI              shift and go to state 69
    IMPRIMIR        shift and go to state 70
    LEER            shift and go to state 71

    estatutos_opciones             shift and go to state 56
    estatutos                      shift and go to state 82
    empty                          shift and go to state 57
    asignar                        shift and go to state 58
    llamada_func                   shift and go to state 59
    ciclo_for                      shift and go to state 60
    ciclo_while                    shift and go to state 61
    condicion                      shift and go to state 62
    imprimir                       shift and go to state 63
    leer                           shift and go to state 64
    variable                       shift and go to state 65

state 57

    (43) estatutos -> empty .

    RBRACE          reduce using rule 43 (estatutos -> empty .)
    REGRESAR        reduce using rule 43 (estatutos -> empty .)


state 58

    (44) estatutos_opciones -> asignar .

    ID              reduce using rule 44 (estatutos_opciones -> asignar .)
    PORCADA         reduce using rule 44 (estatutos_opciones -> asignar .)
    MIENTRAS        reduce using rule 44 (estatutos_opciones -> asignar .)
    SI              reduce using rule 44 (estatutos_opciones -> asignar .)
    IMPRIMIR        reduce using rule 44 (estatutos_opciones -> asignar .)
    LEER            reduce using rule 44 (estatutos_opciones -> asignar .)
    RBRACE          reduce using rule 44 (estatutos_opciones -> asignar .)
    REGRESAR        reduce using rule 44 (estatutos_opciones -> asignar .)


state 59

    (45) estatutos_opciones -> llamada_func .

    ID              reduce using rule 45 (estatutos_opciones -> llamada_func .)
    PORCADA         reduce using rule 45 (estatutos_opciones -> llamada_func .)
    MIENTRAS        reduce using rule 45 (estatutos_opciones -> llamada_func .)
    SI              reduce using rule 45 (estatutos_opciones -> llamada_func .)
    IMPRIMIR        reduce using rule 45 (estatutos_opciones -> llamada_func .)
    LEER            reduce using rule 45 (estatutos_opciones -> llamada_func .)
    RBRACE          reduce using rule 45 (estatutos_opciones -> llamada_func .)
    REGRESAR        reduce using rule 45 (estatutos_opciones -> llamada_func .)


state 60

    (46) estatutos_opciones -> ciclo_for .

    ID              reduce using rule 46 (estatutos_opciones -> ciclo_for .)
    PORCADA         reduce using rule 46 (estatutos_opciones -> ciclo_for .)
    MIENTRAS        reduce using rule 46 (estatutos_opciones -> ciclo_for .)
    SI              reduce using rule 46 (estatutos_opciones -> ciclo_for .)
    IMPRIMIR        reduce using rule 46 (estatutos_opciones -> ciclo_for .)
    LEER            reduce using rule 46 (estatutos_opciones -> ciclo_for .)
    RBRACE          reduce using rule 46 (estatutos_opciones -> ciclo_for .)
    REGRESAR        reduce using rule 46 (estatutos_opciones -> ciclo_for .)


state 61

    (47) estatutos_opciones -> ciclo_while .

    ID              reduce using rule 47 (estatutos_opciones -> ciclo_while .)
    PORCADA         reduce using rule 47 (estatutos_opciones -> ciclo_while .)
    MIENTRAS        reduce using rule 47 (estatutos_opciones -> ciclo_while .)
    SI              reduce using rule 47 (estatutos_opciones -> ciclo_while .)
    IMPRIMIR        reduce using rule 47 (estatutos_opciones -> ciclo_while .)
    LEER            reduce using rule 47 (estatutos_opciones -> ciclo_while .)
    RBRACE          reduce using rule 47 (estatutos_opciones -> ciclo_while .)
    REGRESAR        reduce using rule 47 (estatutos_opciones -> ciclo_while .)


state 62

    (48) estatutos_opciones -> condicion .

    ID              reduce using rule 48 (estatutos_opciones -> condicion .)
    PORCADA         reduce using rule 48 (estatutos_opciones -> condicion .)
    MIENTRAS        reduce using rule 48 (estatutos_opciones -> condicion .)
    SI              reduce using rule 48 (estatutos_opciones -> condicion .)
    IMPRIMIR        reduce using rule 48 (estatutos_opciones -> condicion .)
    LEER            reduce using rule 48 (estatutos_opciones -> condicion .)
    RBRACE          reduce using rule 48 (estatutos_opciones -> condicion .)
    REGRESAR        reduce using rule 48 (estatutos_opciones -> condicion .)


state 63

    (49) estatutos_opciones -> imprimir .

    ID              reduce using rule 49 (estatutos_opciones -> imprimir .)
    PORCADA         reduce using rule 49 (estatutos_opciones -> imprimir .)
    MIENTRAS        reduce using rule 49 (estatutos_opciones -> imprimir .)
    SI              reduce using rule 49 (estatutos_opciones -> imprimir .)
    IMPRIMIR        reduce using rule 49 (estatutos_opciones -> imprimir .)
    LEER            reduce using rule 49 (estatutos_opciones -> imprimir .)
    RBRACE          reduce using rule 49 (estatutos_opciones -> imprimir .)
    REGRESAR        reduce using rule 49 (estatutos_opciones -> imprimir .)


state 64

    (50) estatutos_opciones -> leer .

    ID              reduce using rule 50 (estatutos_opciones -> leer .)
    PORCADA         reduce using rule 50 (estatutos_opciones -> leer .)
    MIENTRAS        reduce using rule 50 (estatutos_opciones -> leer .)
    SI              reduce using rule 50 (estatutos_opciones -> leer .)
    IMPRIMIR        reduce using rule 50 (estatutos_opciones -> leer .)
    LEER            reduce using rule 50 (estatutos_opciones -> leer .)
    RBRACE          reduce using rule 50 (estatutos_opciones -> leer .)
    REGRESAR        reduce using rule 50 (estatutos_opciones -> leer .)


state 65

    (52) asignar -> variable . ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON

    ASSIGN          shift and go to state 83


state 66

    (121) llamada_func -> ID . LPAREN llamadaCYCLE RPAREN SEMICOLON
    (53) variable -> ID . variable_aux
    (54) variable_aux -> . LBRACKET exp RBRACKET
    (55) variable_aux -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (56) variable_aux -> . empty
    (132) empty -> .

    LPAREN          shift and go to state 84
    LBRACKET        shift and go to state 86
    ASSIGN          reduce using rule 132 (empty -> .)

    variable_aux                   shift and go to state 85
    empty                          shift and go to state 87

state 67

    (64) ciclo_for -> PORCADA . ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON

    ID              shift and go to state 88


state 68

    (60) ciclo_while -> MIENTRAS . punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (61) punto_inicio_while -> .

    LPAREN          reduce using rule 61 (punto_inicio_while -> .)

    punto_inicio_while             shift and go to state 89

state 69

    (69) condicion -> SI . LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (70) condicion -> SI . LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON

    LPAREN          shift and go to state 90


state 70

    (126) imprimir -> IMPRIMIR . LPAREN imprimir_aux RPAREN SEMICOLON

    LPAREN          shift and go to state 91


state 71

    (59) leer -> LEER . variable SEMICOLON
    (53) variable -> . ID variable_aux

    ID              shift and go to state 93

    variable                       shift and go to state 92

state 72

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN . parameter RPAREN LBRACE dec_var_cycle estatutos dec_func_regresar RBRACE SEMICOLON punto_end_function
    (37) parameter -> . type ID punto_add_parameter parameterCycle
    (38) parameter -> . empty
    (15) type -> . ENTERO
    (16) type -> . DECIMAL
    (17) type -> . LETRA
    (132) empty -> .

    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32
    RPAREN          reduce using rule 132 (empty -> .)

    type                           shift and go to state 74
    parameter                      shift and go to state 94
    empty                          shift and go to state 75

state 73

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter . RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    RPAREN          shift and go to state 95


state 74

    (37) parameter -> type . ID punto_add_parameter parameterCycle

    ID              shift and go to state 96


state 75

    (38) parameter -> empty .

    RPAREN          reduce using rule 38 (parameter -> empty .)


state 76

    (18) simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle . SEMICOLON

    SEMICOLON       shift and go to state 97


state 77

    (19) simpleVarCycle -> COMMA . ID punto_simple_var simpleVarCycle

    ID              shift and go to state 98


state 78

    (20) simpleVarCycle -> empty .

    SEMICOLON       reduce using rule 20 (simpleVarCycle -> empty .)


state 79

    (22) array -> RENGLON type ARROW ID LBRACKET CTEI . RBRACKET punto_array arrayCycle SEMICOLON

    RBRACKET        shift and go to state 99


state 80

    (26) matrix -> TABLA type ARROW ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    RBRACKET        shift and go to state 100


state 81

    (6) inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 101


state 82

    (42) estatutos -> estatutos_opciones estatutos .

    RBRACE          reduce using rule 42 (estatutos -> estatutos_opciones estatutos .)
    REGRESAR        reduce using rule 42 (estatutos -> estatutos_opciones estatutos .)


state 83

    (52) asignar -> variable ASSIGN . push_op_igual hyper_exp check_op_igual SEMICOLON
    (57) push_op_igual -> .

    CTEI            reduce using rule 57 (push_op_igual -> .)
    CTEF            reduce using rule 57 (push_op_igual -> .)
    ID              reduce using rule 57 (push_op_igual -> .)
    LPAREN          reduce using rule 57 (push_op_igual -> .)

    push_op_igual                  shift and go to state 102

state 84

    (121) llamada_func -> ID LPAREN . llamadaCYCLE RPAREN SEMICOLON
    (122) llamadaCYCLE -> . hyper_exp llamadaCYCLE_aux
    (123) llamadaCYCLE -> . empty
    (74) hyper_exp -> . super_exp hyper_exp_aux
    (132) empty -> .
    (81) super_exp -> . exp super_exp_aux
    (92) exp -> . term check_op_masmenos exp_aux
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    RPAREN          reduce using rule 132 (empty -> .)
    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    llamadaCYCLE                   shift and go to state 105
    hyper_exp                      shift and go to state 106
    empty                          shift and go to state 107
    super_exp                      shift and go to state 108
    exp                            shift and go to state 109
    term                           shift and go to state 110
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 85

    (53) variable -> ID variable_aux .

    ASSIGN          reduce using rule 53 (variable -> ID variable_aux .)
    SEMICOLON       reduce using rule 53 (variable -> ID variable_aux .)


state 86

    (54) variable_aux -> LBRACKET . exp RBRACKET
    (55) variable_aux -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (92) exp -> . term check_op_masmenos exp_aux
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    exp                            shift and go to state 117
    term                           shift and go to state 110
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 87

    (56) variable_aux -> empty .

    ASSIGN          reduce using rule 56 (variable_aux -> empty .)
    SEMICOLON       reduce using rule 56 (variable_aux -> empty .)


state 88

    (64) ciclo_for -> PORCADA ID . punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (65) punto_existe_id -> .

    ASSIGN          reduce using rule 65 (punto_existe_id -> .)

    punto_existe_id                shift and go to state 118

state 89

    (60) ciclo_while -> MIENTRAS punto_inicio_while . LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON

    LPAREN          shift and go to state 119


state 90

    (69) condicion -> SI LPAREN . hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (70) condicion -> SI LPAREN . hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (74) hyper_exp -> . super_exp hyper_exp_aux
    (81) super_exp -> . exp super_exp_aux
    (92) exp -> . term check_op_masmenos exp_aux
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    hyper_exp                      shift and go to state 120
    super_exp                      shift and go to state 108
    exp                            shift and go to state 109
    term                           shift and go to state 110
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 91

    (126) imprimir -> IMPRIMIR LPAREN . imprimir_aux RPAREN SEMICOLON
    (127) imprimir_aux -> . exp push_imprimir imprimirCycle
    (128) imprimir_aux -> . CTESTRING push_imprimir imprimirCycle
    (92) exp -> . term check_op_masmenos exp_aux
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTESTRING       shift and go to state 123
    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    imprimir_aux                   shift and go to state 121
    exp                            shift and go to state 122
    term                           shift and go to state 110
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 92

    (59) leer -> LEER variable . SEMICOLON

    SEMICOLON       shift and go to state 124


state 93

    (53) variable -> ID . variable_aux
    (54) variable_aux -> . LBRACKET exp RBRACKET
    (55) variable_aux -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (56) variable_aux -> . empty
    (132) empty -> .

    LBRACKET        shift and go to state 86
    SEMICOLON       reduce using rule 132 (empty -> .)

    variable_aux                   shift and go to state 85
    empty                          shift and go to state 87

state 94

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter . RPAREN LBRACE dec_var_cycle estatutos dec_func_regresar RBRACE SEMICOLON punto_end_function

    RPAREN          shift and go to state 125


state 95

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN . LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    LBRACE          shift and go to state 126


state 96

    (37) parameter -> type ID . punto_add_parameter parameterCycle
    (41) punto_add_parameter -> .

    COMMA           reduce using rule 41 (punto_add_parameter -> .)
    RPAREN          reduce using rule 41 (punto_add_parameter -> .)

    punto_add_parameter            shift and go to state 127

state 97

    (18) simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .

    VARIABLE        reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    RENGLON         reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    TABLA           reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    INICIO          reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    FUNCION         reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    ID              reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    PORCADA         reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    MIENTRAS        reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    SI              reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    LEER            reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    RBRACE          reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    REGRESAR        reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)


state 98

    (19) simpleVarCycle -> COMMA ID . punto_simple_var simpleVarCycle
    (21) punto_simple_var -> .

    COMMA           reduce using rule 21 (punto_simple_var -> .)
    SEMICOLON       reduce using rule 21 (punto_simple_var -> .)

    punto_simple_var               shift and go to state 128

state 99

    (22) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET . punto_array arrayCycle SEMICOLON
    (25) punto_array -> .

    COMMA           reduce using rule 25 (punto_array -> .)
    SEMICOLON       reduce using rule 25 (punto_array -> .)

    punto_array                    shift and go to state 129

state 100

    (26) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    LBRACKET        shift and go to state 130


state 101

    (6) inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON .

    $end            reduce using rule 6 (inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON .)


state 102

    (52) asignar -> variable ASSIGN push_op_igual . hyper_exp check_op_igual SEMICOLON
    (74) hyper_exp -> . super_exp hyper_exp_aux
    (81) super_exp -> . exp super_exp_aux
    (92) exp -> . term check_op_masmenos exp_aux
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    hyper_exp                      shift and go to state 131
    super_exp                      shift and go to state 108
    exp                            shift and go to state 109
    term                           shift and go to state 110
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 103

    (111) factor_variable -> ID . push_id
    (112) factor_variable -> ID . LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> ID . LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> ID . llamada_func
    (120) push_id -> .
    (121) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON

  ! shift/reduce conflict for ID resolved as shift
    LBRACKET        shift and go to state 134
    TIMES           reduce using rule 120 (push_id -> .)
    DIVIDE          reduce using rule 120 (push_id -> .)
    CTEI            reduce using rule 120 (push_id -> .)
    CTEF            reduce using rule 120 (push_id -> .)
    LPAREN          reduce using rule 120 (push_id -> .)
    PLUS            reduce using rule 120 (push_id -> .)
    MINUS           reduce using rule 120 (push_id -> .)
    GREATER         reduce using rule 120 (push_id -> .)
    LESS            reduce using rule 120 (push_id -> .)
    GREATEREQ       reduce using rule 120 (push_id -> .)
    LESSEQ          reduce using rule 120 (push_id -> .)
    NOTEQUAL        reduce using rule 120 (push_id -> .)
    EQUAL           reduce using rule 120 (push_id -> .)
    Y               reduce using rule 120 (push_id -> .)
    O               reduce using rule 120 (push_id -> .)
    COMMA           reduce using rule 120 (push_id -> .)
    RPAREN          reduce using rule 120 (push_id -> .)
    RBRACKET        reduce using rule 120 (push_id -> .)
    SEMICOLON       reduce using rule 120 (push_id -> .)
    HASTA           reduce using rule 120 (push_id -> .)
    LBRACE          reduce using rule 120 (push_id -> .)
    ID              shift and go to state 132

  ! ID              [ reduce using rule 120 (push_id -> .) ]

    push_id                        shift and go to state 133
    llamada_func                   shift and go to state 135

state 104

    (115) factor_expresion -> LPAREN . meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (116) meter_fondo_falso -> .

    CTEI            reduce using rule 116 (meter_fondo_falso -> .)
    CTEF            reduce using rule 116 (meter_fondo_falso -> .)
    ID              reduce using rule 116 (meter_fondo_falso -> .)
    LPAREN          reduce using rule 116 (meter_fondo_falso -> .)

    meter_fondo_falso              shift and go to state 136

state 105

    (121) llamada_func -> ID LPAREN llamadaCYCLE . RPAREN SEMICOLON

    RPAREN          shift and go to state 137


state 106

    (122) llamadaCYCLE -> hyper_exp . llamadaCYCLE_aux
    (124) llamadaCYCLE_aux -> . COMMA hyper_exp llamadaCYCLE_aux
    (125) llamadaCYCLE_aux -> . empty
    (132) empty -> .

    COMMA           shift and go to state 139
    RPAREN          reduce using rule 132 (empty -> .)

    llamadaCYCLE_aux               shift and go to state 138
    empty                          shift and go to state 140

state 107

    (123) llamadaCYCLE -> empty .

    RPAREN          reduce using rule 123 (llamadaCYCLE -> empty .)


state 108

    (74) hyper_exp -> super_exp . hyper_exp_aux
    (75) hyper_exp_aux -> . push_op_logicos super_exp check_op_logicos
    (76) hyper_exp_aux -> . empty
    (78) push_op_logicos -> . Y
    (79) push_op_logicos -> . O
    (80) push_op_logicos -> . empty
    (132) empty -> .

    Y               shift and go to state 144
    O               shift and go to state 145
    COMMA           reduce using rule 132 (empty -> .)
    RPAREN          reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    HASTA           reduce using rule 132 (empty -> .)
    LBRACE          reduce using rule 132 (empty -> .)
    CTEI            reduce using rule 132 (empty -> .)
    CTEF            reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    LPAREN          reduce using rule 132 (empty -> .)

    hyper_exp_aux                  shift and go to state 141
    push_op_logicos                shift and go to state 142
    empty                          shift and go to state 143

state 109

    (81) super_exp -> exp . super_exp_aux
    (82) super_exp_aux -> . push_op_relacionales exp check_op_relacionales
    (83) super_exp_aux -> . empty
    (85) push_op_relacionales -> . GREATER
    (86) push_op_relacionales -> . LESS
    (87) push_op_relacionales -> . GREATEREQ
    (88) push_op_relacionales -> . LESSEQ
    (89) push_op_relacionales -> . NOTEQUAL
    (90) push_op_relacionales -> . EQUAL
    (91) push_op_relacionales -> . empty
    (132) empty -> .

    GREATER         shift and go to state 149
    LESS            shift and go to state 150
    GREATEREQ       shift and go to state 151
    LESSEQ          shift and go to state 152
    NOTEQUAL        shift and go to state 153
    EQUAL           shift and go to state 154
    Y               reduce using rule 132 (empty -> .)
    O               reduce using rule 132 (empty -> .)
    CTEI            reduce using rule 132 (empty -> .)
    CTEF            reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    LPAREN          reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    RPAREN          reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    HASTA           reduce using rule 132 (empty -> .)
    LBRACE          reduce using rule 132 (empty -> .)

    super_exp_aux                  shift and go to state 146
    push_op_relacionales           shift and go to state 147
    empty                          shift and go to state 148

state 110

    (92) exp -> term . check_op_masmenos exp_aux
    (98) check_op_masmenos -> .

    PLUS            reduce using rule 98 (check_op_masmenos -> .)
    MINUS           reduce using rule 98 (check_op_masmenos -> .)
    CTEI            reduce using rule 98 (check_op_masmenos -> .)
    CTEF            reduce using rule 98 (check_op_masmenos -> .)
    ID              reduce using rule 98 (check_op_masmenos -> .)
    LPAREN          reduce using rule 98 (check_op_masmenos -> .)
    GREATER         reduce using rule 98 (check_op_masmenos -> .)
    LESS            reduce using rule 98 (check_op_masmenos -> .)
    GREATEREQ       reduce using rule 98 (check_op_masmenos -> .)
    LESSEQ          reduce using rule 98 (check_op_masmenos -> .)
    NOTEQUAL        reduce using rule 98 (check_op_masmenos -> .)
    EQUAL           reduce using rule 98 (check_op_masmenos -> .)
    Y               reduce using rule 98 (check_op_masmenos -> .)
    O               reduce using rule 98 (check_op_masmenos -> .)
    COMMA           reduce using rule 98 (check_op_masmenos -> .)
    RPAREN          reduce using rule 98 (check_op_masmenos -> .)
    RBRACKET        reduce using rule 98 (check_op_masmenos -> .)
    SEMICOLON       reduce using rule 98 (check_op_masmenos -> .)
    HASTA           reduce using rule 98 (check_op_masmenos -> .)
    LBRACE          reduce using rule 98 (check_op_masmenos -> .)

    check_op_masmenos              shift and go to state 155

state 111

    (99) term -> factor . check_op_pordiv term_aux
    (102) check_op_pordiv -> .

    TIMES           reduce using rule 102 (check_op_pordiv -> .)
    DIVIDE          reduce using rule 102 (check_op_pordiv -> .)
    CTEI            reduce using rule 102 (check_op_pordiv -> .)
    CTEF            reduce using rule 102 (check_op_pordiv -> .)
    ID              reduce using rule 102 (check_op_pordiv -> .)
    LPAREN          reduce using rule 102 (check_op_pordiv -> .)
    PLUS            reduce using rule 102 (check_op_pordiv -> .)
    MINUS           reduce using rule 102 (check_op_pordiv -> .)
    GREATER         reduce using rule 102 (check_op_pordiv -> .)
    LESS            reduce using rule 102 (check_op_pordiv -> .)
    GREATEREQ       reduce using rule 102 (check_op_pordiv -> .)
    LESSEQ          reduce using rule 102 (check_op_pordiv -> .)
    NOTEQUAL        reduce using rule 102 (check_op_pordiv -> .)
    EQUAL           reduce using rule 102 (check_op_pordiv -> .)
    Y               reduce using rule 102 (check_op_pordiv -> .)
    O               reduce using rule 102 (check_op_pordiv -> .)
    COMMA           reduce using rule 102 (check_op_pordiv -> .)
    RPAREN          reduce using rule 102 (check_op_pordiv -> .)
    RBRACKET        reduce using rule 102 (check_op_pordiv -> .)
    SEMICOLON       reduce using rule 102 (check_op_pordiv -> .)
    HASTA           reduce using rule 102 (check_op_pordiv -> .)
    LBRACE          reduce using rule 102 (check_op_pordiv -> .)

    check_op_pordiv                shift and go to state 156

state 112

    (106) factor -> factor_constante .

    TIMES           reduce using rule 106 (factor -> factor_constante .)
    DIVIDE          reduce using rule 106 (factor -> factor_constante .)
    CTEI            reduce using rule 106 (factor -> factor_constante .)
    CTEF            reduce using rule 106 (factor -> factor_constante .)
    ID              reduce using rule 106 (factor -> factor_constante .)
    LPAREN          reduce using rule 106 (factor -> factor_constante .)
    PLUS            reduce using rule 106 (factor -> factor_constante .)
    MINUS           reduce using rule 106 (factor -> factor_constante .)
    GREATER         reduce using rule 106 (factor -> factor_constante .)
    LESS            reduce using rule 106 (factor -> factor_constante .)
    GREATEREQ       reduce using rule 106 (factor -> factor_constante .)
    LESSEQ          reduce using rule 106 (factor -> factor_constante .)
    NOTEQUAL        reduce using rule 106 (factor -> factor_constante .)
    EQUAL           reduce using rule 106 (factor -> factor_constante .)
    Y               reduce using rule 106 (factor -> factor_constante .)
    O               reduce using rule 106 (factor -> factor_constante .)
    COMMA           reduce using rule 106 (factor -> factor_constante .)
    RPAREN          reduce using rule 106 (factor -> factor_constante .)
    RBRACKET        reduce using rule 106 (factor -> factor_constante .)
    SEMICOLON       reduce using rule 106 (factor -> factor_constante .)
    HASTA           reduce using rule 106 (factor -> factor_constante .)
    LBRACE          reduce using rule 106 (factor -> factor_constante .)


state 113

    (107) factor -> factor_variable .

    TIMES           reduce using rule 107 (factor -> factor_variable .)
    DIVIDE          reduce using rule 107 (factor -> factor_variable .)
    CTEI            reduce using rule 107 (factor -> factor_variable .)
    CTEF            reduce using rule 107 (factor -> factor_variable .)
    ID              reduce using rule 107 (factor -> factor_variable .)
    LPAREN          reduce using rule 107 (factor -> factor_variable .)
    PLUS            reduce using rule 107 (factor -> factor_variable .)
    MINUS           reduce using rule 107 (factor -> factor_variable .)
    GREATER         reduce using rule 107 (factor -> factor_variable .)
    LESS            reduce using rule 107 (factor -> factor_variable .)
    GREATEREQ       reduce using rule 107 (factor -> factor_variable .)
    LESSEQ          reduce using rule 107 (factor -> factor_variable .)
    NOTEQUAL        reduce using rule 107 (factor -> factor_variable .)
    EQUAL           reduce using rule 107 (factor -> factor_variable .)
    Y               reduce using rule 107 (factor -> factor_variable .)
    O               reduce using rule 107 (factor -> factor_variable .)
    COMMA           reduce using rule 107 (factor -> factor_variable .)
    RPAREN          reduce using rule 107 (factor -> factor_variable .)
    RBRACKET        reduce using rule 107 (factor -> factor_variable .)
    SEMICOLON       reduce using rule 107 (factor -> factor_variable .)
    HASTA           reduce using rule 107 (factor -> factor_variable .)
    LBRACE          reduce using rule 107 (factor -> factor_variable .)


state 114

    (108) factor -> factor_expresion .

    TIMES           reduce using rule 108 (factor -> factor_expresion .)
    DIVIDE          reduce using rule 108 (factor -> factor_expresion .)
    CTEI            reduce using rule 108 (factor -> factor_expresion .)
    CTEF            reduce using rule 108 (factor -> factor_expresion .)
    ID              reduce using rule 108 (factor -> factor_expresion .)
    LPAREN          reduce using rule 108 (factor -> factor_expresion .)
    PLUS            reduce using rule 108 (factor -> factor_expresion .)
    MINUS           reduce using rule 108 (factor -> factor_expresion .)
    GREATER         reduce using rule 108 (factor -> factor_expresion .)
    LESS            reduce using rule 108 (factor -> factor_expresion .)
    GREATEREQ       reduce using rule 108 (factor -> factor_expresion .)
    LESSEQ          reduce using rule 108 (factor -> factor_expresion .)
    NOTEQUAL        reduce using rule 108 (factor -> factor_expresion .)
    EQUAL           reduce using rule 108 (factor -> factor_expresion .)
    Y               reduce using rule 108 (factor -> factor_expresion .)
    O               reduce using rule 108 (factor -> factor_expresion .)
    COMMA           reduce using rule 108 (factor -> factor_expresion .)
    RPAREN          reduce using rule 108 (factor -> factor_expresion .)
    RBRACKET        reduce using rule 108 (factor -> factor_expresion .)
    SEMICOLON       reduce using rule 108 (factor -> factor_expresion .)
    HASTA           reduce using rule 108 (factor -> factor_expresion .)
    LBRACE          reduce using rule 108 (factor -> factor_expresion .)


state 115

    (109) factor_constante -> CTEI . push_int
    (118) push_int -> .

    TIMES           reduce using rule 118 (push_int -> .)
    DIVIDE          reduce using rule 118 (push_int -> .)
    CTEI            reduce using rule 118 (push_int -> .)
    CTEF            reduce using rule 118 (push_int -> .)
    ID              reduce using rule 118 (push_int -> .)
    LPAREN          reduce using rule 118 (push_int -> .)
    PLUS            reduce using rule 118 (push_int -> .)
    MINUS           reduce using rule 118 (push_int -> .)
    GREATER         reduce using rule 118 (push_int -> .)
    LESS            reduce using rule 118 (push_int -> .)
    GREATEREQ       reduce using rule 118 (push_int -> .)
    LESSEQ          reduce using rule 118 (push_int -> .)
    NOTEQUAL        reduce using rule 118 (push_int -> .)
    EQUAL           reduce using rule 118 (push_int -> .)
    Y               reduce using rule 118 (push_int -> .)
    O               reduce using rule 118 (push_int -> .)
    COMMA           reduce using rule 118 (push_int -> .)
    RPAREN          reduce using rule 118 (push_int -> .)
    RBRACKET        reduce using rule 118 (push_int -> .)
    SEMICOLON       reduce using rule 118 (push_int -> .)
    HASTA           reduce using rule 118 (push_int -> .)
    LBRACE          reduce using rule 118 (push_int -> .)

    push_int                       shift and go to state 157

state 116

    (110) factor_constante -> CTEF . push_float
    (119) push_float -> .

    TIMES           reduce using rule 119 (push_float -> .)
    DIVIDE          reduce using rule 119 (push_float -> .)
    CTEI            reduce using rule 119 (push_float -> .)
    CTEF            reduce using rule 119 (push_float -> .)
    ID              reduce using rule 119 (push_float -> .)
    LPAREN          reduce using rule 119 (push_float -> .)
    PLUS            reduce using rule 119 (push_float -> .)
    MINUS           reduce using rule 119 (push_float -> .)
    GREATER         reduce using rule 119 (push_float -> .)
    LESS            reduce using rule 119 (push_float -> .)
    GREATEREQ       reduce using rule 119 (push_float -> .)
    LESSEQ          reduce using rule 119 (push_float -> .)
    NOTEQUAL        reduce using rule 119 (push_float -> .)
    EQUAL           reduce using rule 119 (push_float -> .)
    Y               reduce using rule 119 (push_float -> .)
    O               reduce using rule 119 (push_float -> .)
    COMMA           reduce using rule 119 (push_float -> .)
    RPAREN          reduce using rule 119 (push_float -> .)
    RBRACKET        reduce using rule 119 (push_float -> .)
    SEMICOLON       reduce using rule 119 (push_float -> .)
    HASTA           reduce using rule 119 (push_float -> .)
    LBRACE          reduce using rule 119 (push_float -> .)

    push_float                     shift and go to state 158

state 117

    (54) variable_aux -> LBRACKET exp . RBRACKET
    (55) variable_aux -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET

    RBRACKET        shift and go to state 159


state 118

    (64) ciclo_for -> PORCADA ID punto_existe_id . ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON

    ASSIGN          shift and go to state 160


state 119

    (60) ciclo_while -> MIENTRAS punto_inicio_while LPAREN . hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (74) hyper_exp -> . super_exp hyper_exp_aux
    (81) super_exp -> . exp super_exp_aux
    (92) exp -> . term check_op_masmenos exp_aux
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    hyper_exp                      shift and go to state 161
    super_exp                      shift and go to state 108
    exp                            shift and go to state 109
    term                           shift and go to state 110
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 120

    (69) condicion -> SI LPAREN hyper_exp . RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (70) condicion -> SI LPAREN hyper_exp . RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON

    RPAREN          shift and go to state 162


state 121

    (126) imprimir -> IMPRIMIR LPAREN imprimir_aux . RPAREN SEMICOLON

    RPAREN          shift and go to state 163


state 122

    (127) imprimir_aux -> exp . push_imprimir imprimirCycle
    (131) push_imprimir -> .

    COMMA           reduce using rule 131 (push_imprimir -> .)
    RPAREN          reduce using rule 131 (push_imprimir -> .)

    push_imprimir                  shift and go to state 164

state 123

    (128) imprimir_aux -> CTESTRING . push_imprimir imprimirCycle
    (131) push_imprimir -> .

    COMMA           reduce using rule 131 (push_imprimir -> .)
    RPAREN          reduce using rule 131 (push_imprimir -> .)

    push_imprimir                  shift and go to state 165

state 124

    (59) leer -> LEER variable SEMICOLON .

    ID              reduce using rule 59 (leer -> LEER variable SEMICOLON .)
    PORCADA         reduce using rule 59 (leer -> LEER variable SEMICOLON .)
    MIENTRAS        reduce using rule 59 (leer -> LEER variable SEMICOLON .)
    SI              reduce using rule 59 (leer -> LEER variable SEMICOLON .)
    IMPRIMIR        reduce using rule 59 (leer -> LEER variable SEMICOLON .)
    LEER            reduce using rule 59 (leer -> LEER variable SEMICOLON .)
    RBRACE          reduce using rule 59 (leer -> LEER variable SEMICOLON .)
    REGRESAR        reduce using rule 59 (leer -> LEER variable SEMICOLON .)


state 125

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN . LBRACE dec_var_cycle estatutos dec_func_regresar RBRACE SEMICOLON punto_end_function

    LBRACE          shift and go to state 166


state 126

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE . dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (8) dec_var_cycle -> . dec_var dec_var_cycle
    (9) dec_var_cycle -> . empty
    (12) dec_var -> . simple_var
    (13) dec_var -> . array
    (14) dec_var -> . matrix
    (132) empty -> .
    (18) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (22) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (26) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    ID              reduce using rule 132 (empty -> .)
    PORCADA         reduce using rule 132 (empty -> .)
    MIENTRAS        reduce using rule 132 (empty -> .)
    SI              reduce using rule 132 (empty -> .)
    IMPRIMIR        reduce using rule 132 (empty -> .)
    LEER            reduce using rule 132 (empty -> .)
    RBRACE          reduce using rule 132 (empty -> .)
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

    dec_var_cycle                  shift and go to state 167
    dec_var                        shift and go to state 10
    empty                          shift and go to state 26
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 127

    (37) parameter -> type ID punto_add_parameter . parameterCycle
    (39) parameterCycle -> . COMMA type ID punto_add_parameter parameterCycle
    (40) parameterCycle -> . empty
    (132) empty -> .

    COMMA           shift and go to state 169
    RPAREN          reduce using rule 132 (empty -> .)

    parameterCycle                 shift and go to state 168
    empty                          shift and go to state 170

state 128

    (19) simpleVarCycle -> COMMA ID punto_simple_var . simpleVarCycle
    (19) simpleVarCycle -> . COMMA ID punto_simple_var simpleVarCycle
    (20) simpleVarCycle -> . empty
    (132) empty -> .

    COMMA           shift and go to state 77
    SEMICOLON       reduce using rule 132 (empty -> .)

    simpleVarCycle                 shift and go to state 171
    empty                          shift and go to state 78

state 129

    (22) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array . arrayCycle SEMICOLON
    (23) arrayCycle -> . COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle
    (24) arrayCycle -> . empty
    (132) empty -> .

    COMMA           shift and go to state 173
    SEMICOLON       reduce using rule 132 (empty -> .)

    arrayCycle                     shift and go to state 172
    empty                          shift and go to state 174

state 130

    (26) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    CTEI            shift and go to state 175


state 131

    (52) asignar -> variable ASSIGN push_op_igual hyper_exp . check_op_igual SEMICOLON
    (58) check_op_igual -> .

    SEMICOLON       reduce using rule 58 (check_op_igual -> .)

    check_op_igual                 shift and go to state 176

state 132

    (121) llamada_func -> ID . LPAREN llamadaCYCLE RPAREN SEMICOLON

    LPAREN          shift and go to state 84


state 133

    (111) factor_variable -> ID push_id .

    TIMES           reduce using rule 111 (factor_variable -> ID push_id .)
    DIVIDE          reduce using rule 111 (factor_variable -> ID push_id .)
    CTEI            reduce using rule 111 (factor_variable -> ID push_id .)
    CTEF            reduce using rule 111 (factor_variable -> ID push_id .)
    ID              reduce using rule 111 (factor_variable -> ID push_id .)
    LPAREN          reduce using rule 111 (factor_variable -> ID push_id .)
    PLUS            reduce using rule 111 (factor_variable -> ID push_id .)
    MINUS           reduce using rule 111 (factor_variable -> ID push_id .)
    GREATER         reduce using rule 111 (factor_variable -> ID push_id .)
    LESS            reduce using rule 111 (factor_variable -> ID push_id .)
    GREATEREQ       reduce using rule 111 (factor_variable -> ID push_id .)
    LESSEQ          reduce using rule 111 (factor_variable -> ID push_id .)
    NOTEQUAL        reduce using rule 111 (factor_variable -> ID push_id .)
    EQUAL           reduce using rule 111 (factor_variable -> ID push_id .)
    Y               reduce using rule 111 (factor_variable -> ID push_id .)
    O               reduce using rule 111 (factor_variable -> ID push_id .)
    COMMA           reduce using rule 111 (factor_variable -> ID push_id .)
    RPAREN          reduce using rule 111 (factor_variable -> ID push_id .)
    RBRACKET        reduce using rule 111 (factor_variable -> ID push_id .)
    SEMICOLON       reduce using rule 111 (factor_variable -> ID push_id .)
    HASTA           reduce using rule 111 (factor_variable -> ID push_id .)
    LBRACE          reduce using rule 111 (factor_variable -> ID push_id .)


state 134

    (112) factor_variable -> ID LBRACKET . hyper_exp RBRACKET
    (113) factor_variable -> ID LBRACKET . hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (74) hyper_exp -> . super_exp hyper_exp_aux
    (81) super_exp -> . exp super_exp_aux
    (92) exp -> . term check_op_masmenos exp_aux
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    hyper_exp                      shift and go to state 177
    super_exp                      shift and go to state 108
    exp                            shift and go to state 109
    term                           shift and go to state 110
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 135

    (114) factor_variable -> ID llamada_func .

    TIMES           reduce using rule 114 (factor_variable -> ID llamada_func .)
    DIVIDE          reduce using rule 114 (factor_variable -> ID llamada_func .)
    CTEI            reduce using rule 114 (factor_variable -> ID llamada_func .)
    CTEF            reduce using rule 114 (factor_variable -> ID llamada_func .)
    ID              reduce using rule 114 (factor_variable -> ID llamada_func .)
    LPAREN          reduce using rule 114 (factor_variable -> ID llamada_func .)
    PLUS            reduce using rule 114 (factor_variable -> ID llamada_func .)
    MINUS           reduce using rule 114 (factor_variable -> ID llamada_func .)
    GREATER         reduce using rule 114 (factor_variable -> ID llamada_func .)
    LESS            reduce using rule 114 (factor_variable -> ID llamada_func .)
    GREATEREQ       reduce using rule 114 (factor_variable -> ID llamada_func .)
    LESSEQ          reduce using rule 114 (factor_variable -> ID llamada_func .)
    NOTEQUAL        reduce using rule 114 (factor_variable -> ID llamada_func .)
    EQUAL           reduce using rule 114 (factor_variable -> ID llamada_func .)
    Y               reduce using rule 114 (factor_variable -> ID llamada_func .)
    O               reduce using rule 114 (factor_variable -> ID llamada_func .)
    COMMA           reduce using rule 114 (factor_variable -> ID llamada_func .)
    RPAREN          reduce using rule 114 (factor_variable -> ID llamada_func .)
    RBRACKET        reduce using rule 114 (factor_variable -> ID llamada_func .)
    SEMICOLON       reduce using rule 114 (factor_variable -> ID llamada_func .)
    HASTA           reduce using rule 114 (factor_variable -> ID llamada_func .)
    LBRACE          reduce using rule 114 (factor_variable -> ID llamada_func .)


state 136

    (115) factor_expresion -> LPAREN meter_fondo_falso . hyper_exp RPAREN quitar_fondo_falso
    (74) hyper_exp -> . super_exp hyper_exp_aux
    (81) super_exp -> . exp super_exp_aux
    (92) exp -> . term check_op_masmenos exp_aux
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    hyper_exp                      shift and go to state 178
    super_exp                      shift and go to state 108
    exp                            shift and go to state 109
    term                           shift and go to state 110
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 137

    (121) llamada_func -> ID LPAREN llamadaCYCLE RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 179


state 138

    (122) llamadaCYCLE -> hyper_exp llamadaCYCLE_aux .

    RPAREN          reduce using rule 122 (llamadaCYCLE -> hyper_exp llamadaCYCLE_aux .)


state 139

    (124) llamadaCYCLE_aux -> COMMA . hyper_exp llamadaCYCLE_aux
    (74) hyper_exp -> . super_exp hyper_exp_aux
    (81) super_exp -> . exp super_exp_aux
    (92) exp -> . term check_op_masmenos exp_aux
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    hyper_exp                      shift and go to state 180
    super_exp                      shift and go to state 108
    exp                            shift and go to state 109
    term                           shift and go to state 110
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 140

    (125) llamadaCYCLE_aux -> empty .

    RPAREN          reduce using rule 125 (llamadaCYCLE_aux -> empty .)


state 141

    (74) hyper_exp -> super_exp hyper_exp_aux .

    COMMA           reduce using rule 74 (hyper_exp -> super_exp hyper_exp_aux .)
    RPAREN          reduce using rule 74 (hyper_exp -> super_exp hyper_exp_aux .)
    SEMICOLON       reduce using rule 74 (hyper_exp -> super_exp hyper_exp_aux .)
    RBRACKET        reduce using rule 74 (hyper_exp -> super_exp hyper_exp_aux .)
    HASTA           reduce using rule 74 (hyper_exp -> super_exp hyper_exp_aux .)
    LBRACE          reduce using rule 74 (hyper_exp -> super_exp hyper_exp_aux .)


state 142

    (75) hyper_exp_aux -> push_op_logicos . super_exp check_op_logicos
    (81) super_exp -> . exp super_exp_aux
    (92) exp -> . term check_op_masmenos exp_aux
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    super_exp                      shift and go to state 181
    exp                            shift and go to state 109
    term                           shift and go to state 110
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 143

    (76) hyper_exp_aux -> empty .
    (80) push_op_logicos -> empty .

    COMMA           reduce using rule 76 (hyper_exp_aux -> empty .)
    RPAREN          reduce using rule 76 (hyper_exp_aux -> empty .)
    SEMICOLON       reduce using rule 76 (hyper_exp_aux -> empty .)
    RBRACKET        reduce using rule 76 (hyper_exp_aux -> empty .)
    HASTA           reduce using rule 76 (hyper_exp_aux -> empty .)
    LBRACE          reduce using rule 76 (hyper_exp_aux -> empty .)
    CTEI            reduce using rule 80 (push_op_logicos -> empty .)
    CTEF            reduce using rule 80 (push_op_logicos -> empty .)
    ID              reduce using rule 80 (push_op_logicos -> empty .)
    LPAREN          reduce using rule 80 (push_op_logicos -> empty .)


state 144

    (78) push_op_logicos -> Y .

    CTEI            reduce using rule 78 (push_op_logicos -> Y .)
    CTEF            reduce using rule 78 (push_op_logicos -> Y .)
    ID              reduce using rule 78 (push_op_logicos -> Y .)
    LPAREN          reduce using rule 78 (push_op_logicos -> Y .)


state 145

    (79) push_op_logicos -> O .

    CTEI            reduce using rule 79 (push_op_logicos -> O .)
    CTEF            reduce using rule 79 (push_op_logicos -> O .)
    ID              reduce using rule 79 (push_op_logicos -> O .)
    LPAREN          reduce using rule 79 (push_op_logicos -> O .)


state 146

    (81) super_exp -> exp super_exp_aux .

    Y               reduce using rule 81 (super_exp -> exp super_exp_aux .)
    O               reduce using rule 81 (super_exp -> exp super_exp_aux .)
    CTEI            reduce using rule 81 (super_exp -> exp super_exp_aux .)
    CTEF            reduce using rule 81 (super_exp -> exp super_exp_aux .)
    ID              reduce using rule 81 (super_exp -> exp super_exp_aux .)
    LPAREN          reduce using rule 81 (super_exp -> exp super_exp_aux .)
    COMMA           reduce using rule 81 (super_exp -> exp super_exp_aux .)
    RPAREN          reduce using rule 81 (super_exp -> exp super_exp_aux .)
    SEMICOLON       reduce using rule 81 (super_exp -> exp super_exp_aux .)
    RBRACKET        reduce using rule 81 (super_exp -> exp super_exp_aux .)
    HASTA           reduce using rule 81 (super_exp -> exp super_exp_aux .)
    LBRACE          reduce using rule 81 (super_exp -> exp super_exp_aux .)


state 147

    (82) super_exp_aux -> push_op_relacionales . exp check_op_relacionales
    (92) exp -> . term check_op_masmenos exp_aux
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    exp                            shift and go to state 182
    term                           shift and go to state 110
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 148

    (83) super_exp_aux -> empty .
    (91) push_op_relacionales -> empty .

  ! reduce/reduce conflict for CTEI resolved using rule 83 (super_exp_aux -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 83 (super_exp_aux -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 83 (super_exp_aux -> empty .)
  ! reduce/reduce conflict for LPAREN resolved using rule 83 (super_exp_aux -> empty .)
    Y               reduce using rule 83 (super_exp_aux -> empty .)
    O               reduce using rule 83 (super_exp_aux -> empty .)
    CTEI            reduce using rule 83 (super_exp_aux -> empty .)
    CTEF            reduce using rule 83 (super_exp_aux -> empty .)
    ID              reduce using rule 83 (super_exp_aux -> empty .)
    LPAREN          reduce using rule 83 (super_exp_aux -> empty .)
    COMMA           reduce using rule 83 (super_exp_aux -> empty .)
    RPAREN          reduce using rule 83 (super_exp_aux -> empty .)
    SEMICOLON       reduce using rule 83 (super_exp_aux -> empty .)
    RBRACKET        reduce using rule 83 (super_exp_aux -> empty .)
    HASTA           reduce using rule 83 (super_exp_aux -> empty .)
    LBRACE          reduce using rule 83 (super_exp_aux -> empty .)

  ! CTEI            [ reduce using rule 91 (push_op_relacionales -> empty .) ]
  ! CTEF            [ reduce using rule 91 (push_op_relacionales -> empty .) ]
  ! ID              [ reduce using rule 91 (push_op_relacionales -> empty .) ]
  ! LPAREN          [ reduce using rule 91 (push_op_relacionales -> empty .) ]


state 149

    (85) push_op_relacionales -> GREATER .

    CTEI            reduce using rule 85 (push_op_relacionales -> GREATER .)
    CTEF            reduce using rule 85 (push_op_relacionales -> GREATER .)
    ID              reduce using rule 85 (push_op_relacionales -> GREATER .)
    LPAREN          reduce using rule 85 (push_op_relacionales -> GREATER .)


state 150

    (86) push_op_relacionales -> LESS .

    CTEI            reduce using rule 86 (push_op_relacionales -> LESS .)
    CTEF            reduce using rule 86 (push_op_relacionales -> LESS .)
    ID              reduce using rule 86 (push_op_relacionales -> LESS .)
    LPAREN          reduce using rule 86 (push_op_relacionales -> LESS .)


state 151

    (87) push_op_relacionales -> GREATEREQ .

    CTEI            reduce using rule 87 (push_op_relacionales -> GREATEREQ .)
    CTEF            reduce using rule 87 (push_op_relacionales -> GREATEREQ .)
    ID              reduce using rule 87 (push_op_relacionales -> GREATEREQ .)
    LPAREN          reduce using rule 87 (push_op_relacionales -> GREATEREQ .)


state 152

    (88) push_op_relacionales -> LESSEQ .

    CTEI            reduce using rule 88 (push_op_relacionales -> LESSEQ .)
    CTEF            reduce using rule 88 (push_op_relacionales -> LESSEQ .)
    ID              reduce using rule 88 (push_op_relacionales -> LESSEQ .)
    LPAREN          reduce using rule 88 (push_op_relacionales -> LESSEQ .)


state 153

    (89) push_op_relacionales -> NOTEQUAL .

    CTEI            reduce using rule 89 (push_op_relacionales -> NOTEQUAL .)
    CTEF            reduce using rule 89 (push_op_relacionales -> NOTEQUAL .)
    ID              reduce using rule 89 (push_op_relacionales -> NOTEQUAL .)
    LPAREN          reduce using rule 89 (push_op_relacionales -> NOTEQUAL .)


state 154

    (90) push_op_relacionales -> EQUAL .

    CTEI            reduce using rule 90 (push_op_relacionales -> EQUAL .)
    CTEF            reduce using rule 90 (push_op_relacionales -> EQUAL .)
    ID              reduce using rule 90 (push_op_relacionales -> EQUAL .)
    LPAREN          reduce using rule 90 (push_op_relacionales -> EQUAL .)


state 155

    (92) exp -> term check_op_masmenos . exp_aux
    (93) exp_aux -> . push_op_exp_masmenos exp
    (94) exp_aux -> . empty
    (95) push_op_exp_masmenos -> . PLUS
    (96) push_op_exp_masmenos -> . MINUS
    (97) push_op_exp_masmenos -> . empty
    (132) empty -> .

    PLUS            shift and go to state 186
    MINUS           shift and go to state 187
    GREATER         reduce using rule 132 (empty -> .)
    LESS            reduce using rule 132 (empty -> .)
    GREATEREQ       reduce using rule 132 (empty -> .)
    LESSEQ          reduce using rule 132 (empty -> .)
    NOTEQUAL        reduce using rule 132 (empty -> .)
    EQUAL           reduce using rule 132 (empty -> .)
    CTEI            reduce using rule 132 (empty -> .)
    CTEF            reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    LPAREN          reduce using rule 132 (empty -> .)
    Y               reduce using rule 132 (empty -> .)
    O               reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    RPAREN          reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)
    HASTA           reduce using rule 132 (empty -> .)
    LBRACE          reduce using rule 132 (empty -> .)

    exp_aux                        shift and go to state 183
    push_op_exp_masmenos           shift and go to state 184
    empty                          shift and go to state 185

state 156

    (99) term -> factor check_op_pordiv . term_aux
    (100) term_aux -> . push_op_exp_pordiv term
    (101) term_aux -> . empty
    (103) push_op_exp_pordiv -> . TIMES
    (104) push_op_exp_pordiv -> . DIVIDE
    (105) push_op_exp_pordiv -> . empty
    (132) empty -> .

    TIMES           shift and go to state 191
    DIVIDE          shift and go to state 192
    PLUS            reduce using rule 132 (empty -> .)
    MINUS           reduce using rule 132 (empty -> .)
    CTEI            reduce using rule 132 (empty -> .)
    CTEF            reduce using rule 132 (empty -> .)
    ID              reduce using rule 132 (empty -> .)
    LPAREN          reduce using rule 132 (empty -> .)
    GREATER         reduce using rule 132 (empty -> .)
    LESS            reduce using rule 132 (empty -> .)
    GREATEREQ       reduce using rule 132 (empty -> .)
    LESSEQ          reduce using rule 132 (empty -> .)
    NOTEQUAL        reduce using rule 132 (empty -> .)
    EQUAL           reduce using rule 132 (empty -> .)
    Y               reduce using rule 132 (empty -> .)
    O               reduce using rule 132 (empty -> .)
    COMMA           reduce using rule 132 (empty -> .)
    RPAREN          reduce using rule 132 (empty -> .)
    RBRACKET        reduce using rule 132 (empty -> .)
    SEMICOLON       reduce using rule 132 (empty -> .)
    HASTA           reduce using rule 132 (empty -> .)
    LBRACE          reduce using rule 132 (empty -> .)

    term_aux                       shift and go to state 188
    push_op_exp_pordiv             shift and go to state 189
    empty                          shift and go to state 190

state 157

    (109) factor_constante -> CTEI push_int .

    TIMES           reduce using rule 109 (factor_constante -> CTEI push_int .)
    DIVIDE          reduce using rule 109 (factor_constante -> CTEI push_int .)
    CTEI            reduce using rule 109 (factor_constante -> CTEI push_int .)
    CTEF            reduce using rule 109 (factor_constante -> CTEI push_int .)
    ID              reduce using rule 109 (factor_constante -> CTEI push_int .)
    LPAREN          reduce using rule 109 (factor_constante -> CTEI push_int .)
    PLUS            reduce using rule 109 (factor_constante -> CTEI push_int .)
    MINUS           reduce using rule 109 (factor_constante -> CTEI push_int .)
    GREATER         reduce using rule 109 (factor_constante -> CTEI push_int .)
    LESS            reduce using rule 109 (factor_constante -> CTEI push_int .)
    GREATEREQ       reduce using rule 109 (factor_constante -> CTEI push_int .)
    LESSEQ          reduce using rule 109 (factor_constante -> CTEI push_int .)
    NOTEQUAL        reduce using rule 109 (factor_constante -> CTEI push_int .)
    EQUAL           reduce using rule 109 (factor_constante -> CTEI push_int .)
    Y               reduce using rule 109 (factor_constante -> CTEI push_int .)
    O               reduce using rule 109 (factor_constante -> CTEI push_int .)
    COMMA           reduce using rule 109 (factor_constante -> CTEI push_int .)
    RPAREN          reduce using rule 109 (factor_constante -> CTEI push_int .)
    RBRACKET        reduce using rule 109 (factor_constante -> CTEI push_int .)
    SEMICOLON       reduce using rule 109 (factor_constante -> CTEI push_int .)
    HASTA           reduce using rule 109 (factor_constante -> CTEI push_int .)
    LBRACE          reduce using rule 109 (factor_constante -> CTEI push_int .)


state 158

    (110) factor_constante -> CTEF push_float .

    TIMES           reduce using rule 110 (factor_constante -> CTEF push_float .)
    DIVIDE          reduce using rule 110 (factor_constante -> CTEF push_float .)
    CTEI            reduce using rule 110 (factor_constante -> CTEF push_float .)
    CTEF            reduce using rule 110 (factor_constante -> CTEF push_float .)
    ID              reduce using rule 110 (factor_constante -> CTEF push_float .)
    LPAREN          reduce using rule 110 (factor_constante -> CTEF push_float .)
    PLUS            reduce using rule 110 (factor_constante -> CTEF push_float .)
    MINUS           reduce using rule 110 (factor_constante -> CTEF push_float .)
    GREATER         reduce using rule 110 (factor_constante -> CTEF push_float .)
    LESS            reduce using rule 110 (factor_constante -> CTEF push_float .)
    GREATEREQ       reduce using rule 110 (factor_constante -> CTEF push_float .)
    LESSEQ          reduce using rule 110 (factor_constante -> CTEF push_float .)
    NOTEQUAL        reduce using rule 110 (factor_constante -> CTEF push_float .)
    EQUAL           reduce using rule 110 (factor_constante -> CTEF push_float .)
    Y               reduce using rule 110 (factor_constante -> CTEF push_float .)
    O               reduce using rule 110 (factor_constante -> CTEF push_float .)
    COMMA           reduce using rule 110 (factor_constante -> CTEF push_float .)
    RPAREN          reduce using rule 110 (factor_constante -> CTEF push_float .)
    RBRACKET        reduce using rule 110 (factor_constante -> CTEF push_float .)
    SEMICOLON       reduce using rule 110 (factor_constante -> CTEF push_float .)
    HASTA           reduce using rule 110 (factor_constante -> CTEF push_float .)
    LBRACE          reduce using rule 110 (factor_constante -> CTEF push_float .)


state 159

    (54) variable_aux -> LBRACKET exp RBRACKET .
    (55) variable_aux -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    ASSIGN          reduce using rule 54 (variable_aux -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 54 (variable_aux -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 193


state 160

    (64) ciclo_for -> PORCADA ID punto_existe_id ASSIGN . hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (74) hyper_exp -> . super_exp hyper_exp_aux
    (81) super_exp -> . exp super_exp_aux
    (92) exp -> . term check_op_masmenos exp_aux
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    hyper_exp                      shift and go to state 194
    super_exp                      shift and go to state 108
    exp                            shift and go to state 109
    term                           shift and go to state 110
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 161

    (60) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp . RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON

    RPAREN          shift and go to state 195


state 162

    (69) condicion -> SI LPAREN hyper_exp RPAREN . punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (70) condicion -> SI LPAREN hyper_exp RPAREN . punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (71) punto_si -> .

    LBRACE          reduce using rule 71 (punto_si -> .)

    punto_si                       shift and go to state 196

state 163

    (126) imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 197


state 164

    (127) imprimir_aux -> exp push_imprimir . imprimirCycle
    (129) imprimirCycle -> . COMMA imprimir_aux
    (130) imprimirCycle -> . empty
    (132) empty -> .

    COMMA           shift and go to state 199
    RPAREN          reduce using rule 132 (empty -> .)

    imprimirCycle                  shift and go to state 198
    empty                          shift and go to state 200

state 165

    (128) imprimir_aux -> CTESTRING push_imprimir . imprimirCycle
    (129) imprimirCycle -> . COMMA imprimir_aux
    (130) imprimirCycle -> . empty
    (132) empty -> .

    COMMA           shift and go to state 199
    RPAREN          reduce using rule 132 (empty -> .)

    imprimirCycle                  shift and go to state 201
    empty                          shift and go to state 200

state 166

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE . dec_var_cycle estatutos dec_func_regresar RBRACE SEMICOLON punto_end_function
    (8) dec_var_cycle -> . dec_var dec_var_cycle
    (9) dec_var_cycle -> . empty
    (12) dec_var -> . simple_var
    (13) dec_var -> . array
    (14) dec_var -> . matrix
    (132) empty -> .
    (18) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (22) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (26) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    ID              reduce using rule 132 (empty -> .)
    PORCADA         reduce using rule 132 (empty -> .)
    MIENTRAS        reduce using rule 132 (empty -> .)
    SI              reduce using rule 132 (empty -> .)
    IMPRIMIR        reduce using rule 132 (empty -> .)
    LEER            reduce using rule 132 (empty -> .)
    REGRESAR        reduce using rule 132 (empty -> .)
    RBRACE          reduce using rule 132 (empty -> .)
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

    dec_var_cycle                  shift and go to state 202
    dec_var                        shift and go to state 10
    empty                          shift and go to state 26
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 167

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle . estatutos RBRACE SEMICOLON punto_end_function
    (42) estatutos -> . estatutos_opciones estatutos
    (43) estatutos -> . empty
    (44) estatutos_opciones -> . asignar
    (45) estatutos_opciones -> . llamada_func
    (46) estatutos_opciones -> . ciclo_for
    (47) estatutos_opciones -> . ciclo_while
    (48) estatutos_opciones -> . condicion
    (49) estatutos_opciones -> . imprimir
    (50) estatutos_opciones -> . leer
    (132) empty -> .
    (52) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (121) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (64) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (60) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (69) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (70) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (126) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (59) leer -> . LEER variable SEMICOLON
    (53) variable -> . ID variable_aux

    RBRACE          reduce using rule 132 (empty -> .)
    ID              shift and go to state 66
    PORCADA         shift and go to state 67
    MIENTRAS        shift and go to state 68
    SI              shift and go to state 69
    IMPRIMIR        shift and go to state 70
    LEER            shift and go to state 71

    estatutos                      shift and go to state 203
    estatutos_opciones             shift and go to state 56
    empty                          shift and go to state 57
    asignar                        shift and go to state 58
    llamada_func                   shift and go to state 59
    ciclo_for                      shift and go to state 60
    ciclo_while                    shift and go to state 61
    condicion                      shift and go to state 62
    imprimir                       shift and go to state 63
    leer                           shift and go to state 64
    variable                       shift and go to state 65

state 168

    (37) parameter -> type ID punto_add_parameter parameterCycle .

    RPAREN          reduce using rule 37 (parameter -> type ID punto_add_parameter parameterCycle .)


state 169

    (39) parameterCycle -> COMMA . type ID punto_add_parameter parameterCycle
    (15) type -> . ENTERO
    (16) type -> . DECIMAL
    (17) type -> . LETRA

    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32

    type                           shift and go to state 204

state 170

    (40) parameterCycle -> empty .

    RPAREN          reduce using rule 40 (parameterCycle -> empty .)


state 171

    (19) simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle .

    SEMICOLON       reduce using rule 19 (simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle .)


state 172

    (22) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle . SEMICOLON

    SEMICOLON       shift and go to state 205


state 173

    (23) arrayCycle -> COMMA . ID LBRACKET CTEI RBRACKET punto_array arrayCycle

    ID              shift and go to state 206


state 174

    (24) arrayCycle -> empty .

    SEMICOLON       reduce using rule 24 (arrayCycle -> empty .)


state 175

    (26) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET punto_matrix matrixCycle SEMICOLON

    RBRACKET        shift and go to state 207


state 176

    (52) asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual . SEMICOLON

    SEMICOLON       shift and go to state 208


state 177

    (112) factor_variable -> ID LBRACKET hyper_exp . RBRACKET
    (113) factor_variable -> ID LBRACKET hyper_exp . RBRACKET LBRACKET hyper_exp RBRACKET

    RBRACKET        shift and go to state 209


state 178

    (115) factor_expresion -> LPAREN meter_fondo_falso hyper_exp . RPAREN quitar_fondo_falso

    RPAREN          shift and go to state 210


state 179

    (121) llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .

    ID              reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    PORCADA         reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    SI              reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LEER            reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    RBRACE          reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    REGRESAR        reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    TIMES           reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    CTEI            reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    CTEF            reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LPAREN          reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    PLUS            reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    MINUS           reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    GREATER         reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LESS            reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    GREATEREQ       reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LESSEQ          reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    EQUAL           reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    Y               reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    O               reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    COMMA           reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    RPAREN          reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    HASTA           reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LBRACE          reduce using rule 121 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)


state 180

    (124) llamadaCYCLE_aux -> COMMA hyper_exp . llamadaCYCLE_aux
    (124) llamadaCYCLE_aux -> . COMMA hyper_exp llamadaCYCLE_aux
    (125) llamadaCYCLE_aux -> . empty
    (132) empty -> .

    COMMA           shift and go to state 139
    RPAREN          reduce using rule 132 (empty -> .)

    llamadaCYCLE_aux               shift and go to state 211
    empty                          shift and go to state 140

state 181

    (75) hyper_exp_aux -> push_op_logicos super_exp . check_op_logicos
    (77) check_op_logicos -> .

    COMMA           reduce using rule 77 (check_op_logicos -> .)
    RPAREN          reduce using rule 77 (check_op_logicos -> .)
    SEMICOLON       reduce using rule 77 (check_op_logicos -> .)
    RBRACKET        reduce using rule 77 (check_op_logicos -> .)
    HASTA           reduce using rule 77 (check_op_logicos -> .)
    LBRACE          reduce using rule 77 (check_op_logicos -> .)

    check_op_logicos               shift and go to state 212

state 182

    (82) super_exp_aux -> push_op_relacionales exp . check_op_relacionales
    (84) check_op_relacionales -> .

    Y               reduce using rule 84 (check_op_relacionales -> .)
    O               reduce using rule 84 (check_op_relacionales -> .)
    CTEI            reduce using rule 84 (check_op_relacionales -> .)
    CTEF            reduce using rule 84 (check_op_relacionales -> .)
    ID              reduce using rule 84 (check_op_relacionales -> .)
    LPAREN          reduce using rule 84 (check_op_relacionales -> .)
    COMMA           reduce using rule 84 (check_op_relacionales -> .)
    RPAREN          reduce using rule 84 (check_op_relacionales -> .)
    SEMICOLON       reduce using rule 84 (check_op_relacionales -> .)
    RBRACKET        reduce using rule 84 (check_op_relacionales -> .)
    HASTA           reduce using rule 84 (check_op_relacionales -> .)
    LBRACE          reduce using rule 84 (check_op_relacionales -> .)

    check_op_relacionales          shift and go to state 213

state 183

    (92) exp -> term check_op_masmenos exp_aux .

    GREATER         reduce using rule 92 (exp -> term check_op_masmenos exp_aux .)
    LESS            reduce using rule 92 (exp -> term check_op_masmenos exp_aux .)
    GREATEREQ       reduce using rule 92 (exp -> term check_op_masmenos exp_aux .)
    LESSEQ          reduce using rule 92 (exp -> term check_op_masmenos exp_aux .)
    NOTEQUAL        reduce using rule 92 (exp -> term check_op_masmenos exp_aux .)
    EQUAL           reduce using rule 92 (exp -> term check_op_masmenos exp_aux .)
    CTEI            reduce using rule 92 (exp -> term check_op_masmenos exp_aux .)
    CTEF            reduce using rule 92 (exp -> term check_op_masmenos exp_aux .)
    ID              reduce using rule 92 (exp -> term check_op_masmenos exp_aux .)
    LPAREN          reduce using rule 92 (exp -> term check_op_masmenos exp_aux .)
    Y               reduce using rule 92 (exp -> term check_op_masmenos exp_aux .)
    O               reduce using rule 92 (exp -> term check_op_masmenos exp_aux .)
    COMMA           reduce using rule 92 (exp -> term check_op_masmenos exp_aux .)
    RPAREN          reduce using rule 92 (exp -> term check_op_masmenos exp_aux .)
    RBRACKET        reduce using rule 92 (exp -> term check_op_masmenos exp_aux .)
    SEMICOLON       reduce using rule 92 (exp -> term check_op_masmenos exp_aux .)
    HASTA           reduce using rule 92 (exp -> term check_op_masmenos exp_aux .)
    LBRACE          reduce using rule 92 (exp -> term check_op_masmenos exp_aux .)


state 184

    (93) exp_aux -> push_op_exp_masmenos . exp
    (92) exp -> . term check_op_masmenos exp_aux
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    exp                            shift and go to state 214
    term                           shift and go to state 110
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 185

    (94) exp_aux -> empty .
    (97) push_op_exp_masmenos -> empty .

  ! reduce/reduce conflict for CTEI resolved using rule 94 (exp_aux -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 94 (exp_aux -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 94 (exp_aux -> empty .)
  ! reduce/reduce conflict for LPAREN resolved using rule 94 (exp_aux -> empty .)
    GREATER         reduce using rule 94 (exp_aux -> empty .)
    LESS            reduce using rule 94 (exp_aux -> empty .)
    GREATEREQ       reduce using rule 94 (exp_aux -> empty .)
    LESSEQ          reduce using rule 94 (exp_aux -> empty .)
    NOTEQUAL        reduce using rule 94 (exp_aux -> empty .)
    EQUAL           reduce using rule 94 (exp_aux -> empty .)
    CTEI            reduce using rule 94 (exp_aux -> empty .)
    CTEF            reduce using rule 94 (exp_aux -> empty .)
    ID              reduce using rule 94 (exp_aux -> empty .)
    LPAREN          reduce using rule 94 (exp_aux -> empty .)
    Y               reduce using rule 94 (exp_aux -> empty .)
    O               reduce using rule 94 (exp_aux -> empty .)
    COMMA           reduce using rule 94 (exp_aux -> empty .)
    RPAREN          reduce using rule 94 (exp_aux -> empty .)
    RBRACKET        reduce using rule 94 (exp_aux -> empty .)
    SEMICOLON       reduce using rule 94 (exp_aux -> empty .)
    HASTA           reduce using rule 94 (exp_aux -> empty .)
    LBRACE          reduce using rule 94 (exp_aux -> empty .)

  ! CTEI            [ reduce using rule 97 (push_op_exp_masmenos -> empty .) ]
  ! CTEF            [ reduce using rule 97 (push_op_exp_masmenos -> empty .) ]
  ! ID              [ reduce using rule 97 (push_op_exp_masmenos -> empty .) ]
  ! LPAREN          [ reduce using rule 97 (push_op_exp_masmenos -> empty .) ]


state 186

    (95) push_op_exp_masmenos -> PLUS .

    CTEI            reduce using rule 95 (push_op_exp_masmenos -> PLUS .)
    CTEF            reduce using rule 95 (push_op_exp_masmenos -> PLUS .)
    ID              reduce using rule 95 (push_op_exp_masmenos -> PLUS .)
    LPAREN          reduce using rule 95 (push_op_exp_masmenos -> PLUS .)


state 187

    (96) push_op_exp_masmenos -> MINUS .

    CTEI            reduce using rule 96 (push_op_exp_masmenos -> MINUS .)
    CTEF            reduce using rule 96 (push_op_exp_masmenos -> MINUS .)
    ID              reduce using rule 96 (push_op_exp_masmenos -> MINUS .)
    LPAREN          reduce using rule 96 (push_op_exp_masmenos -> MINUS .)


state 188

    (99) term -> factor check_op_pordiv term_aux .

    PLUS            reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    MINUS           reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    CTEI            reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    CTEF            reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    ID              reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    LPAREN          reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    GREATER         reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    LESS            reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    GREATEREQ       reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    LESSEQ          reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    NOTEQUAL        reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    EQUAL           reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    Y               reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    O               reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    COMMA           reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    RPAREN          reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    RBRACKET        reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    SEMICOLON       reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    HASTA           reduce using rule 99 (term -> factor check_op_pordiv term_aux .)
    LBRACE          reduce using rule 99 (term -> factor check_op_pordiv term_aux .)


state 189

    (100) term_aux -> push_op_exp_pordiv . term
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    term                           shift and go to state 215
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 190

    (101) term_aux -> empty .
    (105) push_op_exp_pordiv -> empty .

  ! reduce/reduce conflict for CTEI resolved using rule 101 (term_aux -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 101 (term_aux -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 101 (term_aux -> empty .)
  ! reduce/reduce conflict for LPAREN resolved using rule 101 (term_aux -> empty .)
    PLUS            reduce using rule 101 (term_aux -> empty .)
    MINUS           reduce using rule 101 (term_aux -> empty .)
    CTEI            reduce using rule 101 (term_aux -> empty .)
    CTEF            reduce using rule 101 (term_aux -> empty .)
    ID              reduce using rule 101 (term_aux -> empty .)
    LPAREN          reduce using rule 101 (term_aux -> empty .)
    GREATER         reduce using rule 101 (term_aux -> empty .)
    LESS            reduce using rule 101 (term_aux -> empty .)
    GREATEREQ       reduce using rule 101 (term_aux -> empty .)
    LESSEQ          reduce using rule 101 (term_aux -> empty .)
    NOTEQUAL        reduce using rule 101 (term_aux -> empty .)
    EQUAL           reduce using rule 101 (term_aux -> empty .)
    Y               reduce using rule 101 (term_aux -> empty .)
    O               reduce using rule 101 (term_aux -> empty .)
    COMMA           reduce using rule 101 (term_aux -> empty .)
    RPAREN          reduce using rule 101 (term_aux -> empty .)
    RBRACKET        reduce using rule 101 (term_aux -> empty .)
    SEMICOLON       reduce using rule 101 (term_aux -> empty .)
    HASTA           reduce using rule 101 (term_aux -> empty .)
    LBRACE          reduce using rule 101 (term_aux -> empty .)

  ! CTEI            [ reduce using rule 105 (push_op_exp_pordiv -> empty .) ]
  ! CTEF            [ reduce using rule 105 (push_op_exp_pordiv -> empty .) ]
  ! ID              [ reduce using rule 105 (push_op_exp_pordiv -> empty .) ]
  ! LPAREN          [ reduce using rule 105 (push_op_exp_pordiv -> empty .) ]


state 191

    (103) push_op_exp_pordiv -> TIMES .

    CTEI            reduce using rule 103 (push_op_exp_pordiv -> TIMES .)
    CTEF            reduce using rule 103 (push_op_exp_pordiv -> TIMES .)
    ID              reduce using rule 103 (push_op_exp_pordiv -> TIMES .)
    LPAREN          reduce using rule 103 (push_op_exp_pordiv -> TIMES .)


state 192

    (104) push_op_exp_pordiv -> DIVIDE .

    CTEI            reduce using rule 104 (push_op_exp_pordiv -> DIVIDE .)
    CTEF            reduce using rule 104 (push_op_exp_pordiv -> DIVIDE .)
    ID              reduce using rule 104 (push_op_exp_pordiv -> DIVIDE .)
    LPAREN          reduce using rule 104 (push_op_exp_pordiv -> DIVIDE .)


state 193

    (55) variable_aux -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (92) exp -> . term check_op_masmenos exp_aux
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    exp                            shift and go to state 216
    term                           shift and go to state 110
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 194

    (64) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp . punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (66) punto_valida_int -> .

    HASTA           reduce using rule 66 (punto_valida_int -> .)

    punto_valida_int               shift and go to state 217

state 195

    (60) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN . punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (62) punto_medio_while -> .

    LBRACE          reduce using rule 62 (punto_medio_while -> .)

    punto_medio_while              shift and go to state 218

state 196

    (69) condicion -> SI LPAREN hyper_exp RPAREN punto_si . LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (70) condicion -> SI LPAREN hyper_exp RPAREN punto_si . LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON

    LBRACE          shift and go to state 219


state 197

    (126) imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .

    ID              reduce using rule 126 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    PORCADA         reduce using rule 126 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 126 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    SI              reduce using rule 126 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 126 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    LEER            reduce using rule 126 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    RBRACE          reduce using rule 126 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    REGRESAR        reduce using rule 126 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)


state 198

    (127) imprimir_aux -> exp push_imprimir imprimirCycle .

    RPAREN          reduce using rule 127 (imprimir_aux -> exp push_imprimir imprimirCycle .)


state 199

    (129) imprimirCycle -> COMMA . imprimir_aux
    (127) imprimir_aux -> . exp push_imprimir imprimirCycle
    (128) imprimir_aux -> . CTESTRING push_imprimir imprimirCycle
    (92) exp -> . term check_op_masmenos exp_aux
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTESTRING       shift and go to state 123
    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    imprimir_aux                   shift and go to state 220
    exp                            shift and go to state 122
    term                           shift and go to state 110
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 200

    (130) imprimirCycle -> empty .

    RPAREN          reduce using rule 130 (imprimirCycle -> empty .)


state 201

    (128) imprimir_aux -> CTESTRING push_imprimir imprimirCycle .

    RPAREN          reduce using rule 128 (imprimir_aux -> CTESTRING push_imprimir imprimirCycle .)


state 202

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle . estatutos dec_func_regresar RBRACE SEMICOLON punto_end_function
    (42) estatutos -> . estatutos_opciones estatutos
    (43) estatutos -> . empty
    (44) estatutos_opciones -> . asignar
    (45) estatutos_opciones -> . llamada_func
    (46) estatutos_opciones -> . ciclo_for
    (47) estatutos_opciones -> . ciclo_while
    (48) estatutos_opciones -> . condicion
    (49) estatutos_opciones -> . imprimir
    (50) estatutos_opciones -> . leer
    (132) empty -> .
    (52) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (121) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (64) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (60) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (69) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (70) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (126) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (59) leer -> . LEER variable SEMICOLON
    (53) variable -> . ID variable_aux

    REGRESAR        reduce using rule 132 (empty -> .)
    RBRACE          reduce using rule 132 (empty -> .)
    ID              shift and go to state 66
    PORCADA         shift and go to state 67
    MIENTRAS        shift and go to state 68
    SI              shift and go to state 69
    IMPRIMIR        shift and go to state 70
    LEER            shift and go to state 71

    estatutos                      shift and go to state 221
    estatutos_opciones             shift and go to state 56
    empty                          shift and go to state 57
    asignar                        shift and go to state 58
    llamada_func                   shift and go to state 59
    ciclo_for                      shift and go to state 60
    ciclo_while                    shift and go to state 61
    condicion                      shift and go to state 62
    imprimir                       shift and go to state 63
    leer                           shift and go to state 64
    variable                       shift and go to state 65

state 203

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos . RBRACE SEMICOLON punto_end_function

    RBRACE          shift and go to state 222


state 204

    (39) parameterCycle -> COMMA type . ID punto_add_parameter parameterCycle

    ID              shift and go to state 223


state 205

    (22) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .

    VARIABLE        reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    RENGLON         reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    TABLA           reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    INICIO          reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    FUNCION         reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    ID              reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    PORCADA         reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    MIENTRAS        reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    SI              reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    LEER            reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    RBRACE          reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    REGRESAR        reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)


state 206

    (23) arrayCycle -> COMMA ID . LBRACKET CTEI RBRACKET punto_array arrayCycle

    LBRACKET        shift and go to state 224


state 207

    (26) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . punto_matrix matrixCycle SEMICOLON
    (29) punto_matrix -> .

    COMMA           reduce using rule 29 (punto_matrix -> .)
    SEMICOLON       reduce using rule 29 (punto_matrix -> .)

    punto_matrix                   shift and go to state 225

state 208

    (52) asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .

    ID              reduce using rule 52 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    PORCADA         reduce using rule 52 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    MIENTRAS        reduce using rule 52 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    SI              reduce using rule 52 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    IMPRIMIR        reduce using rule 52 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    LEER            reduce using rule 52 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    RBRACE          reduce using rule 52 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    REGRESAR        reduce using rule 52 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)


state 209

    (112) factor_variable -> ID LBRACKET hyper_exp RBRACKET .
    (113) factor_variable -> ID LBRACKET hyper_exp RBRACKET . LBRACKET hyper_exp RBRACKET

    TIMES           reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    DIVIDE          reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    CTEI            reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    CTEF            reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    ID              reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LPAREN          reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    PLUS            reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    MINUS           reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    GREATER         reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LESS            reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    GREATEREQ       reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LESSEQ          reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    NOTEQUAL        reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    EQUAL           reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    Y               reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    O               reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    COMMA           reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    RPAREN          reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    RBRACKET        reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    SEMICOLON       reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    HASTA           reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LBRACE          reduce using rule 112 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LBRACKET        shift and go to state 226


state 210

    (115) factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN . quitar_fondo_falso
    (117) quitar_fondo_falso -> .

    TIMES           reduce using rule 117 (quitar_fondo_falso -> .)
    DIVIDE          reduce using rule 117 (quitar_fondo_falso -> .)
    CTEI            reduce using rule 117 (quitar_fondo_falso -> .)
    CTEF            reduce using rule 117 (quitar_fondo_falso -> .)
    ID              reduce using rule 117 (quitar_fondo_falso -> .)
    LPAREN          reduce using rule 117 (quitar_fondo_falso -> .)
    PLUS            reduce using rule 117 (quitar_fondo_falso -> .)
    MINUS           reduce using rule 117 (quitar_fondo_falso -> .)
    GREATER         reduce using rule 117 (quitar_fondo_falso -> .)
    LESS            reduce using rule 117 (quitar_fondo_falso -> .)
    GREATEREQ       reduce using rule 117 (quitar_fondo_falso -> .)
    LESSEQ          reduce using rule 117 (quitar_fondo_falso -> .)
    NOTEQUAL        reduce using rule 117 (quitar_fondo_falso -> .)
    EQUAL           reduce using rule 117 (quitar_fondo_falso -> .)
    Y               reduce using rule 117 (quitar_fondo_falso -> .)
    O               reduce using rule 117 (quitar_fondo_falso -> .)
    COMMA           reduce using rule 117 (quitar_fondo_falso -> .)
    RPAREN          reduce using rule 117 (quitar_fondo_falso -> .)
    RBRACKET        reduce using rule 117 (quitar_fondo_falso -> .)
    SEMICOLON       reduce using rule 117 (quitar_fondo_falso -> .)
    HASTA           reduce using rule 117 (quitar_fondo_falso -> .)
    LBRACE          reduce using rule 117 (quitar_fondo_falso -> .)

    quitar_fondo_falso             shift and go to state 227

state 211

    (124) llamadaCYCLE_aux -> COMMA hyper_exp llamadaCYCLE_aux .

    RPAREN          reduce using rule 124 (llamadaCYCLE_aux -> COMMA hyper_exp llamadaCYCLE_aux .)


state 212

    (75) hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .

    COMMA           reduce using rule 75 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    RPAREN          reduce using rule 75 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    SEMICOLON       reduce using rule 75 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    RBRACKET        reduce using rule 75 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    HASTA           reduce using rule 75 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    LBRACE          reduce using rule 75 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)


state 213

    (82) super_exp_aux -> push_op_relacionales exp check_op_relacionales .

    Y               reduce using rule 82 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    O               reduce using rule 82 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    CTEI            reduce using rule 82 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    CTEF            reduce using rule 82 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    ID              reduce using rule 82 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    LPAREN          reduce using rule 82 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    COMMA           reduce using rule 82 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    RPAREN          reduce using rule 82 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    SEMICOLON       reduce using rule 82 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    RBRACKET        reduce using rule 82 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    HASTA           reduce using rule 82 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    LBRACE          reduce using rule 82 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)


state 214

    (93) exp_aux -> push_op_exp_masmenos exp .

    GREATER         reduce using rule 93 (exp_aux -> push_op_exp_masmenos exp .)
    LESS            reduce using rule 93 (exp_aux -> push_op_exp_masmenos exp .)
    GREATEREQ       reduce using rule 93 (exp_aux -> push_op_exp_masmenos exp .)
    LESSEQ          reduce using rule 93 (exp_aux -> push_op_exp_masmenos exp .)
    NOTEQUAL        reduce using rule 93 (exp_aux -> push_op_exp_masmenos exp .)
    EQUAL           reduce using rule 93 (exp_aux -> push_op_exp_masmenos exp .)
    CTEI            reduce using rule 93 (exp_aux -> push_op_exp_masmenos exp .)
    CTEF            reduce using rule 93 (exp_aux -> push_op_exp_masmenos exp .)
    ID              reduce using rule 93 (exp_aux -> push_op_exp_masmenos exp .)
    LPAREN          reduce using rule 93 (exp_aux -> push_op_exp_masmenos exp .)
    Y               reduce using rule 93 (exp_aux -> push_op_exp_masmenos exp .)
    O               reduce using rule 93 (exp_aux -> push_op_exp_masmenos exp .)
    COMMA           reduce using rule 93 (exp_aux -> push_op_exp_masmenos exp .)
    RPAREN          reduce using rule 93 (exp_aux -> push_op_exp_masmenos exp .)
    RBRACKET        reduce using rule 93 (exp_aux -> push_op_exp_masmenos exp .)
    SEMICOLON       reduce using rule 93 (exp_aux -> push_op_exp_masmenos exp .)
    HASTA           reduce using rule 93 (exp_aux -> push_op_exp_masmenos exp .)
    LBRACE          reduce using rule 93 (exp_aux -> push_op_exp_masmenos exp .)


state 215

    (100) term_aux -> push_op_exp_pordiv term .

    PLUS            reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    MINUS           reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    CTEI            reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    CTEF            reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    ID              reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    LPAREN          reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    GREATER         reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    LESS            reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    GREATEREQ       reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    LESSEQ          reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    NOTEQUAL        reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    EQUAL           reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    Y               reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    O               reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    COMMA           reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    RPAREN          reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    RBRACKET        reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    SEMICOLON       reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    HASTA           reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)
    LBRACE          reduce using rule 100 (term_aux -> push_op_exp_pordiv term .)


state 216

    (55) variable_aux -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 228


state 217

    (64) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int . HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON

    HASTA           shift and go to state 229


state 218

    (60) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while . LBRACE estatutos RBRACE punto_fin_while SEMICOLON

    LBRACE          shift and go to state 230


state 219

    (69) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE . estatutos RBRACE punto_fin_si SEMICOLON
    (70) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE . estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (42) estatutos -> . estatutos_opciones estatutos
    (43) estatutos -> . empty
    (44) estatutos_opciones -> . asignar
    (45) estatutos_opciones -> . llamada_func
    (46) estatutos_opciones -> . ciclo_for
    (47) estatutos_opciones -> . ciclo_while
    (48) estatutos_opciones -> . condicion
    (49) estatutos_opciones -> . imprimir
    (50) estatutos_opciones -> . leer
    (132) empty -> .
    (52) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (121) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (64) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (60) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (69) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (70) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (126) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (59) leer -> . LEER variable SEMICOLON
    (53) variable -> . ID variable_aux

    RBRACE          reduce using rule 132 (empty -> .)
    ID              shift and go to state 66
    PORCADA         shift and go to state 67
    MIENTRAS        shift and go to state 68
    SI              shift and go to state 69
    IMPRIMIR        shift and go to state 70
    LEER            shift and go to state 71

    estatutos                      shift and go to state 231
    estatutos_opciones             shift and go to state 56
    empty                          shift and go to state 57
    asignar                        shift and go to state 58
    llamada_func                   shift and go to state 59
    ciclo_for                      shift and go to state 60
    ciclo_while                    shift and go to state 61
    condicion                      shift and go to state 62
    imprimir                       shift and go to state 63
    leer                           shift and go to state 64
    variable                       shift and go to state 65

state 220

    (129) imprimirCycle -> COMMA imprimir_aux .

    RPAREN          reduce using rule 129 (imprimirCycle -> COMMA imprimir_aux .)


state 221

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos . dec_func_regresar RBRACE SEMICOLON punto_end_function
    (33) dec_func_regresar -> . REGRESAR exp SEMICOLON
    (34) dec_func_regresar -> . empty
    (132) empty -> .

    REGRESAR        shift and go to state 233
    RBRACE          reduce using rule 132 (empty -> .)

    dec_func_regresar              shift and go to state 232
    empty                          shift and go to state 234

state 222

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE . SEMICOLON punto_end_function

    SEMICOLON       shift and go to state 235


state 223

    (39) parameterCycle -> COMMA type ID . punto_add_parameter parameterCycle
    (41) punto_add_parameter -> .

    COMMA           reduce using rule 41 (punto_add_parameter -> .)
    RPAREN          reduce using rule 41 (punto_add_parameter -> .)

    punto_add_parameter            shift and go to state 236

state 224

    (23) arrayCycle -> COMMA ID LBRACKET . CTEI RBRACKET punto_array arrayCycle

    CTEI            shift and go to state 237


state 225

    (26) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix . matrixCycle SEMICOLON
    (27) matrixCycle -> . COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle
    (28) matrixCycle -> . empty
    (132) empty -> .

    COMMA           shift and go to state 239
    SEMICOLON       reduce using rule 132 (empty -> .)

    matrixCycle                    shift and go to state 238
    empty                          shift and go to state 240

state 226

    (113) factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET . hyper_exp RBRACKET
    (74) hyper_exp -> . super_exp hyper_exp_aux
    (81) super_exp -> . exp super_exp_aux
    (92) exp -> . term check_op_masmenos exp_aux
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    hyper_exp                      shift and go to state 241
    super_exp                      shift and go to state 108
    exp                            shift and go to state 109
    term                           shift and go to state 110
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 227

    (115) factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .

    TIMES           reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    DIVIDE          reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    CTEI            reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    CTEF            reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    ID              reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LPAREN          reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    PLUS            reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    MINUS           reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    GREATER         reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LESS            reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    GREATEREQ       reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LESSEQ          reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    NOTEQUAL        reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    EQUAL           reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    Y               reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    O               reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    COMMA           reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    RPAREN          reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    RBRACKET        reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    SEMICOLON       reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    HASTA           reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LBRACE          reduce using rule 115 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)


state 228

    (55) variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    ASSIGN          reduce using rule 55 (variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 55 (variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 229

    (64) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA . hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (74) hyper_exp -> . super_exp hyper_exp_aux
    (81) super_exp -> . exp super_exp_aux
    (92) exp -> . term check_op_masmenos exp_aux
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    hyper_exp                      shift and go to state 242
    super_exp                      shift and go to state 108
    exp                            shift and go to state 109
    term                           shift and go to state 110
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 230

    (60) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE . estatutos RBRACE punto_fin_while SEMICOLON
    (42) estatutos -> . estatutos_opciones estatutos
    (43) estatutos -> . empty
    (44) estatutos_opciones -> . asignar
    (45) estatutos_opciones -> . llamada_func
    (46) estatutos_opciones -> . ciclo_for
    (47) estatutos_opciones -> . ciclo_while
    (48) estatutos_opciones -> . condicion
    (49) estatutos_opciones -> . imprimir
    (50) estatutos_opciones -> . leer
    (132) empty -> .
    (52) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (121) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (64) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (60) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (69) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (70) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (126) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (59) leer -> . LEER variable SEMICOLON
    (53) variable -> . ID variable_aux

    RBRACE          reduce using rule 132 (empty -> .)
    ID              shift and go to state 66
    PORCADA         shift and go to state 67
    MIENTRAS        shift and go to state 68
    SI              shift and go to state 69
    IMPRIMIR        shift and go to state 70
    LEER            shift and go to state 71

    estatutos                      shift and go to state 243
    estatutos_opciones             shift and go to state 56
    empty                          shift and go to state 57
    asignar                        shift and go to state 58
    llamada_func                   shift and go to state 59
    ciclo_for                      shift and go to state 60
    ciclo_while                    shift and go to state 61
    condicion                      shift and go to state 62
    imprimir                       shift and go to state 63
    leer                           shift and go to state 64
    variable                       shift and go to state 65

state 231

    (69) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos . RBRACE punto_fin_si SEMICOLON
    (70) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos . RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON

    RBRACE          shift and go to state 244


state 232

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos dec_func_regresar . RBRACE SEMICOLON punto_end_function

    RBRACE          shift and go to state 245


state 233

    (33) dec_func_regresar -> REGRESAR . exp SEMICOLON
    (92) exp -> . term check_op_masmenos exp_aux
    (99) term -> . factor check_op_pordiv term_aux
    (106) factor -> . factor_constante
    (107) factor -> . factor_variable
    (108) factor -> . factor_expresion
    (109) factor_constante -> . CTEI push_int
    (110) factor_constante -> . CTEF push_float
    (111) factor_variable -> . ID push_id
    (112) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (113) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (114) factor_variable -> . ID llamada_func
    (115) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 115
    CTEF            shift and go to state 116
    ID              shift and go to state 103
    LPAREN          shift and go to state 104

    exp                            shift and go to state 246
    term                           shift and go to state 110
    factor                         shift and go to state 111
    factor_constante               shift and go to state 112
    factor_variable                shift and go to state 113
    factor_expresion               shift and go to state 114

state 234

    (34) dec_func_regresar -> empty .

    RBRACE          reduce using rule 34 (dec_func_regresar -> empty .)


state 235

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON . punto_end_function
    (35) punto_end_function -> .

    FUNCION         reduce using rule 35 (punto_end_function -> .)
    INICIO          reduce using rule 35 (punto_end_function -> .)

    punto_end_function             shift and go to state 247

state 236

    (39) parameterCycle -> COMMA type ID punto_add_parameter . parameterCycle
    (39) parameterCycle -> . COMMA type ID punto_add_parameter parameterCycle
    (40) parameterCycle -> . empty
    (132) empty -> .

    COMMA           shift and go to state 169
    RPAREN          reduce using rule 132 (empty -> .)

    parameterCycle                 shift and go to state 248
    empty                          shift and go to state 170

state 237

    (23) arrayCycle -> COMMA ID LBRACKET CTEI . RBRACKET punto_array arrayCycle

    RBRACKET        shift and go to state 249


state 238

    (26) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle . SEMICOLON

    SEMICOLON       shift and go to state 250


state 239

    (27) matrixCycle -> COMMA . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    ID              shift and go to state 251


state 240

    (28) matrixCycle -> empty .

    SEMICOLON       reduce using rule 28 (matrixCycle -> empty .)


state 241

    (113) factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp . RBRACKET

    RBRACKET        shift and go to state 252


state 242

    (64) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp . punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (67) punto_valida_exp -> .

    LBRACE          reduce using rule 67 (punto_valida_exp -> .)

    punto_valida_exp               shift and go to state 253

state 243

    (60) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos . RBRACE punto_fin_while SEMICOLON

    RBRACE          shift and go to state 254


state 244

    (69) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE . punto_fin_si SEMICOLON
    (70) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE . SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (72) punto_fin_si -> .

    SINO            shift and go to state 256
    SEMICOLON       reduce using rule 72 (punto_fin_si -> .)

    punto_fin_si                   shift and go to state 255

state 245

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos dec_func_regresar RBRACE . SEMICOLON punto_end_function

    SEMICOLON       shift and go to state 257


state 246

    (33) dec_func_regresar -> REGRESAR exp . SEMICOLON

    SEMICOLON       shift and go to state 258


state 247

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function .

    FUNCION         reduce using rule 31 (dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function .)
    INICIO          reduce using rule 31 (dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function .)


state 248

    (39) parameterCycle -> COMMA type ID punto_add_parameter parameterCycle .

    RPAREN          reduce using rule 39 (parameterCycle -> COMMA type ID punto_add_parameter parameterCycle .)


state 249

    (23) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET . punto_array arrayCycle
    (25) punto_array -> .

    COMMA           reduce using rule 25 (punto_array -> .)
    SEMICOLON       reduce using rule 25 (punto_array -> .)

    punto_array                    shift and go to state 259

state 250

    (26) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .

    VARIABLE        reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    RENGLON         reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    TABLA           reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    INICIO          reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    FUNCION         reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    ID              reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    PORCADA         reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    MIENTRAS        reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    SI              reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    LEER            reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    RBRACE          reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    REGRESAR        reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)


state 251

    (27) matrixCycle -> COMMA ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    LBRACKET        shift and go to state 260


state 252

    (113) factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .

    TIMES           reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    DIVIDE          reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    CTEI            reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    CTEF            reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    ID              reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LPAREN          reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    PLUS            reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    MINUS           reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    GREATER         reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LESS            reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    GREATEREQ       reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LESSEQ          reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    NOTEQUAL        reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    EQUAL           reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    Y               reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    O               reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    COMMA           reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    RPAREN          reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    RBRACKET        reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    SEMICOLON       reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    HASTA           reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LBRACE          reduce using rule 113 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)


state 253

    (64) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp . LBRACE estatutos RBRACE punto_termina_for SEMICOLON

    LBRACE          shift and go to state 261


state 254

    (60) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE . punto_fin_while SEMICOLON
    (63) punto_fin_while -> .

    SEMICOLON       reduce using rule 63 (punto_fin_while -> .)

    punto_fin_while                shift and go to state 262

state 255

    (69) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si . SEMICOLON

    SEMICOLON       shift and go to state 263


state 256

    (70) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO . punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (73) punto_sino -> .

    LBRACE          reduce using rule 73 (punto_sino -> .)

    punto_sino                     shift and go to state 264

state 257

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos dec_func_regresar RBRACE SEMICOLON . punto_end_function
    (35) punto_end_function -> .

    FUNCION         reduce using rule 35 (punto_end_function -> .)
    INICIO          reduce using rule 35 (punto_end_function -> .)

    punto_end_function             shift and go to state 265

state 258

    (33) dec_func_regresar -> REGRESAR exp SEMICOLON .

    RBRACE          reduce using rule 33 (dec_func_regresar -> REGRESAR exp SEMICOLON .)


state 259

    (23) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array . arrayCycle
    (23) arrayCycle -> . COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle
    (24) arrayCycle -> . empty
    (132) empty -> .

    COMMA           shift and go to state 173
    SEMICOLON       reduce using rule 132 (empty -> .)

    arrayCycle                     shift and go to state 266
    empty                          shift and go to state 174

state 260

    (27) matrixCycle -> COMMA ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    CTEI            shift and go to state 267


state 261

    (64) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE . estatutos RBRACE punto_termina_for SEMICOLON
    (42) estatutos -> . estatutos_opciones estatutos
    (43) estatutos -> . empty
    (44) estatutos_opciones -> . asignar
    (45) estatutos_opciones -> . llamada_func
    (46) estatutos_opciones -> . ciclo_for
    (47) estatutos_opciones -> . ciclo_while
    (48) estatutos_opciones -> . condicion
    (49) estatutos_opciones -> . imprimir
    (50) estatutos_opciones -> . leer
    (132) empty -> .
    (52) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (121) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (64) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (60) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (69) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (70) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (126) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (59) leer -> . LEER variable SEMICOLON
    (53) variable -> . ID variable_aux

    RBRACE          reduce using rule 132 (empty -> .)
    ID              shift and go to state 66
    PORCADA         shift and go to state 67
    MIENTRAS        shift and go to state 68
    SI              shift and go to state 69
    IMPRIMIR        shift and go to state 70
    LEER            shift and go to state 71

    estatutos                      shift and go to state 268
    estatutos_opciones             shift and go to state 56
    empty                          shift and go to state 57
    asignar                        shift and go to state 58
    llamada_func                   shift and go to state 59
    ciclo_for                      shift and go to state 60
    ciclo_while                    shift and go to state 61
    condicion                      shift and go to state 62
    imprimir                       shift and go to state 63
    leer                           shift and go to state 64
    variable                       shift and go to state 65

state 262

    (60) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while . SEMICOLON

    SEMICOLON       shift and go to state 269


state 263

    (69) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .

    ID              reduce using rule 69 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    PORCADA         reduce using rule 69 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    MIENTRAS        reduce using rule 69 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    SI              reduce using rule 69 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    IMPRIMIR        reduce using rule 69 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    LEER            reduce using rule 69 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    RBRACE          reduce using rule 69 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    REGRESAR        reduce using rule 69 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)


state 264

    (70) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino . LBRACE estatutos RBRACE punto_fin_si SEMICOLON

    LBRACE          shift and go to state 270


state 265

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos dec_func_regresar RBRACE SEMICOLON punto_end_function .

    FUNCION         reduce using rule 30 (dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos dec_func_regresar RBRACE SEMICOLON punto_end_function .)
    INICIO          reduce using rule 30 (dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos dec_func_regresar RBRACE SEMICOLON punto_end_function .)


state 266

    (23) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle .

    SEMICOLON       reduce using rule 23 (arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle .)


state 267

    (27) matrixCycle -> COMMA ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    RBRACKET        shift and go to state 271


state 268

    (64) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos . RBRACE punto_termina_for SEMICOLON

    RBRACE          shift and go to state 272


state 269

    (60) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .

    ID              reduce using rule 60 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    PORCADA         reduce using rule 60 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    MIENTRAS        reduce using rule 60 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    SI              reduce using rule 60 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    IMPRIMIR        reduce using rule 60 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    LEER            reduce using rule 60 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    RBRACE          reduce using rule 60 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    REGRESAR        reduce using rule 60 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)


state 270

    (70) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE . estatutos RBRACE punto_fin_si SEMICOLON
    (42) estatutos -> . estatutos_opciones estatutos
    (43) estatutos -> . empty
    (44) estatutos_opciones -> . asignar
    (45) estatutos_opciones -> . llamada_func
    (46) estatutos_opciones -> . ciclo_for
    (47) estatutos_opciones -> . ciclo_while
    (48) estatutos_opciones -> . condicion
    (49) estatutos_opciones -> . imprimir
    (50) estatutos_opciones -> . leer
    (132) empty -> .
    (52) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (121) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (64) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (60) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (69) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (70) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (126) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (59) leer -> . LEER variable SEMICOLON
    (53) variable -> . ID variable_aux

    RBRACE          reduce using rule 132 (empty -> .)
    ID              shift and go to state 66
    PORCADA         shift and go to state 67
    MIENTRAS        shift and go to state 68
    SI              shift and go to state 69
    IMPRIMIR        shift and go to state 70
    LEER            shift and go to state 71

    estatutos                      shift and go to state 273
    estatutos_opciones             shift and go to state 56
    empty                          shift and go to state 57
    asignar                        shift and go to state 58
    llamada_func                   shift and go to state 59
    ciclo_for                      shift and go to state 60
    ciclo_while                    shift and go to state 61
    condicion                      shift and go to state 62
    imprimir                       shift and go to state 63
    leer                           shift and go to state 64
    variable                       shift and go to state 65

state 271

    (27) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    LBRACKET        shift and go to state 274


state 272

    (64) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE . punto_termina_for SEMICOLON
    (68) punto_termina_for -> .

    SEMICOLON       reduce using rule 68 (punto_termina_for -> .)

    punto_termina_for              shift and go to state 275

state 273

    (70) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos . RBRACE punto_fin_si SEMICOLON

    RBRACE          shift and go to state 276


state 274

    (27) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET punto_matrix matrixCycle

    CTEI            shift and go to state 277


state 275

    (64) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for . SEMICOLON

    SEMICOLON       shift and go to state 278


state 276

    (70) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE . punto_fin_si SEMICOLON
    (72) punto_fin_si -> .

    SEMICOLON       reduce using rule 72 (punto_fin_si -> .)

    punto_fin_si                   shift and go to state 279

state 277

    (27) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET punto_matrix matrixCycle

    RBRACKET        shift and go to state 280


state 278

    (64) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .

    ID              reduce using rule 64 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    PORCADA         reduce using rule 64 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    MIENTRAS        reduce using rule 64 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    SI              reduce using rule 64 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    IMPRIMIR        reduce using rule 64 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    LEER            reduce using rule 64 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    RBRACE          reduce using rule 64 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    REGRESAR        reduce using rule 64 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)


state 279

    (70) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si . SEMICOLON

    SEMICOLON       shift and go to state 281


state 280

    (27) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . punto_matrix matrixCycle
    (29) punto_matrix -> .

    COMMA           reduce using rule 29 (punto_matrix -> .)
    SEMICOLON       reduce using rule 29 (punto_matrix -> .)

    punto_matrix                   shift and go to state 282

state 281

    (70) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .

    ID              reduce using rule 70 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    PORCADA         reduce using rule 70 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    MIENTRAS        reduce using rule 70 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    SI              reduce using rule 70 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    IMPRIMIR        reduce using rule 70 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    LEER            reduce using rule 70 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    RBRACE          reduce using rule 70 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    REGRESAR        reduce using rule 70 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)


state 282

    (27) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix . matrixCycle
    (27) matrixCycle -> . COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle
    (28) matrixCycle -> . empty
    (132) empty -> .

    COMMA           shift and go to state 239
    SEMICOLON       reduce using rule 132 (empty -> .)

    matrixCycle                    shift and go to state 283
    empty                          shift and go to state 240

state 283

    (27) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle .

    SEMICOLON       reduce using rule 27 (matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INICIO in state 5 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 5 resolved as shift
WARNING: shift/reduce conflict for INICIO in state 7 resolved as shift
WARNING: shift/reduce conflict for ID in state 103 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (dec_var_cycle -> empty)
WARNING: rejected rule (dec_func_cycle -> empty) in state 11
WARNING: reduce/reduce conflict in state 148 resolved using rule (super_exp_aux -> empty)
WARNING: rejected rule (push_op_relacionales -> empty) in state 148
WARNING: reduce/reduce conflict in state 185 resolved using rule (exp_aux -> empty)
WARNING: rejected rule (push_op_exp_masmenos -> empty) in state 185
WARNING: reduce/reduce conflict in state 190 resolved using rule (term_aux -> empty)
WARNING: rejected rule (push_op_exp_pordiv -> empty) in state 190
WARNING: Rule (push_op_relacionales -> empty) is never reduced
WARNING: Rule (push_op_exp_masmenos -> empty) is never reduced
WARNING: Rule (push_op_exp_pordiv -> empty) is never reduced
