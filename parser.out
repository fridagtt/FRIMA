Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTECHAR

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID punto_programa COLON inicio
Rule 2     programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio
Rule 3     programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio
Rule 4     programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio
Rule 5     dec_var_cycle -> dec_var dec_var_cycle
Rule 6     dec_var_cycle -> empty
Rule 7     dec_func_cycle -> dec_func dec_func_cycle
Rule 8     dec_func_cycle -> empty
Rule 9     punto_programa -> <empty>
Rule 10    inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON
Rule 11    dec_var -> simple_var
Rule 12    dec_var -> array
Rule 13    dec_var -> matrix
Rule 14    simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
Rule 15    simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle
Rule 16    simpleVarCycle -> empty
Rule 17    punto_simple_var -> <empty>
Rule 18    type -> ENTERO
Rule 19    type -> DECIMAL
Rule 20    type -> LETRA
Rule 21    array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
Rule 22    arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle
Rule 23    arrayCycle -> empty
Rule 24    punto_array -> <empty>
Rule 25    matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON
Rule 26    matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle
Rule 27    matrixCycle -> empty
Rule 28    punto_matrix -> <empty>
Rule 29    dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON
Rule 30    decFuncCycle -> estatutos decFuncCycle
Rule 31    decFuncCycle -> empty
Rule 32    dec_func_regresar -> REGRESAR variable SEMICOLON
Rule 33    dec_func_regresar -> empty
Rule 34    dec_func_type -> type
Rule 35    dec_func_type -> SINREGRESAR
Rule 36    punto_add_func -> <empty>
Rule 37    parameter -> type ID punto_parameter parameterCycle
Rule 38    parameter -> empty
Rule 39    parameterCycle -> COMMA type ID punto_parameter parameterCycle
Rule 40    parameterCycle -> empty
Rule 41    punto_parameter -> <empty>
Rule 42    estatutos -> asignar
Rule 43    estatutos -> llamada_func
Rule 44    estatutos -> ciclo_for
Rule 45    estatutos -> ciclo_while
Rule 46    estatutos -> condicion
Rule 47    estatutos -> escribe
Rule 48    estatutos -> leer
Rule 49    estatutos -> empty
Rule 50    asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
Rule 51    push_op_igual -> <empty>
Rule 52    check_op_igual -> <empty>
Rule 53    variable -> ID variable_aux
Rule 54    variable_aux -> LBRACKET exp RBRACKET
Rule 55    variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 56    variable_aux -> empty
Rule 57    leer -> LEER variable SEMICOLON
Rule 58    ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
Rule 59    whileCycle -> estatutos whileCycle
Rule 60    whileCycle -> empty
Rule 61    ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
Rule 62    forCycle -> estatutos forCycle
Rule 63    forCycle -> empty
Rule 64    condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
Rule 65    condicionCycle -> estatutos condicionCycle
Rule 66    condicionCycle -> empty
Rule 67    sinoCondicion -> SINO LBRACE estatutos condicionCycle RBRACE
Rule 68    sinoCondicion -> empty
Rule 69    hyper_exp -> super_exp hyper_exp_aux
Rule 70    hyper_exp_aux -> push_op_logicos super_exp check_op_logicos
Rule 71    hyper_exp_aux -> empty
Rule 72    check_op_logicos -> <empty>
Rule 73    push_op_logicos -> Y
Rule 74    push_op_logicos -> O
Rule 75    push_op_logicos -> empty
Rule 76    super_exp -> exp super_exp_aux
Rule 77    super_exp_aux -> push_op_relacionales exp check_op_relacionales
Rule 78    super_exp_aux -> empty
Rule 79    check_op_relacionales -> <empty>
Rule 80    push_op_relacionales -> GREATER
Rule 81    push_op_relacionales -> LESS
Rule 82    push_op_relacionales -> GREATEREQ
Rule 83    push_op_relacionales -> LESSEQ
Rule 84    push_op_relacionales -> NOTEQUAL
Rule 85    push_op_relacionales -> EQUAL
Rule 86    push_op_relacionales -> empty
Rule 87    exp -> term check_op_masmenos exp_aux
Rule 88    exp_aux -> push_op_exp_masmenos exp
Rule 89    exp_aux -> empty
Rule 90    push_op_exp_masmenos -> PLUS
Rule 91    push_op_exp_masmenos -> MINUS
Rule 92    push_op_exp_masmenos -> empty
Rule 93    check_op_masmenos -> <empty>
Rule 94    term -> factor check_op_pordiv term_aux
Rule 95    term_aux -> push_op_exp_pordiv term
Rule 96    term_aux -> empty
Rule 97    check_op_pordiv -> <empty>
Rule 98    push_op_exp_pordiv -> TIMES
Rule 99    push_op_exp_pordiv -> DIVIDE
Rule 100   push_op_exp_pordiv -> empty
Rule 101   factor -> factor_constante
Rule 102   factor -> factor_variable
Rule 103   factor -> factor_expresion
Rule 104   factor_constante -> CTEI push_int
Rule 105   factor_constante -> CTEF push_float
Rule 106   factor_variable -> ID push_id
Rule 107   factor_variable -> ID LBRACKET hyper_exp RBRACKET
Rule 108   factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
Rule 109   factor_variable -> ID llamada_func
Rule 110   factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
Rule 111   meter_fondo_falso -> <empty>
Rule 112   quitar_fondo_falso -> <empty>
Rule 113   push_int -> <empty>
Rule 114   push_float -> <empty>
Rule 115   push_id -> <empty>
Rule 116   llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON
Rule 117   llamadaCYCLE -> hyper_exp llamadaCYCLE_aux
Rule 118   llamadaCYCLE -> empty
Rule 119   llamadaCYCLE_aux -> COMMA hyper_exp llamadaCYCLE_aux
Rule 120   llamadaCYCLE_aux -> empty
Rule 121   escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
Rule 122   escribe_aux -> exp escribeCycle
Rule 123   escribe_aux -> CTESTRING escribeCycle
Rule 124   escribeCycle -> COMMA escribe_aux
Rule 125   escribeCycle -> empty
Rule 126   punto_escribe -> <empty>
Rule 127   empty -> <empty>

Terminals, with rules where they appear

ARROW                : 14 21 25
ASSIGN               : 50
COLON                : 1 2 3 4
COMMA                : 15 22 26 39 119 124
CTECHAR              : 
CTEF                 : 105
CTEI                 : 21 22 25 25 26 26 104
CTESTRING            : 123
DECIMAL              : 19
DIVIDE               : 99
EN                   : 61
ENTERO               : 18
EQUAL                : 85
FUNCION              : 29
GREATER              : 80
GREATEREQ            : 82
ID                   : 1 2 3 4 14 15 21 22 25 26 29 37 39 53 106 107 108 109 116
IMPRIMIR             : 121
INICIO               : 10
LBRACE               : 10 29 58 61 64 67
LBRACKET             : 21 22 25 25 26 26 54 55 55 107 108 108
LEER                 : 57
LESS                 : 81
LESSEQ               : 83
LETRA                : 20
LPAREN               : 10 29 58 64 110 116 121
MIENTRAS             : 58
MINUS                : 91
NOTEQUAL             : 84
O                    : 74
PLUS                 : 90
PORCADA              : 61
PROGRAMA             : 1 2 3 4
RBRACE               : 10 29 58 61 64 67
RBRACKET             : 21 22 25 25 26 26 54 55 55 107 108 108
REGRESAR             : 32
RENGLON              : 21
RPAREN               : 10 29 58 64 110 116 121
SEMICOLON            : 10 14 21 25 29 32 50 57 58 61 64 116 121
SI                   : 64
SINO                 : 67
SINREGRESAR          : 35
TABLA                : 25
TIMES                : 98
VARIABLE             : 14
Y                    : 73
error                : 

Nonterminals, with rules where they appear

array                : 12
arrayCycle           : 21 22
asignar              : 42
check_op_igual       : 50
check_op_logicos     : 70
check_op_masmenos    : 87
check_op_pordiv      : 94
check_op_relacionales : 77
ciclo_for            : 44
ciclo_while          : 45
condicion            : 46
condicionCycle       : 64 65 67
decFuncCycle         : 29 30
dec_func             : 7
dec_func_cycle       : 3 4 7
dec_func_regresar    : 29
dec_func_type        : 29
dec_var              : 5
dec_var_cycle        : 2 3 5 29
empty                : 6 8 16 23 27 31 33 38 40 49 56 60 63 66 68 71 75 78 86 89 92 96 100 118 120 125
escribe              : 47
escribeCycle         : 122 123
escribe_aux          : 121 124
estatutos            : 10 29 30 58 59 61 62 64 65 67
exp                  : 54 55 55 58 61 61 64 76 77 88 122
exp_aux              : 87
factor               : 94
factor_constante     : 101
factor_expresion     : 103
factor_variable      : 102
forCycle             : 61 62
hyper_exp            : 50 107 108 108 110 117 119
hyper_exp_aux        : 69
inicio               : 1 2 3 4
leer                 : 48
llamadaCYCLE         : 116
llamadaCYCLE_aux     : 117 119
llamada_func         : 43 109
matrix               : 13
matrixCycle          : 25 26
meter_fondo_falso    : 110
parameter            : 29
parameterCycle       : 37 39
programa             : 0
punto_add_func       : 29
punto_array          : 21 22
punto_escribe        : 
punto_matrix         : 25 26
punto_parameter      : 37 39
punto_programa       : 1 2 3 4
punto_simple_var     : 14 15
push_float           : 105
push_id              : 106
push_int             : 104
push_op_exp_masmenos : 88
push_op_exp_pordiv   : 95
push_op_igual        : 50
push_op_logicos      : 70
push_op_relacionales : 77
quitar_fondo_falso   : 110
simpleVarCycle       : 14 15
simple_var           : 11
sinoCondicion        : 64
super_exp            : 69 70
super_exp_aux        : 76
term                 : 87 95
term_aux             : 94
type                 : 14 21 25 34 37 39
variable             : 32 50 57
variable_aux         : 53
whileCycle           : 58 59

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID punto_programa COLON inicio
    (2) programa -> . PROGRAMA ID punto_programa COLON dec_var_cycle inicio
    (3) programa -> . PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> . PROGRAMA ID punto_programa COLON dec_func_cycle inicio

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID punto_programa COLON inicio
    (2) programa -> PROGRAMA . ID punto_programa COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA . ID punto_programa COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA . ID punto_programa COLON dec_func_cycle inicio

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . punto_programa COLON inicio
    (2) programa -> PROGRAMA ID . punto_programa COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA ID . punto_programa COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA ID . punto_programa COLON dec_func_cycle inicio
    (9) punto_programa -> .

    COLON           reduce using rule 9 (punto_programa -> .)

    punto_programa                 shift and go to state 4

state 4

    (1) programa -> PROGRAMA ID punto_programa . COLON inicio
    (2) programa -> PROGRAMA ID punto_programa . COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA ID punto_programa . COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA ID punto_programa . COLON dec_func_cycle inicio

    COLON           shift and go to state 5


state 5

    (1) programa -> PROGRAMA ID punto_programa COLON . inicio
    (2) programa -> PROGRAMA ID punto_programa COLON . dec_var_cycle inicio
    (3) programa -> PROGRAMA ID punto_programa COLON . dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA ID punto_programa COLON . dec_func_cycle inicio
    (10) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON
    (5) dec_var_cycle -> . dec_var dec_var_cycle
    (6) dec_var_cycle -> . empty
    (7) dec_func_cycle -> . dec_func dec_func_cycle
    (8) dec_func_cycle -> . empty
    (11) dec_var -> . simple_var
    (12) dec_var -> . array
    (13) dec_var -> . matrix
    (127) empty -> .
    (29) dec_func -> . FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON
    (14) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (21) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (25) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

  ! shift/reduce conflict for INICIO resolved as shift
  ! shift/reduce conflict for FUNCION resolved as shift
    INICIO          shift and go to state 9
    FUNCION         shift and go to state 16
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

  ! INICIO          [ reduce using rule 127 (empty -> .) ]
  ! FUNCION         [ reduce using rule 127 (empty -> .) ]

    inicio                         shift and go to state 6
    dec_var_cycle                  shift and go to state 7
    dec_func_cycle                 shift and go to state 8
    dec_var                        shift and go to state 10
    empty                          shift and go to state 11
    dec_func                       shift and go to state 12
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 6

    (1) programa -> PROGRAMA ID punto_programa COLON inicio .

    $end            reduce using rule 1 (programa -> PROGRAMA ID punto_programa COLON inicio .)


state 7

    (2) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle . inicio
    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle . dec_func_cycle inicio
    (10) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON
    (7) dec_func_cycle -> . dec_func dec_func_cycle
    (8) dec_func_cycle -> . empty
    (29) dec_func -> . FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON
    (127) empty -> .

  ! shift/reduce conflict for INICIO resolved as shift
    INICIO          shift and go to state 9
    FUNCION         shift and go to state 16

  ! INICIO          [ reduce using rule 127 (empty -> .) ]

    inicio                         shift and go to state 20
    dec_func_cycle                 shift and go to state 21
    dec_func                       shift and go to state 12
    empty                          shift and go to state 22

state 8

    (4) programa -> PROGRAMA ID punto_programa COLON dec_func_cycle . inicio
    (10) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON

    INICIO          shift and go to state 9

    inicio                         shift and go to state 23

state 9

    (10) inicio -> INICIO . LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON

    LPAREN          shift and go to state 24


state 10

    (5) dec_var_cycle -> dec_var . dec_var_cycle
    (5) dec_var_cycle -> . dec_var dec_var_cycle
    (6) dec_var_cycle -> . empty
    (11) dec_var -> . simple_var
    (12) dec_var -> . array
    (13) dec_var -> . matrix
    (127) empty -> .
    (14) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (21) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (25) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    INICIO          reduce using rule 127 (empty -> .)
    FUNCION         reduce using rule 127 (empty -> .)
    ID              reduce using rule 127 (empty -> .)
    PORCADA         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    IMPRIMIR        reduce using rule 127 (empty -> .)
    LEER            reduce using rule 127 (empty -> .)
    REGRESAR        reduce using rule 127 (empty -> .)
    RBRACE          reduce using rule 127 (empty -> .)
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

    dec_var                        shift and go to state 10
    dec_var_cycle                  shift and go to state 25
    empty                          shift and go to state 26
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 11

    (6) dec_var_cycle -> empty .
    (8) dec_func_cycle -> empty .

  ! reduce/reduce conflict for INICIO resolved using rule 6 (dec_var_cycle -> empty .)
    INICIO          reduce using rule 6 (dec_var_cycle -> empty .)
    FUNCION         reduce using rule 6 (dec_var_cycle -> empty .)

  ! INICIO          [ reduce using rule 8 (dec_func_cycle -> empty .) ]


state 12

    (7) dec_func_cycle -> dec_func . dec_func_cycle
    (7) dec_func_cycle -> . dec_func dec_func_cycle
    (8) dec_func_cycle -> . empty
    (29) dec_func -> . FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON
    (127) empty -> .

    FUNCION         shift and go to state 16
    INICIO          reduce using rule 127 (empty -> .)

    dec_func                       shift and go to state 12
    dec_func_cycle                 shift and go to state 27
    empty                          shift and go to state 22

state 13

    (11) dec_var -> simple_var .

    VARIABLE        reduce using rule 11 (dec_var -> simple_var .)
    RENGLON         reduce using rule 11 (dec_var -> simple_var .)
    TABLA           reduce using rule 11 (dec_var -> simple_var .)
    INICIO          reduce using rule 11 (dec_var -> simple_var .)
    FUNCION         reduce using rule 11 (dec_var -> simple_var .)
    ID              reduce using rule 11 (dec_var -> simple_var .)
    PORCADA         reduce using rule 11 (dec_var -> simple_var .)
    MIENTRAS        reduce using rule 11 (dec_var -> simple_var .)
    SI              reduce using rule 11 (dec_var -> simple_var .)
    IMPRIMIR        reduce using rule 11 (dec_var -> simple_var .)
    LEER            reduce using rule 11 (dec_var -> simple_var .)
    REGRESAR        reduce using rule 11 (dec_var -> simple_var .)
    RBRACE          reduce using rule 11 (dec_var -> simple_var .)


state 14

    (12) dec_var -> array .

    VARIABLE        reduce using rule 12 (dec_var -> array .)
    RENGLON         reduce using rule 12 (dec_var -> array .)
    TABLA           reduce using rule 12 (dec_var -> array .)
    INICIO          reduce using rule 12 (dec_var -> array .)
    FUNCION         reduce using rule 12 (dec_var -> array .)
    ID              reduce using rule 12 (dec_var -> array .)
    PORCADA         reduce using rule 12 (dec_var -> array .)
    MIENTRAS        reduce using rule 12 (dec_var -> array .)
    SI              reduce using rule 12 (dec_var -> array .)
    IMPRIMIR        reduce using rule 12 (dec_var -> array .)
    LEER            reduce using rule 12 (dec_var -> array .)
    REGRESAR        reduce using rule 12 (dec_var -> array .)
    RBRACE          reduce using rule 12 (dec_var -> array .)


state 15

    (13) dec_var -> matrix .

    VARIABLE        reduce using rule 13 (dec_var -> matrix .)
    RENGLON         reduce using rule 13 (dec_var -> matrix .)
    TABLA           reduce using rule 13 (dec_var -> matrix .)
    INICIO          reduce using rule 13 (dec_var -> matrix .)
    FUNCION         reduce using rule 13 (dec_var -> matrix .)
    ID              reduce using rule 13 (dec_var -> matrix .)
    PORCADA         reduce using rule 13 (dec_var -> matrix .)
    MIENTRAS        reduce using rule 13 (dec_var -> matrix .)
    SI              reduce using rule 13 (dec_var -> matrix .)
    IMPRIMIR        reduce using rule 13 (dec_var -> matrix .)
    LEER            reduce using rule 13 (dec_var -> matrix .)
    REGRESAR        reduce using rule 13 (dec_var -> matrix .)
    RBRACE          reduce using rule 13 (dec_var -> matrix .)


state 16

    (29) dec_func -> FUNCION . dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON
    (34) dec_func_type -> . type
    (35) dec_func_type -> . SINREGRESAR
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    SINREGRESAR     shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    LETRA           shift and go to state 33

    dec_func_type                  shift and go to state 28
    type                           shift and go to state 29

state 17

    (14) simple_var -> VARIABLE . type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    LETRA           shift and go to state 33

    type                           shift and go to state 34

state 18

    (21) array -> RENGLON . type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    LETRA           shift and go to state 33

    type                           shift and go to state 35

state 19

    (25) matrix -> TABLA . type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    LETRA           shift and go to state 33

    type                           shift and go to state 36

state 20

    (2) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio .

    $end            reduce using rule 2 (programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio .)


state 21

    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle . inicio
    (10) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON

    INICIO          shift and go to state 9

    inicio                         shift and go to state 37

state 22

    (8) dec_func_cycle -> empty .

    INICIO          reduce using rule 8 (dec_func_cycle -> empty .)


state 23

    (4) programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio .

    $end            reduce using rule 4 (programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio .)


state 24

    (10) inicio -> INICIO LPAREN . RPAREN LBRACE estatutos RBRACE SEMICOLON

    RPAREN          shift and go to state 38


state 25

    (5) dec_var_cycle -> dec_var dec_var_cycle .

    INICIO          reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    FUNCION         reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    ID              reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    PORCADA         reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    MIENTRAS        reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    SI              reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    IMPRIMIR        reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    LEER            reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    REGRESAR        reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    RBRACE          reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)


state 26

    (6) dec_var_cycle -> empty .

    INICIO          reduce using rule 6 (dec_var_cycle -> empty .)
    FUNCION         reduce using rule 6 (dec_var_cycle -> empty .)
    ID              reduce using rule 6 (dec_var_cycle -> empty .)
    PORCADA         reduce using rule 6 (dec_var_cycle -> empty .)
    MIENTRAS        reduce using rule 6 (dec_var_cycle -> empty .)
    SI              reduce using rule 6 (dec_var_cycle -> empty .)
    IMPRIMIR        reduce using rule 6 (dec_var_cycle -> empty .)
    LEER            reduce using rule 6 (dec_var_cycle -> empty .)
    REGRESAR        reduce using rule 6 (dec_var_cycle -> empty .)
    RBRACE          reduce using rule 6 (dec_var_cycle -> empty .)


state 27

    (7) dec_func_cycle -> dec_func dec_func_cycle .

    INICIO          reduce using rule 7 (dec_func_cycle -> dec_func dec_func_cycle .)


state 28

    (29) dec_func -> FUNCION dec_func_type . ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON

    ID              shift and go to state 39


state 29

    (34) dec_func_type -> type .

    ID              reduce using rule 34 (dec_func_type -> type .)


state 30

    (35) dec_func_type -> SINREGRESAR .

    ID              reduce using rule 35 (dec_func_type -> SINREGRESAR .)


state 31

    (18) type -> ENTERO .

    ID              reduce using rule 18 (type -> ENTERO .)
    ARROW           reduce using rule 18 (type -> ENTERO .)


state 32

    (19) type -> DECIMAL .

    ID              reduce using rule 19 (type -> DECIMAL .)
    ARROW           reduce using rule 19 (type -> DECIMAL .)


state 33

    (20) type -> LETRA .

    ID              reduce using rule 20 (type -> LETRA .)
    ARROW           reduce using rule 20 (type -> LETRA .)


state 34

    (14) simple_var -> VARIABLE type . ARROW ID punto_simple_var simpleVarCycle SEMICOLON

    ARROW           shift and go to state 40


state 35

    (21) array -> RENGLON type . ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON

    ARROW           shift and go to state 41


state 36

    (25) matrix -> TABLA type . ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    ARROW           shift and go to state 42


state 37

    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio .

    $end            reduce using rule 3 (programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio .)


state 38

    (10) inicio -> INICIO LPAREN RPAREN . LBRACE estatutos RBRACE SEMICOLON

    LBRACE          shift and go to state 43


state 39

    (29) dec_func -> FUNCION dec_func_type ID . punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON
    (36) punto_add_func -> .

    LPAREN          reduce using rule 36 (punto_add_func -> .)

    punto_add_func                 shift and go to state 44

state 40

    (14) simple_var -> VARIABLE type ARROW . ID punto_simple_var simpleVarCycle SEMICOLON

    ID              shift and go to state 45


state 41

    (21) array -> RENGLON type ARROW . ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON

    ID              shift and go to state 46


state 42

    (25) matrix -> TABLA type ARROW . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    ID              shift and go to state 47


state 43

    (10) inicio -> INICIO LPAREN RPAREN LBRACE . estatutos RBRACE SEMICOLON
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (50) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (116) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (58) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (64) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (121) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (57) leer -> . LEER variable SEMICOLON
    (127) empty -> .
    (53) variable -> . ID variable_aux

    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63
    RBRACE          reduce using rule 127 (empty -> .)

    estatutos                      shift and go to state 48
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    empty                          shift and go to state 56
    variable                       shift and go to state 57

state 44

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func . LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON

    LPAREN          shift and go to state 64


state 45

    (14) simple_var -> VARIABLE type ARROW ID . punto_simple_var simpleVarCycle SEMICOLON
    (17) punto_simple_var -> .

    COMMA           reduce using rule 17 (punto_simple_var -> .)
    SEMICOLON       reduce using rule 17 (punto_simple_var -> .)

    punto_simple_var               shift and go to state 65

state 46

    (21) array -> RENGLON type ARROW ID . LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON

    LBRACKET        shift and go to state 66


state 47

    (25) matrix -> TABLA type ARROW ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    LBRACKET        shift and go to state 67


state 48

    (10) inicio -> INICIO LPAREN RPAREN LBRACE estatutos . RBRACE SEMICOLON

    RBRACE          shift and go to state 68


state 49

    (42) estatutos -> asignar .

    RBRACE          reduce using rule 42 (estatutos -> asignar .)
    ID              reduce using rule 42 (estatutos -> asignar .)
    PORCADA         reduce using rule 42 (estatutos -> asignar .)
    MIENTRAS        reduce using rule 42 (estatutos -> asignar .)
    SI              reduce using rule 42 (estatutos -> asignar .)
    IMPRIMIR        reduce using rule 42 (estatutos -> asignar .)
    LEER            reduce using rule 42 (estatutos -> asignar .)
    REGRESAR        reduce using rule 42 (estatutos -> asignar .)


state 50

    (43) estatutos -> llamada_func .

    RBRACE          reduce using rule 43 (estatutos -> llamada_func .)
    ID              reduce using rule 43 (estatutos -> llamada_func .)
    PORCADA         reduce using rule 43 (estatutos -> llamada_func .)
    MIENTRAS        reduce using rule 43 (estatutos -> llamada_func .)
    SI              reduce using rule 43 (estatutos -> llamada_func .)
    IMPRIMIR        reduce using rule 43 (estatutos -> llamada_func .)
    LEER            reduce using rule 43 (estatutos -> llamada_func .)
    REGRESAR        reduce using rule 43 (estatutos -> llamada_func .)


state 51

    (44) estatutos -> ciclo_for .

    RBRACE          reduce using rule 44 (estatutos -> ciclo_for .)
    ID              reduce using rule 44 (estatutos -> ciclo_for .)
    PORCADA         reduce using rule 44 (estatutos -> ciclo_for .)
    MIENTRAS        reduce using rule 44 (estatutos -> ciclo_for .)
    SI              reduce using rule 44 (estatutos -> ciclo_for .)
    IMPRIMIR        reduce using rule 44 (estatutos -> ciclo_for .)
    LEER            reduce using rule 44 (estatutos -> ciclo_for .)
    REGRESAR        reduce using rule 44 (estatutos -> ciclo_for .)


state 52

    (45) estatutos -> ciclo_while .

    RBRACE          reduce using rule 45 (estatutos -> ciclo_while .)
    ID              reduce using rule 45 (estatutos -> ciclo_while .)
    PORCADA         reduce using rule 45 (estatutos -> ciclo_while .)
    MIENTRAS        reduce using rule 45 (estatutos -> ciclo_while .)
    SI              reduce using rule 45 (estatutos -> ciclo_while .)
    IMPRIMIR        reduce using rule 45 (estatutos -> ciclo_while .)
    LEER            reduce using rule 45 (estatutos -> ciclo_while .)
    REGRESAR        reduce using rule 45 (estatutos -> ciclo_while .)


state 53

    (46) estatutos -> condicion .

    RBRACE          reduce using rule 46 (estatutos -> condicion .)
    ID              reduce using rule 46 (estatutos -> condicion .)
    PORCADA         reduce using rule 46 (estatutos -> condicion .)
    MIENTRAS        reduce using rule 46 (estatutos -> condicion .)
    SI              reduce using rule 46 (estatutos -> condicion .)
    IMPRIMIR        reduce using rule 46 (estatutos -> condicion .)
    LEER            reduce using rule 46 (estatutos -> condicion .)
    REGRESAR        reduce using rule 46 (estatutos -> condicion .)


state 54

    (47) estatutos -> escribe .

    RBRACE          reduce using rule 47 (estatutos -> escribe .)
    ID              reduce using rule 47 (estatutos -> escribe .)
    PORCADA         reduce using rule 47 (estatutos -> escribe .)
    MIENTRAS        reduce using rule 47 (estatutos -> escribe .)
    SI              reduce using rule 47 (estatutos -> escribe .)
    IMPRIMIR        reduce using rule 47 (estatutos -> escribe .)
    LEER            reduce using rule 47 (estatutos -> escribe .)
    REGRESAR        reduce using rule 47 (estatutos -> escribe .)


state 55

    (48) estatutos -> leer .

    RBRACE          reduce using rule 48 (estatutos -> leer .)
    ID              reduce using rule 48 (estatutos -> leer .)
    PORCADA         reduce using rule 48 (estatutos -> leer .)
    MIENTRAS        reduce using rule 48 (estatutos -> leer .)
    SI              reduce using rule 48 (estatutos -> leer .)
    IMPRIMIR        reduce using rule 48 (estatutos -> leer .)
    LEER            reduce using rule 48 (estatutos -> leer .)
    REGRESAR        reduce using rule 48 (estatutos -> leer .)


state 56

    (49) estatutos -> empty .

    RBRACE          reduce using rule 49 (estatutos -> empty .)
    ID              reduce using rule 49 (estatutos -> empty .)
    PORCADA         reduce using rule 49 (estatutos -> empty .)
    MIENTRAS        reduce using rule 49 (estatutos -> empty .)
    SI              reduce using rule 49 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 49 (estatutos -> empty .)
    LEER            reduce using rule 49 (estatutos -> empty .)
    REGRESAR        reduce using rule 49 (estatutos -> empty .)


state 57

    (50) asignar -> variable . ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON

    ASSIGN          shift and go to state 69


state 58

    (116) llamada_func -> ID . LPAREN llamadaCYCLE RPAREN SEMICOLON
    (53) variable -> ID . variable_aux
    (54) variable_aux -> . LBRACKET exp RBRACKET
    (55) variable_aux -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (56) variable_aux -> . empty
    (127) empty -> .

    LPAREN          shift and go to state 70
    LBRACKET        shift and go to state 72
    ASSIGN          reduce using rule 127 (empty -> .)

    variable_aux                   shift and go to state 71
    empty                          shift and go to state 73

state 59

    (61) ciclo_for -> PORCADA . exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (87) exp -> . term check_op_masmenos exp_aux
    (94) term -> . factor check_op_pordiv term_aux
    (101) factor -> . factor_constante
    (102) factor -> . factor_variable
    (103) factor -> . factor_expresion
    (104) factor_constante -> . CTEI push_int
    (105) factor_constante -> . CTEF push_float
    (106) factor_variable -> . ID push_id
    (107) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> . ID llamada_func
    (110) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 74
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 60

    (58) ciclo_while -> MIENTRAS . LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON

    LPAREN          shift and go to state 84


state 61

    (64) condicion -> SI . LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON

    LPAREN          shift and go to state 85


state 62

    (121) escribe -> IMPRIMIR . LPAREN escribe_aux RPAREN SEMICOLON

    LPAREN          shift and go to state 86


state 63

    (57) leer -> LEER . variable SEMICOLON
    (53) variable -> . ID variable_aux

    ID              shift and go to state 88

    variable                       shift and go to state 87

state 64

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN . parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON
    (37) parameter -> . type ID punto_parameter parameterCycle
    (38) parameter -> . empty
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA
    (127) empty -> .

    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    LETRA           shift and go to state 33
    RPAREN          reduce using rule 127 (empty -> .)

    parameter                      shift and go to state 89
    type                           shift and go to state 90
    empty                          shift and go to state 91

state 65

    (14) simple_var -> VARIABLE type ARROW ID punto_simple_var . simpleVarCycle SEMICOLON
    (15) simpleVarCycle -> . COMMA ID punto_simple_var simpleVarCycle
    (16) simpleVarCycle -> . empty
    (127) empty -> .

    COMMA           shift and go to state 93
    SEMICOLON       reduce using rule 127 (empty -> .)

    simpleVarCycle                 shift and go to state 92
    empty                          shift and go to state 94

state 66

    (21) array -> RENGLON type ARROW ID LBRACKET . CTEI RBRACKET punto_array arrayCycle SEMICOLON

    CTEI            shift and go to state 95


state 67

    (25) matrix -> TABLA type ARROW ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    CTEI            shift and go to state 96


state 68

    (10) inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 97


state 69

    (50) asignar -> variable ASSIGN . push_op_igual hyper_exp check_op_igual SEMICOLON
    (51) push_op_igual -> .

    CTEI            reduce using rule 51 (push_op_igual -> .)
    CTEF            reduce using rule 51 (push_op_igual -> .)
    ID              reduce using rule 51 (push_op_igual -> .)
    LPAREN          reduce using rule 51 (push_op_igual -> .)

    push_op_igual                  shift and go to state 98

state 70

    (116) llamada_func -> ID LPAREN . llamadaCYCLE RPAREN SEMICOLON
    (117) llamadaCYCLE -> . hyper_exp llamadaCYCLE_aux
    (118) llamadaCYCLE -> . empty
    (69) hyper_exp -> . super_exp hyper_exp_aux
    (127) empty -> .
    (76) super_exp -> . exp super_exp_aux
    (87) exp -> . term check_op_masmenos exp_aux
    (94) term -> . factor check_op_pordiv term_aux
    (101) factor -> . factor_constante
    (102) factor -> . factor_variable
    (103) factor -> . factor_expresion
    (104) factor_constante -> . CTEI push_int
    (105) factor_constante -> . CTEF push_float
    (106) factor_variable -> . ID push_id
    (107) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> . ID llamada_func
    (110) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    RPAREN          reduce using rule 127 (empty -> .)
    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    llamadaCYCLE                   shift and go to state 99
    hyper_exp                      shift and go to state 100
    empty                          shift and go to state 101
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 71

    (53) variable -> ID variable_aux .

    ASSIGN          reduce using rule 53 (variable -> ID variable_aux .)
    SEMICOLON       reduce using rule 53 (variable -> ID variable_aux .)


state 72

    (54) variable_aux -> LBRACKET . exp RBRACKET
    (55) variable_aux -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (87) exp -> . term check_op_masmenos exp_aux
    (94) term -> . factor check_op_pordiv term_aux
    (101) factor -> . factor_constante
    (102) factor -> . factor_variable
    (103) factor -> . factor_expresion
    (104) factor_constante -> . CTEI push_int
    (105) factor_constante -> . CTEF push_float
    (106) factor_variable -> . ID push_id
    (107) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> . ID llamada_func
    (110) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 104
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 73

    (56) variable_aux -> empty .

    ASSIGN          reduce using rule 56 (variable_aux -> empty .)
    SEMICOLON       reduce using rule 56 (variable_aux -> empty .)


state 74

    (61) ciclo_for -> PORCADA exp . EN exp LBRACE estatutos forCycle RBRACE SEMICOLON

    EN              shift and go to state 105


state 75

    (87) exp -> term . check_op_masmenos exp_aux
    (93) check_op_masmenos -> .

    PLUS            reduce using rule 93 (check_op_masmenos -> .)
    MINUS           reduce using rule 93 (check_op_masmenos -> .)
    CTEI            reduce using rule 93 (check_op_masmenos -> .)
    CTEF            reduce using rule 93 (check_op_masmenos -> .)
    ID              reduce using rule 93 (check_op_masmenos -> .)
    LPAREN          reduce using rule 93 (check_op_masmenos -> .)
    EN              reduce using rule 93 (check_op_masmenos -> .)
    GREATER         reduce using rule 93 (check_op_masmenos -> .)
    LESS            reduce using rule 93 (check_op_masmenos -> .)
    GREATEREQ       reduce using rule 93 (check_op_masmenos -> .)
    LESSEQ          reduce using rule 93 (check_op_masmenos -> .)
    NOTEQUAL        reduce using rule 93 (check_op_masmenos -> .)
    EQUAL           reduce using rule 93 (check_op_masmenos -> .)
    Y               reduce using rule 93 (check_op_masmenos -> .)
    O               reduce using rule 93 (check_op_masmenos -> .)
    COMMA           reduce using rule 93 (check_op_masmenos -> .)
    RPAREN          reduce using rule 93 (check_op_masmenos -> .)
    RBRACKET        reduce using rule 93 (check_op_masmenos -> .)
    SEMICOLON       reduce using rule 93 (check_op_masmenos -> .)
    LBRACE          reduce using rule 93 (check_op_masmenos -> .)

    check_op_masmenos              shift and go to state 106

state 76

    (94) term -> factor . check_op_pordiv term_aux
    (97) check_op_pordiv -> .

    TIMES           reduce using rule 97 (check_op_pordiv -> .)
    DIVIDE          reduce using rule 97 (check_op_pordiv -> .)
    CTEI            reduce using rule 97 (check_op_pordiv -> .)
    CTEF            reduce using rule 97 (check_op_pordiv -> .)
    ID              reduce using rule 97 (check_op_pordiv -> .)
    LPAREN          reduce using rule 97 (check_op_pordiv -> .)
    PLUS            reduce using rule 97 (check_op_pordiv -> .)
    MINUS           reduce using rule 97 (check_op_pordiv -> .)
    EN              reduce using rule 97 (check_op_pordiv -> .)
    GREATER         reduce using rule 97 (check_op_pordiv -> .)
    LESS            reduce using rule 97 (check_op_pordiv -> .)
    GREATEREQ       reduce using rule 97 (check_op_pordiv -> .)
    LESSEQ          reduce using rule 97 (check_op_pordiv -> .)
    NOTEQUAL        reduce using rule 97 (check_op_pordiv -> .)
    EQUAL           reduce using rule 97 (check_op_pordiv -> .)
    Y               reduce using rule 97 (check_op_pordiv -> .)
    O               reduce using rule 97 (check_op_pordiv -> .)
    COMMA           reduce using rule 97 (check_op_pordiv -> .)
    RPAREN          reduce using rule 97 (check_op_pordiv -> .)
    RBRACKET        reduce using rule 97 (check_op_pordiv -> .)
    SEMICOLON       reduce using rule 97 (check_op_pordiv -> .)
    LBRACE          reduce using rule 97 (check_op_pordiv -> .)

    check_op_pordiv                shift and go to state 107

state 77

    (101) factor -> factor_constante .

    TIMES           reduce using rule 101 (factor -> factor_constante .)
    DIVIDE          reduce using rule 101 (factor -> factor_constante .)
    CTEI            reduce using rule 101 (factor -> factor_constante .)
    CTEF            reduce using rule 101 (factor -> factor_constante .)
    ID              reduce using rule 101 (factor -> factor_constante .)
    LPAREN          reduce using rule 101 (factor -> factor_constante .)
    PLUS            reduce using rule 101 (factor -> factor_constante .)
    MINUS           reduce using rule 101 (factor -> factor_constante .)
    EN              reduce using rule 101 (factor -> factor_constante .)
    GREATER         reduce using rule 101 (factor -> factor_constante .)
    LESS            reduce using rule 101 (factor -> factor_constante .)
    GREATEREQ       reduce using rule 101 (factor -> factor_constante .)
    LESSEQ          reduce using rule 101 (factor -> factor_constante .)
    NOTEQUAL        reduce using rule 101 (factor -> factor_constante .)
    EQUAL           reduce using rule 101 (factor -> factor_constante .)
    Y               reduce using rule 101 (factor -> factor_constante .)
    O               reduce using rule 101 (factor -> factor_constante .)
    COMMA           reduce using rule 101 (factor -> factor_constante .)
    RPAREN          reduce using rule 101 (factor -> factor_constante .)
    RBRACKET        reduce using rule 101 (factor -> factor_constante .)
    SEMICOLON       reduce using rule 101 (factor -> factor_constante .)
    LBRACE          reduce using rule 101 (factor -> factor_constante .)


state 78

    (102) factor -> factor_variable .

    TIMES           reduce using rule 102 (factor -> factor_variable .)
    DIVIDE          reduce using rule 102 (factor -> factor_variable .)
    CTEI            reduce using rule 102 (factor -> factor_variable .)
    CTEF            reduce using rule 102 (factor -> factor_variable .)
    ID              reduce using rule 102 (factor -> factor_variable .)
    LPAREN          reduce using rule 102 (factor -> factor_variable .)
    PLUS            reduce using rule 102 (factor -> factor_variable .)
    MINUS           reduce using rule 102 (factor -> factor_variable .)
    EN              reduce using rule 102 (factor -> factor_variable .)
    GREATER         reduce using rule 102 (factor -> factor_variable .)
    LESS            reduce using rule 102 (factor -> factor_variable .)
    GREATEREQ       reduce using rule 102 (factor -> factor_variable .)
    LESSEQ          reduce using rule 102 (factor -> factor_variable .)
    NOTEQUAL        reduce using rule 102 (factor -> factor_variable .)
    EQUAL           reduce using rule 102 (factor -> factor_variable .)
    Y               reduce using rule 102 (factor -> factor_variable .)
    O               reduce using rule 102 (factor -> factor_variable .)
    COMMA           reduce using rule 102 (factor -> factor_variable .)
    RPAREN          reduce using rule 102 (factor -> factor_variable .)
    RBRACKET        reduce using rule 102 (factor -> factor_variable .)
    SEMICOLON       reduce using rule 102 (factor -> factor_variable .)
    LBRACE          reduce using rule 102 (factor -> factor_variable .)


state 79

    (103) factor -> factor_expresion .

    TIMES           reduce using rule 103 (factor -> factor_expresion .)
    DIVIDE          reduce using rule 103 (factor -> factor_expresion .)
    CTEI            reduce using rule 103 (factor -> factor_expresion .)
    CTEF            reduce using rule 103 (factor -> factor_expresion .)
    ID              reduce using rule 103 (factor -> factor_expresion .)
    LPAREN          reduce using rule 103 (factor -> factor_expresion .)
    PLUS            reduce using rule 103 (factor -> factor_expresion .)
    MINUS           reduce using rule 103 (factor -> factor_expresion .)
    EN              reduce using rule 103 (factor -> factor_expresion .)
    GREATER         reduce using rule 103 (factor -> factor_expresion .)
    LESS            reduce using rule 103 (factor -> factor_expresion .)
    GREATEREQ       reduce using rule 103 (factor -> factor_expresion .)
    LESSEQ          reduce using rule 103 (factor -> factor_expresion .)
    NOTEQUAL        reduce using rule 103 (factor -> factor_expresion .)
    EQUAL           reduce using rule 103 (factor -> factor_expresion .)
    Y               reduce using rule 103 (factor -> factor_expresion .)
    O               reduce using rule 103 (factor -> factor_expresion .)
    COMMA           reduce using rule 103 (factor -> factor_expresion .)
    RPAREN          reduce using rule 103 (factor -> factor_expresion .)
    RBRACKET        reduce using rule 103 (factor -> factor_expresion .)
    SEMICOLON       reduce using rule 103 (factor -> factor_expresion .)
    LBRACE          reduce using rule 103 (factor -> factor_expresion .)


state 80

    (104) factor_constante -> CTEI . push_int
    (113) push_int -> .

    TIMES           reduce using rule 113 (push_int -> .)
    DIVIDE          reduce using rule 113 (push_int -> .)
    CTEI            reduce using rule 113 (push_int -> .)
    CTEF            reduce using rule 113 (push_int -> .)
    ID              reduce using rule 113 (push_int -> .)
    LPAREN          reduce using rule 113 (push_int -> .)
    PLUS            reduce using rule 113 (push_int -> .)
    MINUS           reduce using rule 113 (push_int -> .)
    EN              reduce using rule 113 (push_int -> .)
    GREATER         reduce using rule 113 (push_int -> .)
    LESS            reduce using rule 113 (push_int -> .)
    GREATEREQ       reduce using rule 113 (push_int -> .)
    LESSEQ          reduce using rule 113 (push_int -> .)
    NOTEQUAL        reduce using rule 113 (push_int -> .)
    EQUAL           reduce using rule 113 (push_int -> .)
    Y               reduce using rule 113 (push_int -> .)
    O               reduce using rule 113 (push_int -> .)
    COMMA           reduce using rule 113 (push_int -> .)
    RPAREN          reduce using rule 113 (push_int -> .)
    RBRACKET        reduce using rule 113 (push_int -> .)
    SEMICOLON       reduce using rule 113 (push_int -> .)
    LBRACE          reduce using rule 113 (push_int -> .)

    push_int                       shift and go to state 108

state 81

    (105) factor_constante -> CTEF . push_float
    (114) push_float -> .

    TIMES           reduce using rule 114 (push_float -> .)
    DIVIDE          reduce using rule 114 (push_float -> .)
    CTEI            reduce using rule 114 (push_float -> .)
    CTEF            reduce using rule 114 (push_float -> .)
    ID              reduce using rule 114 (push_float -> .)
    LPAREN          reduce using rule 114 (push_float -> .)
    PLUS            reduce using rule 114 (push_float -> .)
    MINUS           reduce using rule 114 (push_float -> .)
    EN              reduce using rule 114 (push_float -> .)
    GREATER         reduce using rule 114 (push_float -> .)
    LESS            reduce using rule 114 (push_float -> .)
    GREATEREQ       reduce using rule 114 (push_float -> .)
    LESSEQ          reduce using rule 114 (push_float -> .)
    NOTEQUAL        reduce using rule 114 (push_float -> .)
    EQUAL           reduce using rule 114 (push_float -> .)
    Y               reduce using rule 114 (push_float -> .)
    O               reduce using rule 114 (push_float -> .)
    COMMA           reduce using rule 114 (push_float -> .)
    RPAREN          reduce using rule 114 (push_float -> .)
    RBRACKET        reduce using rule 114 (push_float -> .)
    SEMICOLON       reduce using rule 114 (push_float -> .)
    LBRACE          reduce using rule 114 (push_float -> .)

    push_float                     shift and go to state 109

state 82

    (106) factor_variable -> ID . push_id
    (107) factor_variable -> ID . LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> ID . LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> ID . llamada_func
    (115) push_id -> .
    (116) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON

  ! shift/reduce conflict for ID resolved as shift
    LBRACKET        shift and go to state 112
    TIMES           reduce using rule 115 (push_id -> .)
    DIVIDE          reduce using rule 115 (push_id -> .)
    CTEI            reduce using rule 115 (push_id -> .)
    CTEF            reduce using rule 115 (push_id -> .)
    LPAREN          reduce using rule 115 (push_id -> .)
    PLUS            reduce using rule 115 (push_id -> .)
    MINUS           reduce using rule 115 (push_id -> .)
    EN              reduce using rule 115 (push_id -> .)
    GREATER         reduce using rule 115 (push_id -> .)
    LESS            reduce using rule 115 (push_id -> .)
    GREATEREQ       reduce using rule 115 (push_id -> .)
    LESSEQ          reduce using rule 115 (push_id -> .)
    NOTEQUAL        reduce using rule 115 (push_id -> .)
    EQUAL           reduce using rule 115 (push_id -> .)
    Y               reduce using rule 115 (push_id -> .)
    O               reduce using rule 115 (push_id -> .)
    COMMA           reduce using rule 115 (push_id -> .)
    RPAREN          reduce using rule 115 (push_id -> .)
    RBRACKET        reduce using rule 115 (push_id -> .)
    SEMICOLON       reduce using rule 115 (push_id -> .)
    LBRACE          reduce using rule 115 (push_id -> .)
    ID              shift and go to state 110

  ! ID              [ reduce using rule 115 (push_id -> .) ]

    push_id                        shift and go to state 111
    llamada_func                   shift and go to state 113

state 83

    (110) factor_expresion -> LPAREN . meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (111) meter_fondo_falso -> .

    CTEI            reduce using rule 111 (meter_fondo_falso -> .)
    CTEF            reduce using rule 111 (meter_fondo_falso -> .)
    ID              reduce using rule 111 (meter_fondo_falso -> .)
    LPAREN          reduce using rule 111 (meter_fondo_falso -> .)

    meter_fondo_falso              shift and go to state 114

state 84

    (58) ciclo_while -> MIENTRAS LPAREN . exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (87) exp -> . term check_op_masmenos exp_aux
    (94) term -> . factor check_op_pordiv term_aux
    (101) factor -> . factor_constante
    (102) factor -> . factor_variable
    (103) factor -> . factor_expresion
    (104) factor_constante -> . CTEI push_int
    (105) factor_constante -> . CTEF push_float
    (106) factor_variable -> . ID push_id
    (107) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> . ID llamada_func
    (110) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 115
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 85

    (64) condicion -> SI LPAREN . exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (87) exp -> . term check_op_masmenos exp_aux
    (94) term -> . factor check_op_pordiv term_aux
    (101) factor -> . factor_constante
    (102) factor -> . factor_variable
    (103) factor -> . factor_expresion
    (104) factor_constante -> . CTEI push_int
    (105) factor_constante -> . CTEF push_float
    (106) factor_variable -> . ID push_id
    (107) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> . ID llamada_func
    (110) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 116
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 86

    (121) escribe -> IMPRIMIR LPAREN . escribe_aux RPAREN SEMICOLON
    (122) escribe_aux -> . exp escribeCycle
    (123) escribe_aux -> . CTESTRING escribeCycle
    (87) exp -> . term check_op_masmenos exp_aux
    (94) term -> . factor check_op_pordiv term_aux
    (101) factor -> . factor_constante
    (102) factor -> . factor_variable
    (103) factor -> . factor_expresion
    (104) factor_constante -> . CTEI push_int
    (105) factor_constante -> . CTEF push_float
    (106) factor_variable -> . ID push_id
    (107) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> . ID llamada_func
    (110) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTESTRING       shift and go to state 119
    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    escribe_aux                    shift and go to state 117
    exp                            shift and go to state 118
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 87

    (57) leer -> LEER variable . SEMICOLON

    SEMICOLON       shift and go to state 120


state 88

    (53) variable -> ID . variable_aux
    (54) variable_aux -> . LBRACKET exp RBRACKET
    (55) variable_aux -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (56) variable_aux -> . empty
    (127) empty -> .

    LBRACKET        shift and go to state 72
    SEMICOLON       reduce using rule 127 (empty -> .)

    variable_aux                   shift and go to state 71
    empty                          shift and go to state 73

state 89

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter . RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON

    RPAREN          shift and go to state 121


state 90

    (37) parameter -> type . ID punto_parameter parameterCycle

    ID              shift and go to state 122


state 91

    (38) parameter -> empty .

    RPAREN          reduce using rule 38 (parameter -> empty .)


state 92

    (14) simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle . SEMICOLON

    SEMICOLON       shift and go to state 123


state 93

    (15) simpleVarCycle -> COMMA . ID punto_simple_var simpleVarCycle

    ID              shift and go to state 124


state 94

    (16) simpleVarCycle -> empty .

    SEMICOLON       reduce using rule 16 (simpleVarCycle -> empty .)


state 95

    (21) array -> RENGLON type ARROW ID LBRACKET CTEI . RBRACKET punto_array arrayCycle SEMICOLON

    RBRACKET        shift and go to state 125


state 96

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    RBRACKET        shift and go to state 126


state 97

    (10) inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON .

    $end            reduce using rule 10 (inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON .)


state 98

    (50) asignar -> variable ASSIGN push_op_igual . hyper_exp check_op_igual SEMICOLON
    (69) hyper_exp -> . super_exp hyper_exp_aux
    (76) super_exp -> . exp super_exp_aux
    (87) exp -> . term check_op_masmenos exp_aux
    (94) term -> . factor check_op_pordiv term_aux
    (101) factor -> . factor_constante
    (102) factor -> . factor_variable
    (103) factor -> . factor_expresion
    (104) factor_constante -> . CTEI push_int
    (105) factor_constante -> . CTEF push_float
    (106) factor_variable -> . ID push_id
    (107) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> . ID llamada_func
    (110) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    hyper_exp                      shift and go to state 127
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 99

    (116) llamada_func -> ID LPAREN llamadaCYCLE . RPAREN SEMICOLON

    RPAREN          shift and go to state 128


state 100

    (117) llamadaCYCLE -> hyper_exp . llamadaCYCLE_aux
    (119) llamadaCYCLE_aux -> . COMMA hyper_exp llamadaCYCLE_aux
    (120) llamadaCYCLE_aux -> . empty
    (127) empty -> .

    COMMA           shift and go to state 130
    RPAREN          reduce using rule 127 (empty -> .)

    llamadaCYCLE_aux               shift and go to state 129
    empty                          shift and go to state 131

state 101

    (118) llamadaCYCLE -> empty .

    RPAREN          reduce using rule 118 (llamadaCYCLE -> empty .)


state 102

    (69) hyper_exp -> super_exp . hyper_exp_aux
    (70) hyper_exp_aux -> . push_op_logicos super_exp check_op_logicos
    (71) hyper_exp_aux -> . empty
    (73) push_op_logicos -> . Y
    (74) push_op_logicos -> . O
    (75) push_op_logicos -> . empty
    (127) empty -> .

    Y               shift and go to state 135
    O               shift and go to state 136
    COMMA           reduce using rule 127 (empty -> .)
    RPAREN          reduce using rule 127 (empty -> .)
    SEMICOLON       reduce using rule 127 (empty -> .)
    RBRACKET        reduce using rule 127 (empty -> .)
    CTEI            reduce using rule 127 (empty -> .)
    CTEF            reduce using rule 127 (empty -> .)
    ID              reduce using rule 127 (empty -> .)
    LPAREN          reduce using rule 127 (empty -> .)

    hyper_exp_aux                  shift and go to state 132
    push_op_logicos                shift and go to state 133
    empty                          shift and go to state 134

state 103

    (76) super_exp -> exp . super_exp_aux
    (77) super_exp_aux -> . push_op_relacionales exp check_op_relacionales
    (78) super_exp_aux -> . empty
    (80) push_op_relacionales -> . GREATER
    (81) push_op_relacionales -> . LESS
    (82) push_op_relacionales -> . GREATEREQ
    (83) push_op_relacionales -> . LESSEQ
    (84) push_op_relacionales -> . NOTEQUAL
    (85) push_op_relacionales -> . EQUAL
    (86) push_op_relacionales -> . empty
    (127) empty -> .

    GREATER         shift and go to state 140
    LESS            shift and go to state 141
    GREATEREQ       shift and go to state 142
    LESSEQ          shift and go to state 143
    NOTEQUAL        shift and go to state 144
    EQUAL           shift and go to state 145
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    CTEI            reduce using rule 127 (empty -> .)
    CTEF            reduce using rule 127 (empty -> .)
    ID              reduce using rule 127 (empty -> .)
    LPAREN          reduce using rule 127 (empty -> .)
    COMMA           reduce using rule 127 (empty -> .)
    RPAREN          reduce using rule 127 (empty -> .)
    SEMICOLON       reduce using rule 127 (empty -> .)
    RBRACKET        reduce using rule 127 (empty -> .)

    super_exp_aux                  shift and go to state 137
    push_op_relacionales           shift and go to state 138
    empty                          shift and go to state 139

state 104

    (54) variable_aux -> LBRACKET exp . RBRACKET
    (55) variable_aux -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET

    RBRACKET        shift and go to state 146


state 105

    (61) ciclo_for -> PORCADA exp EN . exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (87) exp -> . term check_op_masmenos exp_aux
    (94) term -> . factor check_op_pordiv term_aux
    (101) factor -> . factor_constante
    (102) factor -> . factor_variable
    (103) factor -> . factor_expresion
    (104) factor_constante -> . CTEI push_int
    (105) factor_constante -> . CTEF push_float
    (106) factor_variable -> . ID push_id
    (107) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> . ID llamada_func
    (110) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 147
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 106

    (87) exp -> term check_op_masmenos . exp_aux
    (88) exp_aux -> . push_op_exp_masmenos exp
    (89) exp_aux -> . empty
    (90) push_op_exp_masmenos -> . PLUS
    (91) push_op_exp_masmenos -> . MINUS
    (92) push_op_exp_masmenos -> . empty
    (127) empty -> .

    PLUS            shift and go to state 151
    MINUS           shift and go to state 152
    EN              reduce using rule 127 (empty -> .)
    GREATER         reduce using rule 127 (empty -> .)
    LESS            reduce using rule 127 (empty -> .)
    GREATEREQ       reduce using rule 127 (empty -> .)
    LESSEQ          reduce using rule 127 (empty -> .)
    NOTEQUAL        reduce using rule 127 (empty -> .)
    EQUAL           reduce using rule 127 (empty -> .)
    CTEI            reduce using rule 127 (empty -> .)
    CTEF            reduce using rule 127 (empty -> .)
    ID              reduce using rule 127 (empty -> .)
    LPAREN          reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    COMMA           reduce using rule 127 (empty -> .)
    RPAREN          reduce using rule 127 (empty -> .)
    RBRACKET        reduce using rule 127 (empty -> .)
    SEMICOLON       reduce using rule 127 (empty -> .)
    LBRACE          reduce using rule 127 (empty -> .)

    exp_aux                        shift and go to state 148
    push_op_exp_masmenos           shift and go to state 149
    empty                          shift and go to state 150

state 107

    (94) term -> factor check_op_pordiv . term_aux
    (95) term_aux -> . push_op_exp_pordiv term
    (96) term_aux -> . empty
    (98) push_op_exp_pordiv -> . TIMES
    (99) push_op_exp_pordiv -> . DIVIDE
    (100) push_op_exp_pordiv -> . empty
    (127) empty -> .

    TIMES           shift and go to state 156
    DIVIDE          shift and go to state 157
    PLUS            reduce using rule 127 (empty -> .)
    MINUS           reduce using rule 127 (empty -> .)
    CTEI            reduce using rule 127 (empty -> .)
    CTEF            reduce using rule 127 (empty -> .)
    ID              reduce using rule 127 (empty -> .)
    LPAREN          reduce using rule 127 (empty -> .)
    EN              reduce using rule 127 (empty -> .)
    GREATER         reduce using rule 127 (empty -> .)
    LESS            reduce using rule 127 (empty -> .)
    GREATEREQ       reduce using rule 127 (empty -> .)
    LESSEQ          reduce using rule 127 (empty -> .)
    NOTEQUAL        reduce using rule 127 (empty -> .)
    EQUAL           reduce using rule 127 (empty -> .)
    Y               reduce using rule 127 (empty -> .)
    O               reduce using rule 127 (empty -> .)
    COMMA           reduce using rule 127 (empty -> .)
    RPAREN          reduce using rule 127 (empty -> .)
    RBRACKET        reduce using rule 127 (empty -> .)
    SEMICOLON       reduce using rule 127 (empty -> .)
    LBRACE          reduce using rule 127 (empty -> .)

    term_aux                       shift and go to state 153
    push_op_exp_pordiv             shift and go to state 154
    empty                          shift and go to state 155

state 108

    (104) factor_constante -> CTEI push_int .

    TIMES           reduce using rule 104 (factor_constante -> CTEI push_int .)
    DIVIDE          reduce using rule 104 (factor_constante -> CTEI push_int .)
    CTEI            reduce using rule 104 (factor_constante -> CTEI push_int .)
    CTEF            reduce using rule 104 (factor_constante -> CTEI push_int .)
    ID              reduce using rule 104 (factor_constante -> CTEI push_int .)
    LPAREN          reduce using rule 104 (factor_constante -> CTEI push_int .)
    PLUS            reduce using rule 104 (factor_constante -> CTEI push_int .)
    MINUS           reduce using rule 104 (factor_constante -> CTEI push_int .)
    EN              reduce using rule 104 (factor_constante -> CTEI push_int .)
    GREATER         reduce using rule 104 (factor_constante -> CTEI push_int .)
    LESS            reduce using rule 104 (factor_constante -> CTEI push_int .)
    GREATEREQ       reduce using rule 104 (factor_constante -> CTEI push_int .)
    LESSEQ          reduce using rule 104 (factor_constante -> CTEI push_int .)
    NOTEQUAL        reduce using rule 104 (factor_constante -> CTEI push_int .)
    EQUAL           reduce using rule 104 (factor_constante -> CTEI push_int .)
    Y               reduce using rule 104 (factor_constante -> CTEI push_int .)
    O               reduce using rule 104 (factor_constante -> CTEI push_int .)
    COMMA           reduce using rule 104 (factor_constante -> CTEI push_int .)
    RPAREN          reduce using rule 104 (factor_constante -> CTEI push_int .)
    RBRACKET        reduce using rule 104 (factor_constante -> CTEI push_int .)
    SEMICOLON       reduce using rule 104 (factor_constante -> CTEI push_int .)
    LBRACE          reduce using rule 104 (factor_constante -> CTEI push_int .)


state 109

    (105) factor_constante -> CTEF push_float .

    TIMES           reduce using rule 105 (factor_constante -> CTEF push_float .)
    DIVIDE          reduce using rule 105 (factor_constante -> CTEF push_float .)
    CTEI            reduce using rule 105 (factor_constante -> CTEF push_float .)
    CTEF            reduce using rule 105 (factor_constante -> CTEF push_float .)
    ID              reduce using rule 105 (factor_constante -> CTEF push_float .)
    LPAREN          reduce using rule 105 (factor_constante -> CTEF push_float .)
    PLUS            reduce using rule 105 (factor_constante -> CTEF push_float .)
    MINUS           reduce using rule 105 (factor_constante -> CTEF push_float .)
    EN              reduce using rule 105 (factor_constante -> CTEF push_float .)
    GREATER         reduce using rule 105 (factor_constante -> CTEF push_float .)
    LESS            reduce using rule 105 (factor_constante -> CTEF push_float .)
    GREATEREQ       reduce using rule 105 (factor_constante -> CTEF push_float .)
    LESSEQ          reduce using rule 105 (factor_constante -> CTEF push_float .)
    NOTEQUAL        reduce using rule 105 (factor_constante -> CTEF push_float .)
    EQUAL           reduce using rule 105 (factor_constante -> CTEF push_float .)
    Y               reduce using rule 105 (factor_constante -> CTEF push_float .)
    O               reduce using rule 105 (factor_constante -> CTEF push_float .)
    COMMA           reduce using rule 105 (factor_constante -> CTEF push_float .)
    RPAREN          reduce using rule 105 (factor_constante -> CTEF push_float .)
    RBRACKET        reduce using rule 105 (factor_constante -> CTEF push_float .)
    SEMICOLON       reduce using rule 105 (factor_constante -> CTEF push_float .)
    LBRACE          reduce using rule 105 (factor_constante -> CTEF push_float .)


state 110

    (116) llamada_func -> ID . LPAREN llamadaCYCLE RPAREN SEMICOLON

    LPAREN          shift and go to state 70


state 111

    (106) factor_variable -> ID push_id .

    TIMES           reduce using rule 106 (factor_variable -> ID push_id .)
    DIVIDE          reduce using rule 106 (factor_variable -> ID push_id .)
    CTEI            reduce using rule 106 (factor_variable -> ID push_id .)
    CTEF            reduce using rule 106 (factor_variable -> ID push_id .)
    ID              reduce using rule 106 (factor_variable -> ID push_id .)
    LPAREN          reduce using rule 106 (factor_variable -> ID push_id .)
    PLUS            reduce using rule 106 (factor_variable -> ID push_id .)
    MINUS           reduce using rule 106 (factor_variable -> ID push_id .)
    EN              reduce using rule 106 (factor_variable -> ID push_id .)
    GREATER         reduce using rule 106 (factor_variable -> ID push_id .)
    LESS            reduce using rule 106 (factor_variable -> ID push_id .)
    GREATEREQ       reduce using rule 106 (factor_variable -> ID push_id .)
    LESSEQ          reduce using rule 106 (factor_variable -> ID push_id .)
    NOTEQUAL        reduce using rule 106 (factor_variable -> ID push_id .)
    EQUAL           reduce using rule 106 (factor_variable -> ID push_id .)
    Y               reduce using rule 106 (factor_variable -> ID push_id .)
    O               reduce using rule 106 (factor_variable -> ID push_id .)
    COMMA           reduce using rule 106 (factor_variable -> ID push_id .)
    RPAREN          reduce using rule 106 (factor_variable -> ID push_id .)
    RBRACKET        reduce using rule 106 (factor_variable -> ID push_id .)
    SEMICOLON       reduce using rule 106 (factor_variable -> ID push_id .)
    LBRACE          reduce using rule 106 (factor_variable -> ID push_id .)


state 112

    (107) factor_variable -> ID LBRACKET . hyper_exp RBRACKET
    (108) factor_variable -> ID LBRACKET . hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (69) hyper_exp -> . super_exp hyper_exp_aux
    (76) super_exp -> . exp super_exp_aux
    (87) exp -> . term check_op_masmenos exp_aux
    (94) term -> . factor check_op_pordiv term_aux
    (101) factor -> . factor_constante
    (102) factor -> . factor_variable
    (103) factor -> . factor_expresion
    (104) factor_constante -> . CTEI push_int
    (105) factor_constante -> . CTEF push_float
    (106) factor_variable -> . ID push_id
    (107) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> . ID llamada_func
    (110) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    hyper_exp                      shift and go to state 158
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 113

    (109) factor_variable -> ID llamada_func .

    TIMES           reduce using rule 109 (factor_variable -> ID llamada_func .)
    DIVIDE          reduce using rule 109 (factor_variable -> ID llamada_func .)
    CTEI            reduce using rule 109 (factor_variable -> ID llamada_func .)
    CTEF            reduce using rule 109 (factor_variable -> ID llamada_func .)
    ID              reduce using rule 109 (factor_variable -> ID llamada_func .)
    LPAREN          reduce using rule 109 (factor_variable -> ID llamada_func .)
    PLUS            reduce using rule 109 (factor_variable -> ID llamada_func .)
    MINUS           reduce using rule 109 (factor_variable -> ID llamada_func .)
    EN              reduce using rule 109 (factor_variable -> ID llamada_func .)
    GREATER         reduce using rule 109 (factor_variable -> ID llamada_func .)
    LESS            reduce using rule 109 (factor_variable -> ID llamada_func .)
    GREATEREQ       reduce using rule 109 (factor_variable -> ID llamada_func .)
    LESSEQ          reduce using rule 109 (factor_variable -> ID llamada_func .)
    NOTEQUAL        reduce using rule 109 (factor_variable -> ID llamada_func .)
    EQUAL           reduce using rule 109 (factor_variable -> ID llamada_func .)
    Y               reduce using rule 109 (factor_variable -> ID llamada_func .)
    O               reduce using rule 109 (factor_variable -> ID llamada_func .)
    COMMA           reduce using rule 109 (factor_variable -> ID llamada_func .)
    RPAREN          reduce using rule 109 (factor_variable -> ID llamada_func .)
    RBRACKET        reduce using rule 109 (factor_variable -> ID llamada_func .)
    SEMICOLON       reduce using rule 109 (factor_variable -> ID llamada_func .)
    LBRACE          reduce using rule 109 (factor_variable -> ID llamada_func .)


state 114

    (110) factor_expresion -> LPAREN meter_fondo_falso . hyper_exp RPAREN quitar_fondo_falso
    (69) hyper_exp -> . super_exp hyper_exp_aux
    (76) super_exp -> . exp super_exp_aux
    (87) exp -> . term check_op_masmenos exp_aux
    (94) term -> . factor check_op_pordiv term_aux
    (101) factor -> . factor_constante
    (102) factor -> . factor_variable
    (103) factor -> . factor_expresion
    (104) factor_constante -> . CTEI push_int
    (105) factor_constante -> . CTEF push_float
    (106) factor_variable -> . ID push_id
    (107) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> . ID llamada_func
    (110) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    hyper_exp                      shift and go to state 159
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 115

    (58) ciclo_while -> MIENTRAS LPAREN exp . RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON

    RPAREN          shift and go to state 160


state 116

    (64) condicion -> SI LPAREN exp . RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON

    RPAREN          shift and go to state 161


state 117

    (121) escribe -> IMPRIMIR LPAREN escribe_aux . RPAREN SEMICOLON

    RPAREN          shift and go to state 162


state 118

    (122) escribe_aux -> exp . escribeCycle
    (124) escribeCycle -> . COMMA escribe_aux
    (125) escribeCycle -> . empty
    (127) empty -> .

    COMMA           shift and go to state 164
    RPAREN          reduce using rule 127 (empty -> .)

    escribeCycle                   shift and go to state 163
    empty                          shift and go to state 165

state 119

    (123) escribe_aux -> CTESTRING . escribeCycle
    (124) escribeCycle -> . COMMA escribe_aux
    (125) escribeCycle -> . empty
    (127) empty -> .

    COMMA           shift and go to state 164
    RPAREN          reduce using rule 127 (empty -> .)

    escribeCycle                   shift and go to state 166
    empty                          shift and go to state 165

state 120

    (57) leer -> LEER variable SEMICOLON .

    RBRACE          reduce using rule 57 (leer -> LEER variable SEMICOLON .)
    ID              reduce using rule 57 (leer -> LEER variable SEMICOLON .)
    PORCADA         reduce using rule 57 (leer -> LEER variable SEMICOLON .)
    MIENTRAS        reduce using rule 57 (leer -> LEER variable SEMICOLON .)
    SI              reduce using rule 57 (leer -> LEER variable SEMICOLON .)
    IMPRIMIR        reduce using rule 57 (leer -> LEER variable SEMICOLON .)
    LEER            reduce using rule 57 (leer -> LEER variable SEMICOLON .)
    REGRESAR        reduce using rule 57 (leer -> LEER variable SEMICOLON .)


state 121

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN . LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON

    LBRACE          shift and go to state 167


state 122

    (37) parameter -> type ID . punto_parameter parameterCycle
    (41) punto_parameter -> .

    COMMA           reduce using rule 41 (punto_parameter -> .)
    RPAREN          reduce using rule 41 (punto_parameter -> .)

    punto_parameter                shift and go to state 168

state 123

    (14) simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .

    VARIABLE        reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    RENGLON         reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    TABLA           reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    INICIO          reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    FUNCION         reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    ID              reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    PORCADA         reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    MIENTRAS        reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    SI              reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    LEER            reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    REGRESAR        reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    RBRACE          reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)


state 124

    (15) simpleVarCycle -> COMMA ID . punto_simple_var simpleVarCycle
    (17) punto_simple_var -> .

    COMMA           reduce using rule 17 (punto_simple_var -> .)
    SEMICOLON       reduce using rule 17 (punto_simple_var -> .)

    punto_simple_var               shift and go to state 169

state 125

    (21) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET . punto_array arrayCycle SEMICOLON
    (24) punto_array -> .

    COMMA           reduce using rule 24 (punto_array -> .)
    SEMICOLON       reduce using rule 24 (punto_array -> .)

    punto_array                    shift and go to state 170

state 126

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    LBRACKET        shift and go to state 171


state 127

    (50) asignar -> variable ASSIGN push_op_igual hyper_exp . check_op_igual SEMICOLON
    (52) check_op_igual -> .

    SEMICOLON       reduce using rule 52 (check_op_igual -> .)

    check_op_igual                 shift and go to state 172

state 128

    (116) llamada_func -> ID LPAREN llamadaCYCLE RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 173


state 129

    (117) llamadaCYCLE -> hyper_exp llamadaCYCLE_aux .

    RPAREN          reduce using rule 117 (llamadaCYCLE -> hyper_exp llamadaCYCLE_aux .)


state 130

    (119) llamadaCYCLE_aux -> COMMA . hyper_exp llamadaCYCLE_aux
    (69) hyper_exp -> . super_exp hyper_exp_aux
    (76) super_exp -> . exp super_exp_aux
    (87) exp -> . term check_op_masmenos exp_aux
    (94) term -> . factor check_op_pordiv term_aux
    (101) factor -> . factor_constante
    (102) factor -> . factor_variable
    (103) factor -> . factor_expresion
    (104) factor_constante -> . CTEI push_int
    (105) factor_constante -> . CTEF push_float
    (106) factor_variable -> . ID push_id
    (107) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> . ID llamada_func
    (110) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    hyper_exp                      shift and go to state 174
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 131

    (120) llamadaCYCLE_aux -> empty .

    RPAREN          reduce using rule 120 (llamadaCYCLE_aux -> empty .)


state 132

    (69) hyper_exp -> super_exp hyper_exp_aux .

    COMMA           reduce using rule 69 (hyper_exp -> super_exp hyper_exp_aux .)
    RPAREN          reduce using rule 69 (hyper_exp -> super_exp hyper_exp_aux .)
    SEMICOLON       reduce using rule 69 (hyper_exp -> super_exp hyper_exp_aux .)
    RBRACKET        reduce using rule 69 (hyper_exp -> super_exp hyper_exp_aux .)


state 133

    (70) hyper_exp_aux -> push_op_logicos . super_exp check_op_logicos
    (76) super_exp -> . exp super_exp_aux
    (87) exp -> . term check_op_masmenos exp_aux
    (94) term -> . factor check_op_pordiv term_aux
    (101) factor -> . factor_constante
    (102) factor -> . factor_variable
    (103) factor -> . factor_expresion
    (104) factor_constante -> . CTEI push_int
    (105) factor_constante -> . CTEF push_float
    (106) factor_variable -> . ID push_id
    (107) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> . ID llamada_func
    (110) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    super_exp                      shift and go to state 175
    exp                            shift and go to state 103
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 134

    (71) hyper_exp_aux -> empty .
    (75) push_op_logicos -> empty .

    COMMA           reduce using rule 71 (hyper_exp_aux -> empty .)
    RPAREN          reduce using rule 71 (hyper_exp_aux -> empty .)
    SEMICOLON       reduce using rule 71 (hyper_exp_aux -> empty .)
    RBRACKET        reduce using rule 71 (hyper_exp_aux -> empty .)
    CTEI            reduce using rule 75 (push_op_logicos -> empty .)
    CTEF            reduce using rule 75 (push_op_logicos -> empty .)
    ID              reduce using rule 75 (push_op_logicos -> empty .)
    LPAREN          reduce using rule 75 (push_op_logicos -> empty .)


state 135

    (73) push_op_logicos -> Y .

    CTEI            reduce using rule 73 (push_op_logicos -> Y .)
    CTEF            reduce using rule 73 (push_op_logicos -> Y .)
    ID              reduce using rule 73 (push_op_logicos -> Y .)
    LPAREN          reduce using rule 73 (push_op_logicos -> Y .)


state 136

    (74) push_op_logicos -> O .

    CTEI            reduce using rule 74 (push_op_logicos -> O .)
    CTEF            reduce using rule 74 (push_op_logicos -> O .)
    ID              reduce using rule 74 (push_op_logicos -> O .)
    LPAREN          reduce using rule 74 (push_op_logicos -> O .)


state 137

    (76) super_exp -> exp super_exp_aux .

    Y               reduce using rule 76 (super_exp -> exp super_exp_aux .)
    O               reduce using rule 76 (super_exp -> exp super_exp_aux .)
    CTEI            reduce using rule 76 (super_exp -> exp super_exp_aux .)
    CTEF            reduce using rule 76 (super_exp -> exp super_exp_aux .)
    ID              reduce using rule 76 (super_exp -> exp super_exp_aux .)
    LPAREN          reduce using rule 76 (super_exp -> exp super_exp_aux .)
    COMMA           reduce using rule 76 (super_exp -> exp super_exp_aux .)
    RPAREN          reduce using rule 76 (super_exp -> exp super_exp_aux .)
    SEMICOLON       reduce using rule 76 (super_exp -> exp super_exp_aux .)
    RBRACKET        reduce using rule 76 (super_exp -> exp super_exp_aux .)


state 138

    (77) super_exp_aux -> push_op_relacionales . exp check_op_relacionales
    (87) exp -> . term check_op_masmenos exp_aux
    (94) term -> . factor check_op_pordiv term_aux
    (101) factor -> . factor_constante
    (102) factor -> . factor_variable
    (103) factor -> . factor_expresion
    (104) factor_constante -> . CTEI push_int
    (105) factor_constante -> . CTEF push_float
    (106) factor_variable -> . ID push_id
    (107) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> . ID llamada_func
    (110) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 176
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 139

    (78) super_exp_aux -> empty .
    (86) push_op_relacionales -> empty .

  ! reduce/reduce conflict for CTEI resolved using rule 78 (super_exp_aux -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 78 (super_exp_aux -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 78 (super_exp_aux -> empty .)
  ! reduce/reduce conflict for LPAREN resolved using rule 78 (super_exp_aux -> empty .)
    Y               reduce using rule 78 (super_exp_aux -> empty .)
    O               reduce using rule 78 (super_exp_aux -> empty .)
    CTEI            reduce using rule 78 (super_exp_aux -> empty .)
    CTEF            reduce using rule 78 (super_exp_aux -> empty .)
    ID              reduce using rule 78 (super_exp_aux -> empty .)
    LPAREN          reduce using rule 78 (super_exp_aux -> empty .)
    COMMA           reduce using rule 78 (super_exp_aux -> empty .)
    RPAREN          reduce using rule 78 (super_exp_aux -> empty .)
    SEMICOLON       reduce using rule 78 (super_exp_aux -> empty .)
    RBRACKET        reduce using rule 78 (super_exp_aux -> empty .)

  ! CTEI            [ reduce using rule 86 (push_op_relacionales -> empty .) ]
  ! CTEF            [ reduce using rule 86 (push_op_relacionales -> empty .) ]
  ! ID              [ reduce using rule 86 (push_op_relacionales -> empty .) ]
  ! LPAREN          [ reduce using rule 86 (push_op_relacionales -> empty .) ]


state 140

    (80) push_op_relacionales -> GREATER .

    CTEI            reduce using rule 80 (push_op_relacionales -> GREATER .)
    CTEF            reduce using rule 80 (push_op_relacionales -> GREATER .)
    ID              reduce using rule 80 (push_op_relacionales -> GREATER .)
    LPAREN          reduce using rule 80 (push_op_relacionales -> GREATER .)


state 141

    (81) push_op_relacionales -> LESS .

    CTEI            reduce using rule 81 (push_op_relacionales -> LESS .)
    CTEF            reduce using rule 81 (push_op_relacionales -> LESS .)
    ID              reduce using rule 81 (push_op_relacionales -> LESS .)
    LPAREN          reduce using rule 81 (push_op_relacionales -> LESS .)


state 142

    (82) push_op_relacionales -> GREATEREQ .

    CTEI            reduce using rule 82 (push_op_relacionales -> GREATEREQ .)
    CTEF            reduce using rule 82 (push_op_relacionales -> GREATEREQ .)
    ID              reduce using rule 82 (push_op_relacionales -> GREATEREQ .)
    LPAREN          reduce using rule 82 (push_op_relacionales -> GREATEREQ .)


state 143

    (83) push_op_relacionales -> LESSEQ .

    CTEI            reduce using rule 83 (push_op_relacionales -> LESSEQ .)
    CTEF            reduce using rule 83 (push_op_relacionales -> LESSEQ .)
    ID              reduce using rule 83 (push_op_relacionales -> LESSEQ .)
    LPAREN          reduce using rule 83 (push_op_relacionales -> LESSEQ .)


state 144

    (84) push_op_relacionales -> NOTEQUAL .

    CTEI            reduce using rule 84 (push_op_relacionales -> NOTEQUAL .)
    CTEF            reduce using rule 84 (push_op_relacionales -> NOTEQUAL .)
    ID              reduce using rule 84 (push_op_relacionales -> NOTEQUAL .)
    LPAREN          reduce using rule 84 (push_op_relacionales -> NOTEQUAL .)


state 145

    (85) push_op_relacionales -> EQUAL .

    CTEI            reduce using rule 85 (push_op_relacionales -> EQUAL .)
    CTEF            reduce using rule 85 (push_op_relacionales -> EQUAL .)
    ID              reduce using rule 85 (push_op_relacionales -> EQUAL .)
    LPAREN          reduce using rule 85 (push_op_relacionales -> EQUAL .)


state 146

    (54) variable_aux -> LBRACKET exp RBRACKET .
    (55) variable_aux -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    ASSIGN          reduce using rule 54 (variable_aux -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 54 (variable_aux -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 177


state 147

    (61) ciclo_for -> PORCADA exp EN exp . LBRACE estatutos forCycle RBRACE SEMICOLON

    LBRACE          shift and go to state 178


state 148

    (87) exp -> term check_op_masmenos exp_aux .

    EN              reduce using rule 87 (exp -> term check_op_masmenos exp_aux .)
    GREATER         reduce using rule 87 (exp -> term check_op_masmenos exp_aux .)
    LESS            reduce using rule 87 (exp -> term check_op_masmenos exp_aux .)
    GREATEREQ       reduce using rule 87 (exp -> term check_op_masmenos exp_aux .)
    LESSEQ          reduce using rule 87 (exp -> term check_op_masmenos exp_aux .)
    NOTEQUAL        reduce using rule 87 (exp -> term check_op_masmenos exp_aux .)
    EQUAL           reduce using rule 87 (exp -> term check_op_masmenos exp_aux .)
    CTEI            reduce using rule 87 (exp -> term check_op_masmenos exp_aux .)
    CTEF            reduce using rule 87 (exp -> term check_op_masmenos exp_aux .)
    ID              reduce using rule 87 (exp -> term check_op_masmenos exp_aux .)
    LPAREN          reduce using rule 87 (exp -> term check_op_masmenos exp_aux .)
    Y               reduce using rule 87 (exp -> term check_op_masmenos exp_aux .)
    O               reduce using rule 87 (exp -> term check_op_masmenos exp_aux .)
    COMMA           reduce using rule 87 (exp -> term check_op_masmenos exp_aux .)
    RPAREN          reduce using rule 87 (exp -> term check_op_masmenos exp_aux .)
    RBRACKET        reduce using rule 87 (exp -> term check_op_masmenos exp_aux .)
    SEMICOLON       reduce using rule 87 (exp -> term check_op_masmenos exp_aux .)
    LBRACE          reduce using rule 87 (exp -> term check_op_masmenos exp_aux .)


state 149

    (88) exp_aux -> push_op_exp_masmenos . exp
    (87) exp -> . term check_op_masmenos exp_aux
    (94) term -> . factor check_op_pordiv term_aux
    (101) factor -> . factor_constante
    (102) factor -> . factor_variable
    (103) factor -> . factor_expresion
    (104) factor_constante -> . CTEI push_int
    (105) factor_constante -> . CTEF push_float
    (106) factor_variable -> . ID push_id
    (107) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> . ID llamada_func
    (110) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 179
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 150

    (89) exp_aux -> empty .
    (92) push_op_exp_masmenos -> empty .

  ! reduce/reduce conflict for CTEI resolved using rule 89 (exp_aux -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 89 (exp_aux -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 89 (exp_aux -> empty .)
  ! reduce/reduce conflict for LPAREN resolved using rule 89 (exp_aux -> empty .)
    EN              reduce using rule 89 (exp_aux -> empty .)
    GREATER         reduce using rule 89 (exp_aux -> empty .)
    LESS            reduce using rule 89 (exp_aux -> empty .)
    GREATEREQ       reduce using rule 89 (exp_aux -> empty .)
    LESSEQ          reduce using rule 89 (exp_aux -> empty .)
    NOTEQUAL        reduce using rule 89 (exp_aux -> empty .)
    EQUAL           reduce using rule 89 (exp_aux -> empty .)
    CTEI            reduce using rule 89 (exp_aux -> empty .)
    CTEF            reduce using rule 89 (exp_aux -> empty .)
    ID              reduce using rule 89 (exp_aux -> empty .)
    LPAREN          reduce using rule 89 (exp_aux -> empty .)
    Y               reduce using rule 89 (exp_aux -> empty .)
    O               reduce using rule 89 (exp_aux -> empty .)
    COMMA           reduce using rule 89 (exp_aux -> empty .)
    RPAREN          reduce using rule 89 (exp_aux -> empty .)
    RBRACKET        reduce using rule 89 (exp_aux -> empty .)
    SEMICOLON       reduce using rule 89 (exp_aux -> empty .)
    LBRACE          reduce using rule 89 (exp_aux -> empty .)

  ! CTEI            [ reduce using rule 92 (push_op_exp_masmenos -> empty .) ]
  ! CTEF            [ reduce using rule 92 (push_op_exp_masmenos -> empty .) ]
  ! ID              [ reduce using rule 92 (push_op_exp_masmenos -> empty .) ]
  ! LPAREN          [ reduce using rule 92 (push_op_exp_masmenos -> empty .) ]


state 151

    (90) push_op_exp_masmenos -> PLUS .

    CTEI            reduce using rule 90 (push_op_exp_masmenos -> PLUS .)
    CTEF            reduce using rule 90 (push_op_exp_masmenos -> PLUS .)
    ID              reduce using rule 90 (push_op_exp_masmenos -> PLUS .)
    LPAREN          reduce using rule 90 (push_op_exp_masmenos -> PLUS .)


state 152

    (91) push_op_exp_masmenos -> MINUS .

    CTEI            reduce using rule 91 (push_op_exp_masmenos -> MINUS .)
    CTEF            reduce using rule 91 (push_op_exp_masmenos -> MINUS .)
    ID              reduce using rule 91 (push_op_exp_masmenos -> MINUS .)
    LPAREN          reduce using rule 91 (push_op_exp_masmenos -> MINUS .)


state 153

    (94) term -> factor check_op_pordiv term_aux .

    PLUS            reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    MINUS           reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    CTEI            reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    CTEF            reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    ID              reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    LPAREN          reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    EN              reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    GREATER         reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    LESS            reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    GREATEREQ       reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    LESSEQ          reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    NOTEQUAL        reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    EQUAL           reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    Y               reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    O               reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    COMMA           reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    RPAREN          reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    RBRACKET        reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    SEMICOLON       reduce using rule 94 (term -> factor check_op_pordiv term_aux .)
    LBRACE          reduce using rule 94 (term -> factor check_op_pordiv term_aux .)


state 154

    (95) term_aux -> push_op_exp_pordiv . term
    (94) term -> . factor check_op_pordiv term_aux
    (101) factor -> . factor_constante
    (102) factor -> . factor_variable
    (103) factor -> . factor_expresion
    (104) factor_constante -> . CTEI push_int
    (105) factor_constante -> . CTEF push_float
    (106) factor_variable -> . ID push_id
    (107) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> . ID llamada_func
    (110) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    term                           shift and go to state 180
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 155

    (96) term_aux -> empty .
    (100) push_op_exp_pordiv -> empty .

  ! reduce/reduce conflict for CTEI resolved using rule 96 (term_aux -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 96 (term_aux -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 96 (term_aux -> empty .)
  ! reduce/reduce conflict for LPAREN resolved using rule 96 (term_aux -> empty .)
    PLUS            reduce using rule 96 (term_aux -> empty .)
    MINUS           reduce using rule 96 (term_aux -> empty .)
    CTEI            reduce using rule 96 (term_aux -> empty .)
    CTEF            reduce using rule 96 (term_aux -> empty .)
    ID              reduce using rule 96 (term_aux -> empty .)
    LPAREN          reduce using rule 96 (term_aux -> empty .)
    EN              reduce using rule 96 (term_aux -> empty .)
    GREATER         reduce using rule 96 (term_aux -> empty .)
    LESS            reduce using rule 96 (term_aux -> empty .)
    GREATEREQ       reduce using rule 96 (term_aux -> empty .)
    LESSEQ          reduce using rule 96 (term_aux -> empty .)
    NOTEQUAL        reduce using rule 96 (term_aux -> empty .)
    EQUAL           reduce using rule 96 (term_aux -> empty .)
    Y               reduce using rule 96 (term_aux -> empty .)
    O               reduce using rule 96 (term_aux -> empty .)
    COMMA           reduce using rule 96 (term_aux -> empty .)
    RPAREN          reduce using rule 96 (term_aux -> empty .)
    RBRACKET        reduce using rule 96 (term_aux -> empty .)
    SEMICOLON       reduce using rule 96 (term_aux -> empty .)
    LBRACE          reduce using rule 96 (term_aux -> empty .)

  ! CTEI            [ reduce using rule 100 (push_op_exp_pordiv -> empty .) ]
  ! CTEF            [ reduce using rule 100 (push_op_exp_pordiv -> empty .) ]
  ! ID              [ reduce using rule 100 (push_op_exp_pordiv -> empty .) ]
  ! LPAREN          [ reduce using rule 100 (push_op_exp_pordiv -> empty .) ]


state 156

    (98) push_op_exp_pordiv -> TIMES .

    CTEI            reduce using rule 98 (push_op_exp_pordiv -> TIMES .)
    CTEF            reduce using rule 98 (push_op_exp_pordiv -> TIMES .)
    ID              reduce using rule 98 (push_op_exp_pordiv -> TIMES .)
    LPAREN          reduce using rule 98 (push_op_exp_pordiv -> TIMES .)


state 157

    (99) push_op_exp_pordiv -> DIVIDE .

    CTEI            reduce using rule 99 (push_op_exp_pordiv -> DIVIDE .)
    CTEF            reduce using rule 99 (push_op_exp_pordiv -> DIVIDE .)
    ID              reduce using rule 99 (push_op_exp_pordiv -> DIVIDE .)
    LPAREN          reduce using rule 99 (push_op_exp_pordiv -> DIVIDE .)


state 158

    (107) factor_variable -> ID LBRACKET hyper_exp . RBRACKET
    (108) factor_variable -> ID LBRACKET hyper_exp . RBRACKET LBRACKET hyper_exp RBRACKET

    RBRACKET        shift and go to state 181


state 159

    (110) factor_expresion -> LPAREN meter_fondo_falso hyper_exp . RPAREN quitar_fondo_falso

    RPAREN          shift and go to state 182


state 160

    (58) ciclo_while -> MIENTRAS LPAREN exp RPAREN . LBRACE estatutos whileCycle RBRACE SEMICOLON

    LBRACE          shift and go to state 183


state 161

    (64) condicion -> SI LPAREN exp RPAREN . LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON

    LBRACE          shift and go to state 184


state 162

    (121) escribe -> IMPRIMIR LPAREN escribe_aux RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 185


state 163

    (122) escribe_aux -> exp escribeCycle .

    RPAREN          reduce using rule 122 (escribe_aux -> exp escribeCycle .)


state 164

    (124) escribeCycle -> COMMA . escribe_aux
    (122) escribe_aux -> . exp escribeCycle
    (123) escribe_aux -> . CTESTRING escribeCycle
    (87) exp -> . term check_op_masmenos exp_aux
    (94) term -> . factor check_op_pordiv term_aux
    (101) factor -> . factor_constante
    (102) factor -> . factor_variable
    (103) factor -> . factor_expresion
    (104) factor_constante -> . CTEI push_int
    (105) factor_constante -> . CTEF push_float
    (106) factor_variable -> . ID push_id
    (107) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> . ID llamada_func
    (110) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTESTRING       shift and go to state 119
    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    escribe_aux                    shift and go to state 186
    exp                            shift and go to state 118
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 165

    (125) escribeCycle -> empty .

    RPAREN          reduce using rule 125 (escribeCycle -> empty .)


state 166

    (123) escribe_aux -> CTESTRING escribeCycle .

    RPAREN          reduce using rule 123 (escribe_aux -> CTESTRING escribeCycle .)


state 167

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE . dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON
    (5) dec_var_cycle -> . dec_var dec_var_cycle
    (6) dec_var_cycle -> . empty
    (11) dec_var -> . simple_var
    (12) dec_var -> . array
    (13) dec_var -> . matrix
    (127) empty -> .
    (14) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (21) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (25) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    ID              reduce using rule 127 (empty -> .)
    PORCADA         reduce using rule 127 (empty -> .)
    MIENTRAS        reduce using rule 127 (empty -> .)
    SI              reduce using rule 127 (empty -> .)
    IMPRIMIR        reduce using rule 127 (empty -> .)
    LEER            reduce using rule 127 (empty -> .)
    REGRESAR        reduce using rule 127 (empty -> .)
    RBRACE          reduce using rule 127 (empty -> .)
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

    dec_var_cycle                  shift and go to state 187
    dec_var                        shift and go to state 10
    empty                          shift and go to state 26
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 168

    (37) parameter -> type ID punto_parameter . parameterCycle
    (39) parameterCycle -> . COMMA type ID punto_parameter parameterCycle
    (40) parameterCycle -> . empty
    (127) empty -> .

    COMMA           shift and go to state 189
    RPAREN          reduce using rule 127 (empty -> .)

    parameterCycle                 shift and go to state 188
    empty                          shift and go to state 190

state 169

    (15) simpleVarCycle -> COMMA ID punto_simple_var . simpleVarCycle
    (15) simpleVarCycle -> . COMMA ID punto_simple_var simpleVarCycle
    (16) simpleVarCycle -> . empty
    (127) empty -> .

    COMMA           shift and go to state 93
    SEMICOLON       reduce using rule 127 (empty -> .)

    simpleVarCycle                 shift and go to state 191
    empty                          shift and go to state 94

state 170

    (21) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array . arrayCycle SEMICOLON
    (22) arrayCycle -> . COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle
    (23) arrayCycle -> . empty
    (127) empty -> .

    COMMA           shift and go to state 193
    SEMICOLON       reduce using rule 127 (empty -> .)

    arrayCycle                     shift and go to state 192
    empty                          shift and go to state 194

state 171

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    CTEI            shift and go to state 195


state 172

    (50) asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual . SEMICOLON

    SEMICOLON       shift and go to state 196


state 173

    (116) llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .

    RBRACE          reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    TIMES           reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    CTEI            reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    CTEF            reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    ID              reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LPAREN          reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    PLUS            reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    MINUS           reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    EN              reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    GREATER         reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LESS            reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    GREATEREQ       reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LESSEQ          reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    EQUAL           reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    Y               reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    O               reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    COMMA           reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    RPAREN          reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LBRACE          reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    PORCADA         reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    SI              reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LEER            reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    REGRESAR        reduce using rule 116 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)


state 174

    (119) llamadaCYCLE_aux -> COMMA hyper_exp . llamadaCYCLE_aux
    (119) llamadaCYCLE_aux -> . COMMA hyper_exp llamadaCYCLE_aux
    (120) llamadaCYCLE_aux -> . empty
    (127) empty -> .

    COMMA           shift and go to state 130
    RPAREN          reduce using rule 127 (empty -> .)

    llamadaCYCLE_aux               shift and go to state 197
    empty                          shift and go to state 131

state 175

    (70) hyper_exp_aux -> push_op_logicos super_exp . check_op_logicos
    (72) check_op_logicos -> .

    COMMA           reduce using rule 72 (check_op_logicos -> .)
    RPAREN          reduce using rule 72 (check_op_logicos -> .)
    SEMICOLON       reduce using rule 72 (check_op_logicos -> .)
    RBRACKET        reduce using rule 72 (check_op_logicos -> .)

    check_op_logicos               shift and go to state 198

state 176

    (77) super_exp_aux -> push_op_relacionales exp . check_op_relacionales
    (79) check_op_relacionales -> .

    Y               reduce using rule 79 (check_op_relacionales -> .)
    O               reduce using rule 79 (check_op_relacionales -> .)
    CTEI            reduce using rule 79 (check_op_relacionales -> .)
    CTEF            reduce using rule 79 (check_op_relacionales -> .)
    ID              reduce using rule 79 (check_op_relacionales -> .)
    LPAREN          reduce using rule 79 (check_op_relacionales -> .)
    COMMA           reduce using rule 79 (check_op_relacionales -> .)
    RPAREN          reduce using rule 79 (check_op_relacionales -> .)
    SEMICOLON       reduce using rule 79 (check_op_relacionales -> .)
    RBRACKET        reduce using rule 79 (check_op_relacionales -> .)

    check_op_relacionales          shift and go to state 199

state 177

    (55) variable_aux -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (87) exp -> . term check_op_masmenos exp_aux
    (94) term -> . factor check_op_pordiv term_aux
    (101) factor -> . factor_constante
    (102) factor -> . factor_variable
    (103) factor -> . factor_expresion
    (104) factor_constante -> . CTEI push_int
    (105) factor_constante -> . CTEF push_float
    (106) factor_variable -> . ID push_id
    (107) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> . ID llamada_func
    (110) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 200
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 178

    (61) ciclo_for -> PORCADA exp EN exp LBRACE . estatutos forCycle RBRACE SEMICOLON
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (50) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (116) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (58) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (64) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (121) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (57) leer -> . LEER variable SEMICOLON
    (127) empty -> .
    (53) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63
    RBRACE          reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! PORCADA         [ reduce using rule 127 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 127 (empty -> .) ]
  ! SI              [ reduce using rule 127 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 127 (empty -> .) ]
  ! LEER            [ reduce using rule 127 (empty -> .) ]

    estatutos                      shift and go to state 201
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    empty                          shift and go to state 56
    variable                       shift and go to state 57

state 179

    (88) exp_aux -> push_op_exp_masmenos exp .

    EN              reduce using rule 88 (exp_aux -> push_op_exp_masmenos exp .)
    GREATER         reduce using rule 88 (exp_aux -> push_op_exp_masmenos exp .)
    LESS            reduce using rule 88 (exp_aux -> push_op_exp_masmenos exp .)
    GREATEREQ       reduce using rule 88 (exp_aux -> push_op_exp_masmenos exp .)
    LESSEQ          reduce using rule 88 (exp_aux -> push_op_exp_masmenos exp .)
    NOTEQUAL        reduce using rule 88 (exp_aux -> push_op_exp_masmenos exp .)
    EQUAL           reduce using rule 88 (exp_aux -> push_op_exp_masmenos exp .)
    CTEI            reduce using rule 88 (exp_aux -> push_op_exp_masmenos exp .)
    CTEF            reduce using rule 88 (exp_aux -> push_op_exp_masmenos exp .)
    ID              reduce using rule 88 (exp_aux -> push_op_exp_masmenos exp .)
    LPAREN          reduce using rule 88 (exp_aux -> push_op_exp_masmenos exp .)
    Y               reduce using rule 88 (exp_aux -> push_op_exp_masmenos exp .)
    O               reduce using rule 88 (exp_aux -> push_op_exp_masmenos exp .)
    COMMA           reduce using rule 88 (exp_aux -> push_op_exp_masmenos exp .)
    RPAREN          reduce using rule 88 (exp_aux -> push_op_exp_masmenos exp .)
    RBRACKET        reduce using rule 88 (exp_aux -> push_op_exp_masmenos exp .)
    SEMICOLON       reduce using rule 88 (exp_aux -> push_op_exp_masmenos exp .)
    LBRACE          reduce using rule 88 (exp_aux -> push_op_exp_masmenos exp .)


state 180

    (95) term_aux -> push_op_exp_pordiv term .

    PLUS            reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    MINUS           reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    CTEI            reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    CTEF            reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    ID              reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    LPAREN          reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    EN              reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    GREATER         reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    LESS            reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    GREATEREQ       reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    LESSEQ          reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    NOTEQUAL        reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    EQUAL           reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    Y               reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    O               reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    COMMA           reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    RPAREN          reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    RBRACKET        reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    SEMICOLON       reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)
    LBRACE          reduce using rule 95 (term_aux -> push_op_exp_pordiv term .)


state 181

    (107) factor_variable -> ID LBRACKET hyper_exp RBRACKET .
    (108) factor_variable -> ID LBRACKET hyper_exp RBRACKET . LBRACKET hyper_exp RBRACKET

    TIMES           reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    DIVIDE          reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    CTEI            reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    CTEF            reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    ID              reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LPAREN          reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    PLUS            reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    MINUS           reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    EN              reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    GREATER         reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LESS            reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    GREATEREQ       reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LESSEQ          reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    NOTEQUAL        reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    EQUAL           reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    Y               reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    O               reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    COMMA           reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    RPAREN          reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    RBRACKET        reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    SEMICOLON       reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LBRACE          reduce using rule 107 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LBRACKET        shift and go to state 202


state 182

    (110) factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN . quitar_fondo_falso
    (112) quitar_fondo_falso -> .

    TIMES           reduce using rule 112 (quitar_fondo_falso -> .)
    DIVIDE          reduce using rule 112 (quitar_fondo_falso -> .)
    CTEI            reduce using rule 112 (quitar_fondo_falso -> .)
    CTEF            reduce using rule 112 (quitar_fondo_falso -> .)
    ID              reduce using rule 112 (quitar_fondo_falso -> .)
    LPAREN          reduce using rule 112 (quitar_fondo_falso -> .)
    PLUS            reduce using rule 112 (quitar_fondo_falso -> .)
    MINUS           reduce using rule 112 (quitar_fondo_falso -> .)
    EN              reduce using rule 112 (quitar_fondo_falso -> .)
    GREATER         reduce using rule 112 (quitar_fondo_falso -> .)
    LESS            reduce using rule 112 (quitar_fondo_falso -> .)
    GREATEREQ       reduce using rule 112 (quitar_fondo_falso -> .)
    LESSEQ          reduce using rule 112 (quitar_fondo_falso -> .)
    NOTEQUAL        reduce using rule 112 (quitar_fondo_falso -> .)
    EQUAL           reduce using rule 112 (quitar_fondo_falso -> .)
    Y               reduce using rule 112 (quitar_fondo_falso -> .)
    O               reduce using rule 112 (quitar_fondo_falso -> .)
    COMMA           reduce using rule 112 (quitar_fondo_falso -> .)
    RPAREN          reduce using rule 112 (quitar_fondo_falso -> .)
    RBRACKET        reduce using rule 112 (quitar_fondo_falso -> .)
    SEMICOLON       reduce using rule 112 (quitar_fondo_falso -> .)
    LBRACE          reduce using rule 112 (quitar_fondo_falso -> .)

    quitar_fondo_falso             shift and go to state 203

state 183

    (58) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE . estatutos whileCycle RBRACE SEMICOLON
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (50) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (116) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (58) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (64) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (121) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (57) leer -> . LEER variable SEMICOLON
    (127) empty -> .
    (53) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63
    RBRACE          reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! PORCADA         [ reduce using rule 127 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 127 (empty -> .) ]
  ! SI              [ reduce using rule 127 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 127 (empty -> .) ]
  ! LEER            [ reduce using rule 127 (empty -> .) ]

    estatutos                      shift and go to state 204
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    empty                          shift and go to state 56
    variable                       shift and go to state 57

state 184

    (64) condicion -> SI LPAREN exp RPAREN LBRACE . estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (50) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (116) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (58) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (64) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (121) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (57) leer -> . LEER variable SEMICOLON
    (127) empty -> .
    (53) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63
    RBRACE          reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! PORCADA         [ reduce using rule 127 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 127 (empty -> .) ]
  ! SI              [ reduce using rule 127 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 127 (empty -> .) ]
  ! LEER            [ reduce using rule 127 (empty -> .) ]

    estatutos                      shift and go to state 205
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    empty                          shift and go to state 56
    variable                       shift and go to state 57

state 185

    (121) escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .

    RBRACE          reduce using rule 121 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    ID              reduce using rule 121 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    PORCADA         reduce using rule 121 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 121 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    SI              reduce using rule 121 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 121 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    LEER            reduce using rule 121 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    REGRESAR        reduce using rule 121 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)


state 186

    (124) escribeCycle -> COMMA escribe_aux .

    RPAREN          reduce using rule 124 (escribeCycle -> COMMA escribe_aux .)


state 187

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle . estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (50) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (116) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (58) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (64) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (121) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (57) leer -> . LEER variable SEMICOLON
    (127) empty -> .
    (53) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63
    REGRESAR        reduce using rule 127 (empty -> .)
    RBRACE          reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! PORCADA         [ reduce using rule 127 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 127 (empty -> .) ]
  ! SI              [ reduce using rule 127 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 127 (empty -> .) ]
  ! LEER            [ reduce using rule 127 (empty -> .) ]

    estatutos                      shift and go to state 206
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    empty                          shift and go to state 56
    variable                       shift and go to state 57

state 188

    (37) parameter -> type ID punto_parameter parameterCycle .

    RPAREN          reduce using rule 37 (parameter -> type ID punto_parameter parameterCycle .)


state 189

    (39) parameterCycle -> COMMA . type ID punto_parameter parameterCycle
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    LETRA           shift and go to state 33

    type                           shift and go to state 207

state 190

    (40) parameterCycle -> empty .

    RPAREN          reduce using rule 40 (parameterCycle -> empty .)


state 191

    (15) simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle .

    SEMICOLON       reduce using rule 15 (simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle .)


state 192

    (21) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle . SEMICOLON

    SEMICOLON       shift and go to state 208


state 193

    (22) arrayCycle -> COMMA . ID LBRACKET CTEI RBRACKET punto_array arrayCycle

    ID              shift and go to state 209


state 194

    (23) arrayCycle -> empty .

    SEMICOLON       reduce using rule 23 (arrayCycle -> empty .)


state 195

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET punto_matrix matrixCycle SEMICOLON

    RBRACKET        shift and go to state 210


state 196

    (50) asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .

    RBRACE          reduce using rule 50 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    ID              reduce using rule 50 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    PORCADA         reduce using rule 50 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    MIENTRAS        reduce using rule 50 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    SI              reduce using rule 50 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    IMPRIMIR        reduce using rule 50 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    LEER            reduce using rule 50 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    REGRESAR        reduce using rule 50 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)


state 197

    (119) llamadaCYCLE_aux -> COMMA hyper_exp llamadaCYCLE_aux .

    RPAREN          reduce using rule 119 (llamadaCYCLE_aux -> COMMA hyper_exp llamadaCYCLE_aux .)


state 198

    (70) hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .

    COMMA           reduce using rule 70 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    RPAREN          reduce using rule 70 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    SEMICOLON       reduce using rule 70 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    RBRACKET        reduce using rule 70 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)


state 199

    (77) super_exp_aux -> push_op_relacionales exp check_op_relacionales .

    Y               reduce using rule 77 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    O               reduce using rule 77 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    CTEI            reduce using rule 77 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    CTEF            reduce using rule 77 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    ID              reduce using rule 77 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    LPAREN          reduce using rule 77 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    COMMA           reduce using rule 77 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    RPAREN          reduce using rule 77 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    SEMICOLON       reduce using rule 77 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    RBRACKET        reduce using rule 77 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)


state 200

    (55) variable_aux -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 211


state 201

    (61) ciclo_for -> PORCADA exp EN exp LBRACE estatutos . forCycle RBRACE SEMICOLON
    (62) forCycle -> . estatutos forCycle
    (63) forCycle -> . empty
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (127) empty -> .
    (50) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (116) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (58) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (64) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (121) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (57) leer -> . LEER variable SEMICOLON
    (53) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 127 (empty -> .)
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! PORCADA         [ reduce using rule 127 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 127 (empty -> .) ]
  ! SI              [ reduce using rule 127 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 127 (empty -> .) ]
  ! LEER            [ reduce using rule 127 (empty -> .) ]

    estatutos                      shift and go to state 212
    forCycle                       shift and go to state 213
    empty                          shift and go to state 214
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    variable                       shift and go to state 57

state 202

    (108) factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET . hyper_exp RBRACKET
    (69) hyper_exp -> . super_exp hyper_exp_aux
    (76) super_exp -> . exp super_exp_aux
    (87) exp -> . term check_op_masmenos exp_aux
    (94) term -> . factor check_op_pordiv term_aux
    (101) factor -> . factor_constante
    (102) factor -> . factor_variable
    (103) factor -> . factor_expresion
    (104) factor_constante -> . CTEI push_int
    (105) factor_constante -> . CTEF push_float
    (106) factor_variable -> . ID push_id
    (107) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (108) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (109) factor_variable -> . ID llamada_func
    (110) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    hyper_exp                      shift and go to state 215
    super_exp                      shift and go to state 102
    exp                            shift and go to state 103
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 203

    (110) factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .

    TIMES           reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    DIVIDE          reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    CTEI            reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    CTEF            reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    ID              reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LPAREN          reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    PLUS            reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    MINUS           reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    EN              reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    GREATER         reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LESS            reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    GREATEREQ       reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LESSEQ          reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    NOTEQUAL        reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    EQUAL           reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    Y               reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    O               reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    COMMA           reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    RPAREN          reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    RBRACKET        reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    SEMICOLON       reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LBRACE          reduce using rule 110 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)


state 204

    (58) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos . whileCycle RBRACE SEMICOLON
    (59) whileCycle -> . estatutos whileCycle
    (60) whileCycle -> . empty
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (127) empty -> .
    (50) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (116) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (58) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (64) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (121) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (57) leer -> . LEER variable SEMICOLON
    (53) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 127 (empty -> .)
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! PORCADA         [ reduce using rule 127 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 127 (empty -> .) ]
  ! SI              [ reduce using rule 127 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 127 (empty -> .) ]
  ! LEER            [ reduce using rule 127 (empty -> .) ]

    estatutos                      shift and go to state 216
    whileCycle                     shift and go to state 217
    empty                          shift and go to state 218
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    variable                       shift and go to state 57

state 205

    (64) condicion -> SI LPAREN exp RPAREN LBRACE estatutos . condicionCycle RBRACE sinoCondicion SEMICOLON
    (65) condicionCycle -> . estatutos condicionCycle
    (66) condicionCycle -> . empty
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (127) empty -> .
    (50) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (116) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (58) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (64) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (121) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (57) leer -> . LEER variable SEMICOLON
    (53) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 127 (empty -> .)
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! PORCADA         [ reduce using rule 127 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 127 (empty -> .) ]
  ! SI              [ reduce using rule 127 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 127 (empty -> .) ]
  ! LEER            [ reduce using rule 127 (empty -> .) ]

    estatutos                      shift and go to state 219
    condicionCycle                 shift and go to state 220
    empty                          shift and go to state 221
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    variable                       shift and go to state 57

state 206

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos . decFuncCycle dec_func_regresar RBRACE SEMICOLON
    (30) decFuncCycle -> . estatutos decFuncCycle
    (31) decFuncCycle -> . empty
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (127) empty -> .
    (50) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (116) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (58) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (64) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (121) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (57) leer -> . LEER variable SEMICOLON
    (53) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    REGRESAR        reduce using rule 127 (empty -> .)
    RBRACE          reduce using rule 127 (empty -> .)
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! PORCADA         [ reduce using rule 127 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 127 (empty -> .) ]
  ! SI              [ reduce using rule 127 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 127 (empty -> .) ]
  ! LEER            [ reduce using rule 127 (empty -> .) ]

    estatutos                      shift and go to state 222
    decFuncCycle                   shift and go to state 223
    empty                          shift and go to state 224
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    variable                       shift and go to state 57

state 207

    (39) parameterCycle -> COMMA type . ID punto_parameter parameterCycle

    ID              shift and go to state 225


state 208

    (21) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .

    VARIABLE        reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    RENGLON         reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    TABLA           reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    INICIO          reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    FUNCION         reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    ID              reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    PORCADA         reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    MIENTRAS        reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    SI              reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    LEER            reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    REGRESAR        reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    RBRACE          reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)


state 209

    (22) arrayCycle -> COMMA ID . LBRACKET CTEI RBRACKET punto_array arrayCycle

    LBRACKET        shift and go to state 226


state 210

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . punto_matrix matrixCycle SEMICOLON
    (28) punto_matrix -> .

    COMMA           reduce using rule 28 (punto_matrix -> .)
    SEMICOLON       reduce using rule 28 (punto_matrix -> .)

    punto_matrix                   shift and go to state 227

state 211

    (55) variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    ASSIGN          reduce using rule 55 (variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 55 (variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 212

    (62) forCycle -> estatutos . forCycle
    (62) forCycle -> . estatutos forCycle
    (63) forCycle -> . empty
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (127) empty -> .
    (50) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (116) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (58) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (64) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (121) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (57) leer -> . LEER variable SEMICOLON
    (53) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 127 (empty -> .)
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! PORCADA         [ reduce using rule 127 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 127 (empty -> .) ]
  ! SI              [ reduce using rule 127 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 127 (empty -> .) ]
  ! LEER            [ reduce using rule 127 (empty -> .) ]

    estatutos                      shift and go to state 212
    forCycle                       shift and go to state 228
    empty                          shift and go to state 214
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    variable                       shift and go to state 57

state 213

    (61) ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle . RBRACE SEMICOLON

    RBRACE          shift and go to state 229


state 214

    (63) forCycle -> empty .
    (49) estatutos -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 49 (estatutos -> empty .)
    ID              reduce using rule 49 (estatutos -> empty .)
    PORCADA         reduce using rule 49 (estatutos -> empty .)
    MIENTRAS        reduce using rule 49 (estatutos -> empty .)
    SI              reduce using rule 49 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 49 (estatutos -> empty .)
    LEER            reduce using rule 49 (estatutos -> empty .)
    RBRACE          reduce using rule 49 (estatutos -> empty .)

  ! RBRACE          [ reduce using rule 63 (forCycle -> empty .) ]


state 215

    (108) factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp . RBRACKET

    RBRACKET        shift and go to state 230


state 216

    (59) whileCycle -> estatutos . whileCycle
    (59) whileCycle -> . estatutos whileCycle
    (60) whileCycle -> . empty
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (127) empty -> .
    (50) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (116) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (58) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (64) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (121) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (57) leer -> . LEER variable SEMICOLON
    (53) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 127 (empty -> .)
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! PORCADA         [ reduce using rule 127 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 127 (empty -> .) ]
  ! SI              [ reduce using rule 127 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 127 (empty -> .) ]
  ! LEER            [ reduce using rule 127 (empty -> .) ]

    estatutos                      shift and go to state 216
    whileCycle                     shift and go to state 231
    empty                          shift and go to state 218
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    variable                       shift and go to state 57

state 217

    (58) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle . RBRACE SEMICOLON

    RBRACE          shift and go to state 232


state 218

    (60) whileCycle -> empty .
    (49) estatutos -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 49 (estatutos -> empty .)
    ID              reduce using rule 49 (estatutos -> empty .)
    PORCADA         reduce using rule 49 (estatutos -> empty .)
    MIENTRAS        reduce using rule 49 (estatutos -> empty .)
    SI              reduce using rule 49 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 49 (estatutos -> empty .)
    LEER            reduce using rule 49 (estatutos -> empty .)
    RBRACE          reduce using rule 49 (estatutos -> empty .)

  ! RBRACE          [ reduce using rule 60 (whileCycle -> empty .) ]


state 219

    (65) condicionCycle -> estatutos . condicionCycle
    (65) condicionCycle -> . estatutos condicionCycle
    (66) condicionCycle -> . empty
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (127) empty -> .
    (50) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (116) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (58) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (64) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (121) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (57) leer -> . LEER variable SEMICOLON
    (53) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 127 (empty -> .)
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! PORCADA         [ reduce using rule 127 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 127 (empty -> .) ]
  ! SI              [ reduce using rule 127 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 127 (empty -> .) ]
  ! LEER            [ reduce using rule 127 (empty -> .) ]

    estatutos                      shift and go to state 219
    condicionCycle                 shift and go to state 233
    empty                          shift and go to state 221
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    variable                       shift and go to state 57

state 220

    (64) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle . RBRACE sinoCondicion SEMICOLON

    RBRACE          shift and go to state 234


state 221

    (66) condicionCycle -> empty .
    (49) estatutos -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 49 (estatutos -> empty .)
    ID              reduce using rule 49 (estatutos -> empty .)
    PORCADA         reduce using rule 49 (estatutos -> empty .)
    MIENTRAS        reduce using rule 49 (estatutos -> empty .)
    SI              reduce using rule 49 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 49 (estatutos -> empty .)
    LEER            reduce using rule 49 (estatutos -> empty .)
    RBRACE          reduce using rule 49 (estatutos -> empty .)

  ! RBRACE          [ reduce using rule 66 (condicionCycle -> empty .) ]


state 222

    (30) decFuncCycle -> estatutos . decFuncCycle
    (30) decFuncCycle -> . estatutos decFuncCycle
    (31) decFuncCycle -> . empty
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (127) empty -> .
    (50) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (116) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (58) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (64) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (121) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (57) leer -> . LEER variable SEMICOLON
    (53) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    REGRESAR        reduce using rule 127 (empty -> .)
    RBRACE          reduce using rule 127 (empty -> .)
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! PORCADA         [ reduce using rule 127 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 127 (empty -> .) ]
  ! SI              [ reduce using rule 127 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 127 (empty -> .) ]
  ! LEER            [ reduce using rule 127 (empty -> .) ]

    estatutos                      shift and go to state 222
    decFuncCycle                   shift and go to state 235
    empty                          shift and go to state 224
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    variable                       shift and go to state 57

state 223

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle . dec_func_regresar RBRACE SEMICOLON
    (32) dec_func_regresar -> . REGRESAR variable SEMICOLON
    (33) dec_func_regresar -> . empty
    (127) empty -> .

    REGRESAR        shift and go to state 237
    RBRACE          reduce using rule 127 (empty -> .)

    dec_func_regresar              shift and go to state 236
    empty                          shift and go to state 238

state 224

    (31) decFuncCycle -> empty .
    (49) estatutos -> empty .

  ! reduce/reduce conflict for REGRESAR resolved using rule 31 (decFuncCycle -> empty .)
  ! reduce/reduce conflict for RBRACE resolved using rule 31 (decFuncCycle -> empty .)
    REGRESAR        reduce using rule 31 (decFuncCycle -> empty .)
    RBRACE          reduce using rule 31 (decFuncCycle -> empty .)
    ID              reduce using rule 49 (estatutos -> empty .)
    PORCADA         reduce using rule 49 (estatutos -> empty .)
    MIENTRAS        reduce using rule 49 (estatutos -> empty .)
    SI              reduce using rule 49 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 49 (estatutos -> empty .)
    LEER            reduce using rule 49 (estatutos -> empty .)

  ! REGRESAR        [ reduce using rule 49 (estatutos -> empty .) ]
  ! RBRACE          [ reduce using rule 49 (estatutos -> empty .) ]


state 225

    (39) parameterCycle -> COMMA type ID . punto_parameter parameterCycle
    (41) punto_parameter -> .

    COMMA           reduce using rule 41 (punto_parameter -> .)
    RPAREN          reduce using rule 41 (punto_parameter -> .)

    punto_parameter                shift and go to state 239

state 226

    (22) arrayCycle -> COMMA ID LBRACKET . CTEI RBRACKET punto_array arrayCycle

    CTEI            shift and go to state 240


state 227

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix . matrixCycle SEMICOLON
    (26) matrixCycle -> . COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle
    (27) matrixCycle -> . empty
    (127) empty -> .

    COMMA           shift and go to state 242
    SEMICOLON       reduce using rule 127 (empty -> .)

    matrixCycle                    shift and go to state 241
    empty                          shift and go to state 243

state 228

    (62) forCycle -> estatutos forCycle .

    RBRACE          reduce using rule 62 (forCycle -> estatutos forCycle .)


state 229

    (61) ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 244


state 230

    (108) factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .

    TIMES           reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    DIVIDE          reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    CTEI            reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    CTEF            reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    ID              reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LPAREN          reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    PLUS            reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    MINUS           reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    EN              reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    GREATER         reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LESS            reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    GREATEREQ       reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LESSEQ          reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    NOTEQUAL        reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    EQUAL           reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    Y               reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    O               reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    COMMA           reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    RPAREN          reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    RBRACKET        reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    SEMICOLON       reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LBRACE          reduce using rule 108 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)


state 231

    (59) whileCycle -> estatutos whileCycle .

    RBRACE          reduce using rule 59 (whileCycle -> estatutos whileCycle .)


state 232

    (58) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 245


state 233

    (65) condicionCycle -> estatutos condicionCycle .

    RBRACE          reduce using rule 65 (condicionCycle -> estatutos condicionCycle .)


state 234

    (64) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE . sinoCondicion SEMICOLON
    (67) sinoCondicion -> . SINO LBRACE estatutos condicionCycle RBRACE
    (68) sinoCondicion -> . empty
    (127) empty -> .

    SINO            shift and go to state 247
    SEMICOLON       reduce using rule 127 (empty -> .)

    sinoCondicion                  shift and go to state 246
    empty                          shift and go to state 248

state 235

    (30) decFuncCycle -> estatutos decFuncCycle .

    REGRESAR        reduce using rule 30 (decFuncCycle -> estatutos decFuncCycle .)
    RBRACE          reduce using rule 30 (decFuncCycle -> estatutos decFuncCycle .)


state 236

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar . RBRACE SEMICOLON

    RBRACE          shift and go to state 249


state 237

    (32) dec_func_regresar -> REGRESAR . variable SEMICOLON
    (53) variable -> . ID variable_aux

    ID              shift and go to state 88

    variable                       shift and go to state 250

state 238

    (33) dec_func_regresar -> empty .

    RBRACE          reduce using rule 33 (dec_func_regresar -> empty .)


state 239

    (39) parameterCycle -> COMMA type ID punto_parameter . parameterCycle
    (39) parameterCycle -> . COMMA type ID punto_parameter parameterCycle
    (40) parameterCycle -> . empty
    (127) empty -> .

    COMMA           shift and go to state 189
    RPAREN          reduce using rule 127 (empty -> .)

    parameterCycle                 shift and go to state 251
    empty                          shift and go to state 190

state 240

    (22) arrayCycle -> COMMA ID LBRACKET CTEI . RBRACKET punto_array arrayCycle

    RBRACKET        shift and go to state 252


state 241

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle . SEMICOLON

    SEMICOLON       shift and go to state 253


state 242

    (26) matrixCycle -> COMMA . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    ID              shift and go to state 254


state 243

    (27) matrixCycle -> empty .

    SEMICOLON       reduce using rule 27 (matrixCycle -> empty .)


state 244

    (61) ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .

    RBRACE          reduce using rule 61 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    ID              reduce using rule 61 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    PORCADA         reduce using rule 61 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    MIENTRAS        reduce using rule 61 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    SI              reduce using rule 61 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    IMPRIMIR        reduce using rule 61 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    LEER            reduce using rule 61 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    REGRESAR        reduce using rule 61 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)


state 245

    (58) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .

    RBRACE          reduce using rule 58 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    ID              reduce using rule 58 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    PORCADA         reduce using rule 58 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    MIENTRAS        reduce using rule 58 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    SI              reduce using rule 58 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    IMPRIMIR        reduce using rule 58 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    LEER            reduce using rule 58 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    REGRESAR        reduce using rule 58 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)


state 246

    (64) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion . SEMICOLON

    SEMICOLON       shift and go to state 255


state 247

    (67) sinoCondicion -> SINO . LBRACE estatutos condicionCycle RBRACE

    LBRACE          shift and go to state 256


state 248

    (68) sinoCondicion -> empty .

    SEMICOLON       reduce using rule 68 (sinoCondicion -> empty .)


state 249

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 257


state 250

    (32) dec_func_regresar -> REGRESAR variable . SEMICOLON

    SEMICOLON       shift and go to state 258


state 251

    (39) parameterCycle -> COMMA type ID punto_parameter parameterCycle .

    RPAREN          reduce using rule 39 (parameterCycle -> COMMA type ID punto_parameter parameterCycle .)


state 252

    (22) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET . punto_array arrayCycle
    (24) punto_array -> .

    COMMA           reduce using rule 24 (punto_array -> .)
    SEMICOLON       reduce using rule 24 (punto_array -> .)

    punto_array                    shift and go to state 259

state 253

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .

    VARIABLE        reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    RENGLON         reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    TABLA           reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    INICIO          reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    FUNCION         reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    ID              reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    PORCADA         reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    MIENTRAS        reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    SI              reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    LEER            reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    REGRESAR        reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    RBRACE          reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)


state 254

    (26) matrixCycle -> COMMA ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    LBRACKET        shift and go to state 260


state 255

    (64) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .

    RBRACE          reduce using rule 64 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    ID              reduce using rule 64 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    PORCADA         reduce using rule 64 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    MIENTRAS        reduce using rule 64 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    SI              reduce using rule 64 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    IMPRIMIR        reduce using rule 64 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    LEER            reduce using rule 64 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    REGRESAR        reduce using rule 64 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)


state 256

    (67) sinoCondicion -> SINO LBRACE . estatutos condicionCycle RBRACE
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (50) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (116) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (58) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (64) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (121) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (57) leer -> . LEER variable SEMICOLON
    (127) empty -> .
    (53) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63
    RBRACE          reduce using rule 127 (empty -> .)

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! PORCADA         [ reduce using rule 127 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 127 (empty -> .) ]
  ! SI              [ reduce using rule 127 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 127 (empty -> .) ]
  ! LEER            [ reduce using rule 127 (empty -> .) ]

    estatutos                      shift and go to state 261
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    empty                          shift and go to state 56
    variable                       shift and go to state 57

state 257

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON .

    FUNCION         reduce using rule 29 (dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON .)
    INICIO          reduce using rule 29 (dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON .)


state 258

    (32) dec_func_regresar -> REGRESAR variable SEMICOLON .

    RBRACE          reduce using rule 32 (dec_func_regresar -> REGRESAR variable SEMICOLON .)


state 259

    (22) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array . arrayCycle
    (22) arrayCycle -> . COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle
    (23) arrayCycle -> . empty
    (127) empty -> .

    COMMA           shift and go to state 193
    SEMICOLON       reduce using rule 127 (empty -> .)

    arrayCycle                     shift and go to state 262
    empty                          shift and go to state 194

state 260

    (26) matrixCycle -> COMMA ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    CTEI            shift and go to state 263


state 261

    (67) sinoCondicion -> SINO LBRACE estatutos . condicionCycle RBRACE
    (65) condicionCycle -> . estatutos condicionCycle
    (66) condicionCycle -> . empty
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (127) empty -> .
    (50) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (116) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (58) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (64) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (121) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (57) leer -> . LEER variable SEMICOLON
    (53) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 127 (empty -> .)
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63

  ! ID              [ reduce using rule 127 (empty -> .) ]
  ! PORCADA         [ reduce using rule 127 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 127 (empty -> .) ]
  ! SI              [ reduce using rule 127 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 127 (empty -> .) ]
  ! LEER            [ reduce using rule 127 (empty -> .) ]

    estatutos                      shift and go to state 219
    condicionCycle                 shift and go to state 264
    empty                          shift and go to state 221
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    variable                       shift and go to state 57

state 262

    (22) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle .

    SEMICOLON       reduce using rule 22 (arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle .)


state 263

    (26) matrixCycle -> COMMA ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    RBRACKET        shift and go to state 265


state 264

    (67) sinoCondicion -> SINO LBRACE estatutos condicionCycle . RBRACE

    RBRACE          shift and go to state 266


state 265

    (26) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    LBRACKET        shift and go to state 267


state 266

    (67) sinoCondicion -> SINO LBRACE estatutos condicionCycle RBRACE .

    SEMICOLON       reduce using rule 67 (sinoCondicion -> SINO LBRACE estatutos condicionCycle RBRACE .)


state 267

    (26) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET punto_matrix matrixCycle

    CTEI            shift and go to state 268


state 268

    (26) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET punto_matrix matrixCycle

    RBRACKET        shift and go to state 269


state 269

    (26) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . punto_matrix matrixCycle
    (28) punto_matrix -> .

    COMMA           reduce using rule 28 (punto_matrix -> .)
    SEMICOLON       reduce using rule 28 (punto_matrix -> .)

    punto_matrix                   shift and go to state 270

state 270

    (26) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix . matrixCycle
    (26) matrixCycle -> . COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle
    (27) matrixCycle -> . empty
    (127) empty -> .

    COMMA           shift and go to state 242
    SEMICOLON       reduce using rule 127 (empty -> .)

    matrixCycle                    shift and go to state 271
    empty                          shift and go to state 243

state 271

    (26) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle .

    SEMICOLON       reduce using rule 26 (matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INICIO in state 5 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 5 resolved as shift
WARNING: shift/reduce conflict for INICIO in state 7 resolved as shift
WARNING: shift/reduce conflict for ID in state 82 resolved as shift
WARNING: shift/reduce conflict for ID in state 178 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 178 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 178 resolved as shift
WARNING: shift/reduce conflict for SI in state 178 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 178 resolved as shift
WARNING: shift/reduce conflict for LEER in state 178 resolved as shift
WARNING: shift/reduce conflict for ID in state 183 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 183 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 183 resolved as shift
WARNING: shift/reduce conflict for SI in state 183 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 183 resolved as shift
WARNING: shift/reduce conflict for LEER in state 183 resolved as shift
WARNING: shift/reduce conflict for ID in state 184 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 184 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 184 resolved as shift
WARNING: shift/reduce conflict for SI in state 184 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 184 resolved as shift
WARNING: shift/reduce conflict for LEER in state 184 resolved as shift
WARNING: shift/reduce conflict for ID in state 187 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 187 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 187 resolved as shift
WARNING: shift/reduce conflict for SI in state 187 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 187 resolved as shift
WARNING: shift/reduce conflict for LEER in state 187 resolved as shift
WARNING: shift/reduce conflict for ID in state 201 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 201 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 201 resolved as shift
WARNING: shift/reduce conflict for SI in state 201 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 201 resolved as shift
WARNING: shift/reduce conflict for LEER in state 201 resolved as shift
WARNING: shift/reduce conflict for ID in state 204 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 204 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 204 resolved as shift
WARNING: shift/reduce conflict for SI in state 204 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 204 resolved as shift
WARNING: shift/reduce conflict for LEER in state 204 resolved as shift
WARNING: shift/reduce conflict for ID in state 205 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 205 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 205 resolved as shift
WARNING: shift/reduce conflict for SI in state 205 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 205 resolved as shift
WARNING: shift/reduce conflict for LEER in state 205 resolved as shift
WARNING: shift/reduce conflict for ID in state 206 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 206 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 206 resolved as shift
WARNING: shift/reduce conflict for SI in state 206 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 206 resolved as shift
WARNING: shift/reduce conflict for LEER in state 206 resolved as shift
WARNING: shift/reduce conflict for ID in state 212 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 212 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 212 resolved as shift
WARNING: shift/reduce conflict for SI in state 212 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 212 resolved as shift
WARNING: shift/reduce conflict for LEER in state 212 resolved as shift
WARNING: shift/reduce conflict for ID in state 216 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 216 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 216 resolved as shift
WARNING: shift/reduce conflict for SI in state 216 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 216 resolved as shift
WARNING: shift/reduce conflict for LEER in state 216 resolved as shift
WARNING: shift/reduce conflict for ID in state 219 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 219 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 219 resolved as shift
WARNING: shift/reduce conflict for SI in state 219 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 219 resolved as shift
WARNING: shift/reduce conflict for LEER in state 219 resolved as shift
WARNING: shift/reduce conflict for ID in state 222 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 222 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 222 resolved as shift
WARNING: shift/reduce conflict for SI in state 222 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 222 resolved as shift
WARNING: shift/reduce conflict for LEER in state 222 resolved as shift
WARNING: shift/reduce conflict for ID in state 256 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 256 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 256 resolved as shift
WARNING: shift/reduce conflict for SI in state 256 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 256 resolved as shift
WARNING: shift/reduce conflict for LEER in state 256 resolved as shift
WARNING: shift/reduce conflict for ID in state 261 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 261 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 261 resolved as shift
WARNING: shift/reduce conflict for SI in state 261 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 261 resolved as shift
WARNING: shift/reduce conflict for LEER in state 261 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (dec_var_cycle -> empty)
WARNING: rejected rule (dec_func_cycle -> empty) in state 11
WARNING: reduce/reduce conflict in state 139 resolved using rule (super_exp_aux -> empty)
WARNING: rejected rule (push_op_relacionales -> empty) in state 139
WARNING: reduce/reduce conflict in state 150 resolved using rule (exp_aux -> empty)
WARNING: rejected rule (push_op_exp_masmenos -> empty) in state 150
WARNING: reduce/reduce conflict in state 155 resolved using rule (term_aux -> empty)
WARNING: rejected rule (push_op_exp_pordiv -> empty) in state 155
WARNING: reduce/reduce conflict in state 214 resolved using rule (estatutos -> empty)
WARNING: rejected rule (forCycle -> empty) in state 214
WARNING: reduce/reduce conflict in state 218 resolved using rule (estatutos -> empty)
WARNING: rejected rule (whileCycle -> empty) in state 218
WARNING: reduce/reduce conflict in state 221 resolved using rule (estatutos -> empty)
WARNING: rejected rule (condicionCycle -> empty) in state 221
WARNING: reduce/reduce conflict in state 224 resolved using rule (decFuncCycle -> empty)
WARNING: rejected rule (estatutos -> empty) in state 224
WARNING: Rule (push_op_relacionales -> empty) is never reduced
WARNING: Rule (push_op_exp_masmenos -> empty) is never reduced
WARNING: Rule (push_op_exp_pordiv -> empty) is never reduced
WARNING: Rule (forCycle -> empty) is never reduced
WARNING: Rule (whileCycle -> empty) is never reduced
WARNING: Rule (condicionCycle -> empty) is never reduced
