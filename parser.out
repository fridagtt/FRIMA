Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTECHAR

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID punto_programa COLON inicio
Rule 2     programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio
Rule 3     programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio
Rule 4     programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio
Rule 5     punto_programa -> <empty>
Rule 6     inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON
Rule 7     punto_update_goto -> <empty>
Rule 8     dec_var_cycle -> dec_var dec_var_cycle
Rule 9     dec_var_cycle -> empty
Rule 10    dec_func_cycle -> dec_func dec_func_cycle
Rule 11    dec_func_cycle -> empty
Rule 12    dec_var -> simple_var
Rule 13    dec_var -> array
Rule 14    dec_var -> matrix
Rule 15    type -> ENTERO
Rule 16    type -> DECIMAL
Rule 17    type -> LETRA
Rule 18    simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
Rule 19    simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle
Rule 20    simpleVarCycle -> empty
Rule 21    punto_simple_var -> <empty>
Rule 22    array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
Rule 23    arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle
Rule 24    arrayCycle -> empty
Rule 25    punto_array -> <empty>
Rule 26    matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON
Rule 27    matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle
Rule 28    matrixCycle -> empty
Rule 29    punto_matrix -> <empty>
Rule 30    dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
Rule 31    dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
Rule 32    punto_global_func_var -> <empty>
Rule 33    dec_func_regresar -> REGRESAR exp SEMICOLON
Rule 34    dec_func_regresar -> empty
Rule 35    punto_end_function -> <empty>
Rule 36    punto_add_func -> <empty>
Rule 37    parameter -> type ID punto_add_parameter parameterCycle
Rule 38    parameter -> empty
Rule 39    parameterCycle -> COMMA type ID punto_add_parameter parameterCycle
Rule 40    parameterCycle -> empty
Rule 41    punto_add_parameter -> <empty>
Rule 42    estatutos -> estatutosCycle
Rule 43    estatutos -> func_regresar
Rule 44    estatutosCycle -> estatutos_opciones estatutos
Rule 45    estatutosCycle -> empty
Rule 46    estatutos_opciones -> asignar
Rule 47    estatutos_opciones -> llamada_func
Rule 48    estatutos_opciones -> ciclo_for
Rule 49    estatutos_opciones -> ciclo_while
Rule 50    estatutos_opciones -> condicion
Rule 51    estatutos_opciones -> imprimir
Rule 52    estatutos_opciones -> leer
Rule 53    func_regresar -> REGRESAR exp SEMICOLON
Rule 54    asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
Rule 55    variable -> ID variable_aux
Rule 56    variable_aux -> LBRACKET exp RBRACKET
Rule 57    variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 58    variable_aux -> punto_push_id empty
Rule 59    punto_push_id -> <empty>
Rule 60    push_op_igual -> <empty>
Rule 61    check_op_igual -> <empty>
Rule 62    leer -> LEER variable SEMICOLON
Rule 63    ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
Rule 64    punto_inicio_while -> <empty>
Rule 65    punto_medio_while -> <empty>
Rule 66    punto_fin_while -> <empty>
Rule 67    ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
Rule 68    punto_existe_id -> <empty>
Rule 69    punto_valida_int -> <empty>
Rule 70    punto_valida_exp -> <empty>
Rule 71    punto_termina_for -> <empty>
Rule 72    condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
Rule 73    condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
Rule 74    punto_si -> <empty>
Rule 75    punto_fin_si -> <empty>
Rule 76    punto_sino -> <empty>
Rule 77    hyper_exp -> super_exp hyper_exp_aux
Rule 78    hyper_exp_aux -> push_op_logicos super_exp check_op_logicos
Rule 79    hyper_exp_aux -> empty
Rule 80    check_op_logicos -> <empty>
Rule 81    push_op_logicos -> Y
Rule 82    push_op_logicos -> O
Rule 83    push_op_logicos -> empty
Rule 84    super_exp -> exp super_exp_aux
Rule 85    super_exp_aux -> push_op_relacionales exp check_op_relacionales
Rule 86    super_exp_aux -> empty
Rule 87    check_op_relacionales -> <empty>
Rule 88    push_op_relacionales -> GREATER
Rule 89    push_op_relacionales -> LESS
Rule 90    push_op_relacionales -> GREATEREQ
Rule 91    push_op_relacionales -> LESSEQ
Rule 92    push_op_relacionales -> NOTEQUAL
Rule 93    push_op_relacionales -> EQUAL
Rule 94    push_op_relacionales -> empty
Rule 95    exp -> term check_op_masmenos exp_aux
Rule 96    exp_aux -> push_op_exp_masmenos exp
Rule 97    exp_aux -> empty
Rule 98    push_op_exp_masmenos -> PLUS
Rule 99    push_op_exp_masmenos -> MINUS
Rule 100   push_op_exp_masmenos -> empty
Rule 101   check_op_masmenos -> <empty>
Rule 102   term -> factor check_op_pordiv term_aux
Rule 103   term_aux -> push_op_exp_pordiv term
Rule 104   term_aux -> empty
Rule 105   check_op_pordiv -> <empty>
Rule 106   push_op_exp_pordiv -> TIMES
Rule 107   push_op_exp_pordiv -> DIVIDE
Rule 108   push_op_exp_pordiv -> empty
Rule 109   factor -> factor_constante
Rule 110   factor -> factor_variable
Rule 111   factor -> factor_expresion
Rule 112   factor_constante -> CTEI push_int
Rule 113   factor_constante -> CTEF push_float
Rule 114   factor_variable -> ID push_id
Rule 115   factor_variable -> ID LBRACKET hyper_exp RBRACKET
Rule 116   factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
Rule 117   factor_variable -> ID llamada_func
Rule 118   factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
Rule 119   meter_fondo_falso -> <empty>
Rule 120   quitar_fondo_falso -> <empty>
Rule 121   push_int -> <empty>
Rule 122   push_float -> <empty>
Rule 123   push_id -> <empty>
Rule 124   func_params_aux -> COMMA hyper_exp func_params_aux
Rule 125   func_params_aux -> empty
Rule 126   func_params -> hyper_exp func_params_aux
Rule 127   func_params -> empty
Rule 128   llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON
Rule 129   punto_verify_func -> <empty>
Rule 130   punto_create_era -> <empty>
Rule 131   imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
Rule 132   imprimir_aux -> exp push_imprimir imprimirCycle
Rule 133   imprimir_aux -> CTESTRING push_imprimir imprimirCycle
Rule 134   imprimirCycle -> COMMA imprimir_aux
Rule 135   imprimirCycle -> empty
Rule 136   push_imprimir -> <empty>
Rule 137   empty -> <empty>

Terminals, with rules where they appear

ARROW                : 18 22 26
ASSIGN               : 54 67
COLON                : 1 2 3 4
COMMA                : 19 23 27 39 124 134
CTECHAR              : 
CTEF                 : 113
CTEI                 : 22 23 26 26 27 27 112
CTESTRING            : 133
DECIMAL              : 16
DIVIDE               : 107
ENTERO               : 15
EQUAL                : 93
FUNCION              : 30 31
GREATER              : 88
GREATEREQ            : 90
HASTA                : 67
ID                   : 1 2 3 4 18 19 22 23 26 27 30 31 37 39 55 67 114 115 116 117 128
IMPRIMIR             : 131
INICIO               : 6
LBRACE               : 6 30 31 63 67 72 73 73
LBRACKET             : 22 23 26 26 27 27 56 57 57 115 116 116
LEER                 : 62
LESS                 : 89
LESSEQ               : 91
LETRA                : 17
LPAREN               : 6 30 31 63 72 73 118 128 131
MIENTRAS             : 63
MINUS                : 99
NOTEQUAL             : 92
O                    : 82
PLUS                 : 98
PORCADA              : 67
PROGRAMA             : 1 2 3 4
RBRACE               : 6 30 31 63 67 72 73 73
RBRACKET             : 22 23 26 26 27 27 56 57 57 115 116 116
REGRESAR             : 33 53
RENGLON              : 22
RPAREN               : 6 30 31 63 72 73 118 128 131
SEMICOLON            : 6 18 22 26 30 31 33 53 54 62 63 67 72 73 128 131
SI                   : 72 73
SINO                 : 73
SINREGRESAR          : 31
TABLA                : 26
TIMES                : 106
VARIABLE             : 18
Y                    : 81
error                : 

Nonterminals, with rules where they appear

array                : 13
arrayCycle           : 22 23
asignar              : 46
check_op_igual       : 54
check_op_logicos     : 78
check_op_masmenos    : 95
check_op_pordiv      : 102
check_op_relacionales : 85
ciclo_for            : 48
ciclo_while          : 49
condicion            : 50
dec_func             : 10
dec_func_cycle       : 3 4 10
dec_func_regresar    : 
dec_var              : 8
dec_var_cycle        : 2 3 8 30 31
empty                : 9 11 20 24 28 34 38 40 45 58 79 83 86 94 97 100 104 108 125 127 135
estatutos            : 6 30 31 44 63 67 72 73 73
estatutosCycle       : 42
estatutos_opciones   : 44
exp                  : 33 53 56 57 57 84 85 96 132
exp_aux              : 95
factor               : 102
factor_constante     : 109
factor_expresion     : 111
factor_variable      : 110
func_params          : 128
func_params_aux      : 124 126
func_regresar        : 43
hyper_exp            : 54 63 67 67 72 73 115 116 116 118 124 126
hyper_exp_aux        : 77
imprimir             : 51
imprimirCycle        : 132 133
imprimir_aux         : 131 134
inicio               : 1 2 3 4
leer                 : 52
llamada_func         : 47 117
matrix               : 14
matrixCycle          : 26 27
meter_fondo_falso    : 118
parameter            : 30 31
parameterCycle       : 37 39
programa             : 0
punto_add_func       : 30 31
punto_add_parameter  : 37 39
punto_array          : 22 23
punto_create_era     : 128
punto_end_function   : 30 31
punto_existe_id      : 67
punto_fin_si         : 72 73
punto_fin_while      : 63
punto_global_func_var : 30
punto_inicio_while   : 63
punto_matrix         : 26 27
punto_medio_while    : 63
punto_programa       : 1 2 3 4
punto_push_id        : 58
punto_si             : 72 73
punto_simple_var     : 18 19
punto_sino           : 73
punto_termina_for    : 67
punto_update_goto    : 6
punto_valida_exp     : 67
punto_valida_int     : 67
punto_verify_func    : 128
push_float           : 113
push_id              : 114
push_imprimir        : 132 133
push_int             : 112
push_op_exp_masmenos : 96
push_op_exp_pordiv   : 103
push_op_igual        : 54
push_op_logicos      : 78
push_op_relacionales : 85
quitar_fondo_falso   : 118
simpleVarCycle       : 18 19
simple_var           : 12
super_exp            : 77 78
super_exp_aux        : 84
term                 : 95 103
term_aux             : 102
type                 : 18 22 26 30 37 39
variable             : 54 62
variable_aux         : 55

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID punto_programa COLON inicio
    (2) programa -> . PROGRAMA ID punto_programa COLON dec_var_cycle inicio
    (3) programa -> . PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> . PROGRAMA ID punto_programa COLON dec_func_cycle inicio

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID punto_programa COLON inicio
    (2) programa -> PROGRAMA . ID punto_programa COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA . ID punto_programa COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA . ID punto_programa COLON dec_func_cycle inicio

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . punto_programa COLON inicio
    (2) programa -> PROGRAMA ID . punto_programa COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA ID . punto_programa COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA ID . punto_programa COLON dec_func_cycle inicio
    (5) punto_programa -> .

    COLON           reduce using rule 5 (punto_programa -> .)

    punto_programa                 shift and go to state 4

state 4

    (1) programa -> PROGRAMA ID punto_programa . COLON inicio
    (2) programa -> PROGRAMA ID punto_programa . COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA ID punto_programa . COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA ID punto_programa . COLON dec_func_cycle inicio

    COLON           shift and go to state 5


state 5

    (1) programa -> PROGRAMA ID punto_programa COLON . inicio
    (2) programa -> PROGRAMA ID punto_programa COLON . dec_var_cycle inicio
    (3) programa -> PROGRAMA ID punto_programa COLON . dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA ID punto_programa COLON . dec_func_cycle inicio
    (6) inicio -> . INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON
    (8) dec_var_cycle -> . dec_var dec_var_cycle
    (9) dec_var_cycle -> . empty
    (10) dec_func_cycle -> . dec_func dec_func_cycle
    (11) dec_func_cycle -> . empty
    (12) dec_var -> . simple_var
    (13) dec_var -> . array
    (14) dec_var -> . matrix
    (137) empty -> .
    (30) dec_func -> . FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (31) dec_func -> . FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (18) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (22) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (26) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

  ! shift/reduce conflict for INICIO resolved as shift
  ! shift/reduce conflict for FUNCION resolved as shift
    INICIO          shift and go to state 9
    FUNCION         shift and go to state 16
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

  ! INICIO          [ reduce using rule 137 (empty -> .) ]
  ! FUNCION         [ reduce using rule 137 (empty -> .) ]

    inicio                         shift and go to state 6
    dec_var_cycle                  shift and go to state 7
    dec_func_cycle                 shift and go to state 8
    dec_var                        shift and go to state 10
    empty                          shift and go to state 11
    dec_func                       shift and go to state 12
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 6

    (1) programa -> PROGRAMA ID punto_programa COLON inicio .

    $end            reduce using rule 1 (programa -> PROGRAMA ID punto_programa COLON inicio .)


state 7

    (2) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle . inicio
    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle . dec_func_cycle inicio
    (6) inicio -> . INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON
    (10) dec_func_cycle -> . dec_func dec_func_cycle
    (11) dec_func_cycle -> . empty
    (30) dec_func -> . FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (31) dec_func -> . FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (137) empty -> .

  ! shift/reduce conflict for INICIO resolved as shift
    INICIO          shift and go to state 9
    FUNCION         shift and go to state 16

  ! INICIO          [ reduce using rule 137 (empty -> .) ]

    inicio                         shift and go to state 20
    dec_func_cycle                 shift and go to state 21
    dec_func                       shift and go to state 12
    empty                          shift and go to state 22

state 8

    (4) programa -> PROGRAMA ID punto_programa COLON dec_func_cycle . inicio
    (6) inicio -> . INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON

    INICIO          shift and go to state 9

    inicio                         shift and go to state 23

state 9

    (6) inicio -> INICIO . LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON

    LPAREN          shift and go to state 24


state 10

    (8) dec_var_cycle -> dec_var . dec_var_cycle
    (8) dec_var_cycle -> . dec_var dec_var_cycle
    (9) dec_var_cycle -> . empty
    (12) dec_var -> . simple_var
    (13) dec_var -> . array
    (14) dec_var -> . matrix
    (137) empty -> .
    (18) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (22) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (26) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    INICIO          reduce using rule 137 (empty -> .)
    FUNCION         reduce using rule 137 (empty -> .)
    REGRESAR        reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    PORCADA         reduce using rule 137 (empty -> .)
    MIENTRAS        reduce using rule 137 (empty -> .)
    SI              reduce using rule 137 (empty -> .)
    IMPRIMIR        reduce using rule 137 (empty -> .)
    LEER            reduce using rule 137 (empty -> .)
    RBRACE          reduce using rule 137 (empty -> .)
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

    dec_var                        shift and go to state 10
    dec_var_cycle                  shift and go to state 25
    empty                          shift and go to state 26
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 11

    (9) dec_var_cycle -> empty .
    (11) dec_func_cycle -> empty .

  ! reduce/reduce conflict for INICIO resolved using rule 9 (dec_var_cycle -> empty .)
    INICIO          reduce using rule 9 (dec_var_cycle -> empty .)
    FUNCION         reduce using rule 9 (dec_var_cycle -> empty .)

  ! INICIO          [ reduce using rule 11 (dec_func_cycle -> empty .) ]


state 12

    (10) dec_func_cycle -> dec_func . dec_func_cycle
    (10) dec_func_cycle -> . dec_func dec_func_cycle
    (11) dec_func_cycle -> . empty
    (30) dec_func -> . FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (31) dec_func -> . FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (137) empty -> .

    FUNCION         shift and go to state 16
    INICIO          reduce using rule 137 (empty -> .)

    dec_func                       shift and go to state 12
    dec_func_cycle                 shift and go to state 27
    empty                          shift and go to state 22

state 13

    (12) dec_var -> simple_var .

    VARIABLE        reduce using rule 12 (dec_var -> simple_var .)
    RENGLON         reduce using rule 12 (dec_var -> simple_var .)
    TABLA           reduce using rule 12 (dec_var -> simple_var .)
    INICIO          reduce using rule 12 (dec_var -> simple_var .)
    FUNCION         reduce using rule 12 (dec_var -> simple_var .)
    REGRESAR        reduce using rule 12 (dec_var -> simple_var .)
    ID              reduce using rule 12 (dec_var -> simple_var .)
    PORCADA         reduce using rule 12 (dec_var -> simple_var .)
    MIENTRAS        reduce using rule 12 (dec_var -> simple_var .)
    SI              reduce using rule 12 (dec_var -> simple_var .)
    IMPRIMIR        reduce using rule 12 (dec_var -> simple_var .)
    LEER            reduce using rule 12 (dec_var -> simple_var .)
    RBRACE          reduce using rule 12 (dec_var -> simple_var .)


state 14

    (13) dec_var -> array .

    VARIABLE        reduce using rule 13 (dec_var -> array .)
    RENGLON         reduce using rule 13 (dec_var -> array .)
    TABLA           reduce using rule 13 (dec_var -> array .)
    INICIO          reduce using rule 13 (dec_var -> array .)
    FUNCION         reduce using rule 13 (dec_var -> array .)
    REGRESAR        reduce using rule 13 (dec_var -> array .)
    ID              reduce using rule 13 (dec_var -> array .)
    PORCADA         reduce using rule 13 (dec_var -> array .)
    MIENTRAS        reduce using rule 13 (dec_var -> array .)
    SI              reduce using rule 13 (dec_var -> array .)
    IMPRIMIR        reduce using rule 13 (dec_var -> array .)
    LEER            reduce using rule 13 (dec_var -> array .)
    RBRACE          reduce using rule 13 (dec_var -> array .)


state 15

    (14) dec_var -> matrix .

    VARIABLE        reduce using rule 14 (dec_var -> matrix .)
    RENGLON         reduce using rule 14 (dec_var -> matrix .)
    TABLA           reduce using rule 14 (dec_var -> matrix .)
    INICIO          reduce using rule 14 (dec_var -> matrix .)
    FUNCION         reduce using rule 14 (dec_var -> matrix .)
    REGRESAR        reduce using rule 14 (dec_var -> matrix .)
    ID              reduce using rule 14 (dec_var -> matrix .)
    PORCADA         reduce using rule 14 (dec_var -> matrix .)
    MIENTRAS        reduce using rule 14 (dec_var -> matrix .)
    SI              reduce using rule 14 (dec_var -> matrix .)
    IMPRIMIR        reduce using rule 14 (dec_var -> matrix .)
    LEER            reduce using rule 14 (dec_var -> matrix .)
    RBRACE          reduce using rule 14 (dec_var -> matrix .)


state 16

    (30) dec_func -> FUNCION . type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (31) dec_func -> FUNCION . SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (15) type -> . ENTERO
    (16) type -> . DECIMAL
    (17) type -> . LETRA

    SINREGRESAR     shift and go to state 29
    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32

    type                           shift and go to state 28

state 17

    (18) simple_var -> VARIABLE . type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (15) type -> . ENTERO
    (16) type -> . DECIMAL
    (17) type -> . LETRA

    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32

    type                           shift and go to state 33

state 18

    (22) array -> RENGLON . type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (15) type -> . ENTERO
    (16) type -> . DECIMAL
    (17) type -> . LETRA

    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32

    type                           shift and go to state 34

state 19

    (26) matrix -> TABLA . type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON
    (15) type -> . ENTERO
    (16) type -> . DECIMAL
    (17) type -> . LETRA

    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32

    type                           shift and go to state 35

state 20

    (2) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio .

    $end            reduce using rule 2 (programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio .)


state 21

    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle . inicio
    (6) inicio -> . INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON

    INICIO          shift and go to state 9

    inicio                         shift and go to state 36

state 22

    (11) dec_func_cycle -> empty .

    INICIO          reduce using rule 11 (dec_func_cycle -> empty .)


state 23

    (4) programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio .

    $end            reduce using rule 4 (programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio .)


state 24

    (6) inicio -> INICIO LPAREN . RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON

    RPAREN          shift and go to state 37


state 25

    (8) dec_var_cycle -> dec_var dec_var_cycle .

    INICIO          reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)
    FUNCION         reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)
    REGRESAR        reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)
    ID              reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)
    PORCADA         reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)
    MIENTRAS        reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)
    SI              reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)
    IMPRIMIR        reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)
    LEER            reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)
    RBRACE          reduce using rule 8 (dec_var_cycle -> dec_var dec_var_cycle .)


state 26

    (9) dec_var_cycle -> empty .

    INICIO          reduce using rule 9 (dec_var_cycle -> empty .)
    FUNCION         reduce using rule 9 (dec_var_cycle -> empty .)
    REGRESAR        reduce using rule 9 (dec_var_cycle -> empty .)
    ID              reduce using rule 9 (dec_var_cycle -> empty .)
    PORCADA         reduce using rule 9 (dec_var_cycle -> empty .)
    MIENTRAS        reduce using rule 9 (dec_var_cycle -> empty .)
    SI              reduce using rule 9 (dec_var_cycle -> empty .)
    IMPRIMIR        reduce using rule 9 (dec_var_cycle -> empty .)
    LEER            reduce using rule 9 (dec_var_cycle -> empty .)
    RBRACE          reduce using rule 9 (dec_var_cycle -> empty .)


state 27

    (10) dec_func_cycle -> dec_func dec_func_cycle .

    INICIO          reduce using rule 10 (dec_func_cycle -> dec_func dec_func_cycle .)


state 28

    (30) dec_func -> FUNCION type . ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    ID              shift and go to state 38


state 29

    (31) dec_func -> FUNCION SINREGRESAR . ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    ID              shift and go to state 39


state 30

    (15) type -> ENTERO .

    ID              reduce using rule 15 (type -> ENTERO .)
    ARROW           reduce using rule 15 (type -> ENTERO .)


state 31

    (16) type -> DECIMAL .

    ID              reduce using rule 16 (type -> DECIMAL .)
    ARROW           reduce using rule 16 (type -> DECIMAL .)


state 32

    (17) type -> LETRA .

    ID              reduce using rule 17 (type -> LETRA .)
    ARROW           reduce using rule 17 (type -> LETRA .)


state 33

    (18) simple_var -> VARIABLE type . ARROW ID punto_simple_var simpleVarCycle SEMICOLON

    ARROW           shift and go to state 40


state 34

    (22) array -> RENGLON type . ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON

    ARROW           shift and go to state 41


state 35

    (26) matrix -> TABLA type . ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    ARROW           shift and go to state 42


state 36

    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio .

    $end            reduce using rule 3 (programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio .)


state 37

    (6) inicio -> INICIO LPAREN RPAREN . LBRACE punto_update_goto estatutos RBRACE SEMICOLON

    LBRACE          shift and go to state 43


state 38

    (30) dec_func -> FUNCION type ID . punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (36) punto_add_func -> .

    LPAREN          reduce using rule 36 (punto_add_func -> .)

    punto_add_func                 shift and go to state 44

state 39

    (31) dec_func -> FUNCION SINREGRESAR ID . punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (36) punto_add_func -> .

    LPAREN          reduce using rule 36 (punto_add_func -> .)

    punto_add_func                 shift and go to state 45

state 40

    (18) simple_var -> VARIABLE type ARROW . ID punto_simple_var simpleVarCycle SEMICOLON

    ID              shift and go to state 46


state 41

    (22) array -> RENGLON type ARROW . ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON

    ID              shift and go to state 47


state 42

    (26) matrix -> TABLA type ARROW . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    ID              shift and go to state 48


state 43

    (6) inicio -> INICIO LPAREN RPAREN LBRACE . punto_update_goto estatutos RBRACE SEMICOLON
    (7) punto_update_goto -> .

    REGRESAR        reduce using rule 7 (punto_update_goto -> .)
    ID              reduce using rule 7 (punto_update_goto -> .)
    PORCADA         reduce using rule 7 (punto_update_goto -> .)
    MIENTRAS        reduce using rule 7 (punto_update_goto -> .)
    SI              reduce using rule 7 (punto_update_goto -> .)
    IMPRIMIR        reduce using rule 7 (punto_update_goto -> .)
    LEER            reduce using rule 7 (punto_update_goto -> .)
    RBRACE          reduce using rule 7 (punto_update_goto -> .)

    punto_update_goto              shift and go to state 49

state 44

    (30) dec_func -> FUNCION type ID punto_add_func . punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (32) punto_global_func_var -> .

    LPAREN          reduce using rule 32 (punto_global_func_var -> .)

    punto_global_func_var          shift and go to state 50

state 45

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func . LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    LPAREN          shift and go to state 51


state 46

    (18) simple_var -> VARIABLE type ARROW ID . punto_simple_var simpleVarCycle SEMICOLON
    (21) punto_simple_var -> .

    COMMA           reduce using rule 21 (punto_simple_var -> .)
    SEMICOLON       reduce using rule 21 (punto_simple_var -> .)

    punto_simple_var               shift and go to state 52

state 47

    (22) array -> RENGLON type ARROW ID . LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON

    LBRACKET        shift and go to state 53


state 48

    (26) matrix -> TABLA type ARROW ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    LBRACKET        shift and go to state 54


state 49

    (6) inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto . estatutos RBRACE SEMICOLON
    (42) estatutos -> . estatutosCycle
    (43) estatutos -> . func_regresar
    (44) estatutosCycle -> . estatutos_opciones estatutos
    (45) estatutosCycle -> . empty
    (53) func_regresar -> . REGRESAR exp SEMICOLON
    (46) estatutos_opciones -> . asignar
    (47) estatutos_opciones -> . llamada_func
    (48) estatutos_opciones -> . ciclo_for
    (49) estatutos_opciones -> . ciclo_while
    (50) estatutos_opciones -> . condicion
    (51) estatutos_opciones -> . imprimir
    (52) estatutos_opciones -> . leer
    (137) empty -> .
    (54) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (128) llamada_func -> . ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON
    (67) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (63) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (72) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (73) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (131) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (62) leer -> . LEER variable SEMICOLON
    (55) variable -> . ID variable_aux

    REGRESAR        shift and go to state 60
    RBRACE          reduce using rule 137 (empty -> .)
    ID              shift and go to state 69
    PORCADA         shift and go to state 70
    MIENTRAS        shift and go to state 71
    SI              shift and go to state 72
    IMPRIMIR        shift and go to state 73
    LEER            shift and go to state 74

    estatutos                      shift and go to state 55
    estatutosCycle                 shift and go to state 56
    func_regresar                  shift and go to state 57
    estatutos_opciones             shift and go to state 58
    empty                          shift and go to state 59
    asignar                        shift and go to state 61
    llamada_func                   shift and go to state 62
    ciclo_for                      shift and go to state 63
    ciclo_while                    shift and go to state 64
    condicion                      shift and go to state 65
    imprimir                       shift and go to state 66
    leer                           shift and go to state 67
    variable                       shift and go to state 68

state 50

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var . LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    LPAREN          shift and go to state 75


state 51

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN . parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (37) parameter -> . type ID punto_add_parameter parameterCycle
    (38) parameter -> . empty
    (15) type -> . ENTERO
    (16) type -> . DECIMAL
    (17) type -> . LETRA
    (137) empty -> .

    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32
    RPAREN          reduce using rule 137 (empty -> .)

    parameter                      shift and go to state 76
    type                           shift and go to state 77
    empty                          shift and go to state 78

state 52

    (18) simple_var -> VARIABLE type ARROW ID punto_simple_var . simpleVarCycle SEMICOLON
    (19) simpleVarCycle -> . COMMA ID punto_simple_var simpleVarCycle
    (20) simpleVarCycle -> . empty
    (137) empty -> .

    COMMA           shift and go to state 80
    SEMICOLON       reduce using rule 137 (empty -> .)

    simpleVarCycle                 shift and go to state 79
    empty                          shift and go to state 81

state 53

    (22) array -> RENGLON type ARROW ID LBRACKET . CTEI RBRACKET punto_array arrayCycle SEMICOLON

    CTEI            shift and go to state 82


state 54

    (26) matrix -> TABLA type ARROW ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    CTEI            shift and go to state 83


state 55

    (6) inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos . RBRACE SEMICOLON

    RBRACE          shift and go to state 84


state 56

    (42) estatutos -> estatutosCycle .

    RBRACE          reduce using rule 42 (estatutos -> estatutosCycle .)


state 57

    (43) estatutos -> func_regresar .

    RBRACE          reduce using rule 43 (estatutos -> func_regresar .)


state 58

    (44) estatutosCycle -> estatutos_opciones . estatutos
    (42) estatutos -> . estatutosCycle
    (43) estatutos -> . func_regresar
    (44) estatutosCycle -> . estatutos_opciones estatutos
    (45) estatutosCycle -> . empty
    (53) func_regresar -> . REGRESAR exp SEMICOLON
    (46) estatutos_opciones -> . asignar
    (47) estatutos_opciones -> . llamada_func
    (48) estatutos_opciones -> . ciclo_for
    (49) estatutos_opciones -> . ciclo_while
    (50) estatutos_opciones -> . condicion
    (51) estatutos_opciones -> . imprimir
    (52) estatutos_opciones -> . leer
    (137) empty -> .
    (54) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (128) llamada_func -> . ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON
    (67) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (63) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (72) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (73) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (131) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (62) leer -> . LEER variable SEMICOLON
    (55) variable -> . ID variable_aux

    REGRESAR        shift and go to state 60
    RBRACE          reduce using rule 137 (empty -> .)
    ID              shift and go to state 69
    PORCADA         shift and go to state 70
    MIENTRAS        shift and go to state 71
    SI              shift and go to state 72
    IMPRIMIR        shift and go to state 73
    LEER            shift and go to state 74

    estatutos_opciones             shift and go to state 58
    estatutos                      shift and go to state 85
    estatutosCycle                 shift and go to state 56
    func_regresar                  shift and go to state 57
    empty                          shift and go to state 59
    asignar                        shift and go to state 61
    llamada_func                   shift and go to state 62
    ciclo_for                      shift and go to state 63
    ciclo_while                    shift and go to state 64
    condicion                      shift and go to state 65
    imprimir                       shift and go to state 66
    leer                           shift and go to state 67
    variable                       shift and go to state 68

state 59

    (45) estatutosCycle -> empty .

    RBRACE          reduce using rule 45 (estatutosCycle -> empty .)


state 60

    (53) func_regresar -> REGRESAR . exp SEMICOLON
    (95) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    exp                            shift and go to state 86
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 61

    (46) estatutos_opciones -> asignar .

    REGRESAR        reduce using rule 46 (estatutos_opciones -> asignar .)
    ID              reduce using rule 46 (estatutos_opciones -> asignar .)
    PORCADA         reduce using rule 46 (estatutos_opciones -> asignar .)
    MIENTRAS        reduce using rule 46 (estatutos_opciones -> asignar .)
    SI              reduce using rule 46 (estatutos_opciones -> asignar .)
    IMPRIMIR        reduce using rule 46 (estatutos_opciones -> asignar .)
    LEER            reduce using rule 46 (estatutos_opciones -> asignar .)
    RBRACE          reduce using rule 46 (estatutos_opciones -> asignar .)


state 62

    (47) estatutos_opciones -> llamada_func .

    REGRESAR        reduce using rule 47 (estatutos_opciones -> llamada_func .)
    ID              reduce using rule 47 (estatutos_opciones -> llamada_func .)
    PORCADA         reduce using rule 47 (estatutos_opciones -> llamada_func .)
    MIENTRAS        reduce using rule 47 (estatutos_opciones -> llamada_func .)
    SI              reduce using rule 47 (estatutos_opciones -> llamada_func .)
    IMPRIMIR        reduce using rule 47 (estatutos_opciones -> llamada_func .)
    LEER            reduce using rule 47 (estatutos_opciones -> llamada_func .)
    RBRACE          reduce using rule 47 (estatutos_opciones -> llamada_func .)


state 63

    (48) estatutos_opciones -> ciclo_for .

    REGRESAR        reduce using rule 48 (estatutos_opciones -> ciclo_for .)
    ID              reduce using rule 48 (estatutos_opciones -> ciclo_for .)
    PORCADA         reduce using rule 48 (estatutos_opciones -> ciclo_for .)
    MIENTRAS        reduce using rule 48 (estatutos_opciones -> ciclo_for .)
    SI              reduce using rule 48 (estatutos_opciones -> ciclo_for .)
    IMPRIMIR        reduce using rule 48 (estatutos_opciones -> ciclo_for .)
    LEER            reduce using rule 48 (estatutos_opciones -> ciclo_for .)
    RBRACE          reduce using rule 48 (estatutos_opciones -> ciclo_for .)


state 64

    (49) estatutos_opciones -> ciclo_while .

    REGRESAR        reduce using rule 49 (estatutos_opciones -> ciclo_while .)
    ID              reduce using rule 49 (estatutos_opciones -> ciclo_while .)
    PORCADA         reduce using rule 49 (estatutos_opciones -> ciclo_while .)
    MIENTRAS        reduce using rule 49 (estatutos_opciones -> ciclo_while .)
    SI              reduce using rule 49 (estatutos_opciones -> ciclo_while .)
    IMPRIMIR        reduce using rule 49 (estatutos_opciones -> ciclo_while .)
    LEER            reduce using rule 49 (estatutos_opciones -> ciclo_while .)
    RBRACE          reduce using rule 49 (estatutos_opciones -> ciclo_while .)


state 65

    (50) estatutos_opciones -> condicion .

    REGRESAR        reduce using rule 50 (estatutos_opciones -> condicion .)
    ID              reduce using rule 50 (estatutos_opciones -> condicion .)
    PORCADA         reduce using rule 50 (estatutos_opciones -> condicion .)
    MIENTRAS        reduce using rule 50 (estatutos_opciones -> condicion .)
    SI              reduce using rule 50 (estatutos_opciones -> condicion .)
    IMPRIMIR        reduce using rule 50 (estatutos_opciones -> condicion .)
    LEER            reduce using rule 50 (estatutos_opciones -> condicion .)
    RBRACE          reduce using rule 50 (estatutos_opciones -> condicion .)


state 66

    (51) estatutos_opciones -> imprimir .

    REGRESAR        reduce using rule 51 (estatutos_opciones -> imprimir .)
    ID              reduce using rule 51 (estatutos_opciones -> imprimir .)
    PORCADA         reduce using rule 51 (estatutos_opciones -> imprimir .)
    MIENTRAS        reduce using rule 51 (estatutos_opciones -> imprimir .)
    SI              reduce using rule 51 (estatutos_opciones -> imprimir .)
    IMPRIMIR        reduce using rule 51 (estatutos_opciones -> imprimir .)
    LEER            reduce using rule 51 (estatutos_opciones -> imprimir .)
    RBRACE          reduce using rule 51 (estatutos_opciones -> imprimir .)


state 67

    (52) estatutos_opciones -> leer .

    REGRESAR        reduce using rule 52 (estatutos_opciones -> leer .)
    ID              reduce using rule 52 (estatutos_opciones -> leer .)
    PORCADA         reduce using rule 52 (estatutos_opciones -> leer .)
    MIENTRAS        reduce using rule 52 (estatutos_opciones -> leer .)
    SI              reduce using rule 52 (estatutos_opciones -> leer .)
    IMPRIMIR        reduce using rule 52 (estatutos_opciones -> leer .)
    LEER            reduce using rule 52 (estatutos_opciones -> leer .)
    RBRACE          reduce using rule 52 (estatutos_opciones -> leer .)


state 68

    (54) asignar -> variable . ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON

    ASSIGN          shift and go to state 96


state 69

    (128) llamada_func -> ID . punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON
    (55) variable -> ID . variable_aux
    (129) punto_verify_func -> .
    (56) variable_aux -> . LBRACKET exp RBRACKET
    (57) variable_aux -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (58) variable_aux -> . punto_push_id empty
    (59) punto_push_id -> .

    LPAREN          reduce using rule 129 (punto_verify_func -> .)
    LBRACKET        shift and go to state 99
    ASSIGN          reduce using rule 59 (punto_push_id -> .)

    punto_verify_func              shift and go to state 97
    variable_aux                   shift and go to state 98
    punto_push_id                  shift and go to state 100

state 70

    (67) ciclo_for -> PORCADA . ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON

    ID              shift and go to state 101


state 71

    (63) ciclo_while -> MIENTRAS . punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (64) punto_inicio_while -> .

    LPAREN          reduce using rule 64 (punto_inicio_while -> .)

    punto_inicio_while             shift and go to state 102

state 72

    (72) condicion -> SI . LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (73) condicion -> SI . LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON

    LPAREN          shift and go to state 103


state 73

    (131) imprimir -> IMPRIMIR . LPAREN imprimir_aux RPAREN SEMICOLON

    LPAREN          shift and go to state 104


state 74

    (62) leer -> LEER . variable SEMICOLON
    (55) variable -> . ID variable_aux

    ID              shift and go to state 106

    variable                       shift and go to state 105

state 75

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN . parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (37) parameter -> . type ID punto_add_parameter parameterCycle
    (38) parameter -> . empty
    (15) type -> . ENTERO
    (16) type -> . DECIMAL
    (17) type -> . LETRA
    (137) empty -> .

    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32
    RPAREN          reduce using rule 137 (empty -> .)

    type                           shift and go to state 77
    parameter                      shift and go to state 107
    empty                          shift and go to state 78

state 76

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter . RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    RPAREN          shift and go to state 108


state 77

    (37) parameter -> type . ID punto_add_parameter parameterCycle

    ID              shift and go to state 109


state 78

    (38) parameter -> empty .

    RPAREN          reduce using rule 38 (parameter -> empty .)


state 79

    (18) simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle . SEMICOLON

    SEMICOLON       shift and go to state 110


state 80

    (19) simpleVarCycle -> COMMA . ID punto_simple_var simpleVarCycle

    ID              shift and go to state 111


state 81

    (20) simpleVarCycle -> empty .

    SEMICOLON       reduce using rule 20 (simpleVarCycle -> empty .)


state 82

    (22) array -> RENGLON type ARROW ID LBRACKET CTEI . RBRACKET punto_array arrayCycle SEMICOLON

    RBRACKET        shift and go to state 112


state 83

    (26) matrix -> TABLA type ARROW ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    RBRACKET        shift and go to state 113


state 84

    (6) inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 114


state 85

    (44) estatutosCycle -> estatutos_opciones estatutos .

    RBRACE          reduce using rule 44 (estatutosCycle -> estatutos_opciones estatutos .)


state 86

    (53) func_regresar -> REGRESAR exp . SEMICOLON

    SEMICOLON       shift and go to state 115


state 87

    (95) exp -> term . check_op_masmenos exp_aux
    (101) check_op_masmenos -> .

    PLUS            reduce using rule 101 (check_op_masmenos -> .)
    MINUS           reduce using rule 101 (check_op_masmenos -> .)
    CTEI            reduce using rule 101 (check_op_masmenos -> .)
    CTEF            reduce using rule 101 (check_op_masmenos -> .)
    ID              reduce using rule 101 (check_op_masmenos -> .)
    LPAREN          reduce using rule 101 (check_op_masmenos -> .)
    SEMICOLON       reduce using rule 101 (check_op_masmenos -> .)
    RBRACKET        reduce using rule 101 (check_op_masmenos -> .)
    GREATER         reduce using rule 101 (check_op_masmenos -> .)
    LESS            reduce using rule 101 (check_op_masmenos -> .)
    GREATEREQ       reduce using rule 101 (check_op_masmenos -> .)
    LESSEQ          reduce using rule 101 (check_op_masmenos -> .)
    NOTEQUAL        reduce using rule 101 (check_op_masmenos -> .)
    EQUAL           reduce using rule 101 (check_op_masmenos -> .)
    Y               reduce using rule 101 (check_op_masmenos -> .)
    O               reduce using rule 101 (check_op_masmenos -> .)
    RPAREN          reduce using rule 101 (check_op_masmenos -> .)
    COMMA           reduce using rule 101 (check_op_masmenos -> .)
    HASTA           reduce using rule 101 (check_op_masmenos -> .)
    LBRACE          reduce using rule 101 (check_op_masmenos -> .)

    check_op_masmenos              shift and go to state 116

state 88

    (102) term -> factor . check_op_pordiv term_aux
    (105) check_op_pordiv -> .

    TIMES           reduce using rule 105 (check_op_pordiv -> .)
    DIVIDE          reduce using rule 105 (check_op_pordiv -> .)
    CTEI            reduce using rule 105 (check_op_pordiv -> .)
    CTEF            reduce using rule 105 (check_op_pordiv -> .)
    ID              reduce using rule 105 (check_op_pordiv -> .)
    LPAREN          reduce using rule 105 (check_op_pordiv -> .)
    PLUS            reduce using rule 105 (check_op_pordiv -> .)
    MINUS           reduce using rule 105 (check_op_pordiv -> .)
    SEMICOLON       reduce using rule 105 (check_op_pordiv -> .)
    RBRACKET        reduce using rule 105 (check_op_pordiv -> .)
    GREATER         reduce using rule 105 (check_op_pordiv -> .)
    LESS            reduce using rule 105 (check_op_pordiv -> .)
    GREATEREQ       reduce using rule 105 (check_op_pordiv -> .)
    LESSEQ          reduce using rule 105 (check_op_pordiv -> .)
    NOTEQUAL        reduce using rule 105 (check_op_pordiv -> .)
    EQUAL           reduce using rule 105 (check_op_pordiv -> .)
    Y               reduce using rule 105 (check_op_pordiv -> .)
    O               reduce using rule 105 (check_op_pordiv -> .)
    RPAREN          reduce using rule 105 (check_op_pordiv -> .)
    COMMA           reduce using rule 105 (check_op_pordiv -> .)
    HASTA           reduce using rule 105 (check_op_pordiv -> .)
    LBRACE          reduce using rule 105 (check_op_pordiv -> .)

    check_op_pordiv                shift and go to state 117

state 89

    (109) factor -> factor_constante .

    TIMES           reduce using rule 109 (factor -> factor_constante .)
    DIVIDE          reduce using rule 109 (factor -> factor_constante .)
    CTEI            reduce using rule 109 (factor -> factor_constante .)
    CTEF            reduce using rule 109 (factor -> factor_constante .)
    ID              reduce using rule 109 (factor -> factor_constante .)
    LPAREN          reduce using rule 109 (factor -> factor_constante .)
    PLUS            reduce using rule 109 (factor -> factor_constante .)
    MINUS           reduce using rule 109 (factor -> factor_constante .)
    SEMICOLON       reduce using rule 109 (factor -> factor_constante .)
    RBRACKET        reduce using rule 109 (factor -> factor_constante .)
    GREATER         reduce using rule 109 (factor -> factor_constante .)
    LESS            reduce using rule 109 (factor -> factor_constante .)
    GREATEREQ       reduce using rule 109 (factor -> factor_constante .)
    LESSEQ          reduce using rule 109 (factor -> factor_constante .)
    NOTEQUAL        reduce using rule 109 (factor -> factor_constante .)
    EQUAL           reduce using rule 109 (factor -> factor_constante .)
    Y               reduce using rule 109 (factor -> factor_constante .)
    O               reduce using rule 109 (factor -> factor_constante .)
    RPAREN          reduce using rule 109 (factor -> factor_constante .)
    COMMA           reduce using rule 109 (factor -> factor_constante .)
    HASTA           reduce using rule 109 (factor -> factor_constante .)
    LBRACE          reduce using rule 109 (factor -> factor_constante .)


state 90

    (110) factor -> factor_variable .

    TIMES           reduce using rule 110 (factor -> factor_variable .)
    DIVIDE          reduce using rule 110 (factor -> factor_variable .)
    CTEI            reduce using rule 110 (factor -> factor_variable .)
    CTEF            reduce using rule 110 (factor -> factor_variable .)
    ID              reduce using rule 110 (factor -> factor_variable .)
    LPAREN          reduce using rule 110 (factor -> factor_variable .)
    PLUS            reduce using rule 110 (factor -> factor_variable .)
    MINUS           reduce using rule 110 (factor -> factor_variable .)
    SEMICOLON       reduce using rule 110 (factor -> factor_variable .)
    RBRACKET        reduce using rule 110 (factor -> factor_variable .)
    GREATER         reduce using rule 110 (factor -> factor_variable .)
    LESS            reduce using rule 110 (factor -> factor_variable .)
    GREATEREQ       reduce using rule 110 (factor -> factor_variable .)
    LESSEQ          reduce using rule 110 (factor -> factor_variable .)
    NOTEQUAL        reduce using rule 110 (factor -> factor_variable .)
    EQUAL           reduce using rule 110 (factor -> factor_variable .)
    Y               reduce using rule 110 (factor -> factor_variable .)
    O               reduce using rule 110 (factor -> factor_variable .)
    RPAREN          reduce using rule 110 (factor -> factor_variable .)
    COMMA           reduce using rule 110 (factor -> factor_variable .)
    HASTA           reduce using rule 110 (factor -> factor_variable .)
    LBRACE          reduce using rule 110 (factor -> factor_variable .)


state 91

    (111) factor -> factor_expresion .

    TIMES           reduce using rule 111 (factor -> factor_expresion .)
    DIVIDE          reduce using rule 111 (factor -> factor_expresion .)
    CTEI            reduce using rule 111 (factor -> factor_expresion .)
    CTEF            reduce using rule 111 (factor -> factor_expresion .)
    ID              reduce using rule 111 (factor -> factor_expresion .)
    LPAREN          reduce using rule 111 (factor -> factor_expresion .)
    PLUS            reduce using rule 111 (factor -> factor_expresion .)
    MINUS           reduce using rule 111 (factor -> factor_expresion .)
    SEMICOLON       reduce using rule 111 (factor -> factor_expresion .)
    RBRACKET        reduce using rule 111 (factor -> factor_expresion .)
    GREATER         reduce using rule 111 (factor -> factor_expresion .)
    LESS            reduce using rule 111 (factor -> factor_expresion .)
    GREATEREQ       reduce using rule 111 (factor -> factor_expresion .)
    LESSEQ          reduce using rule 111 (factor -> factor_expresion .)
    NOTEQUAL        reduce using rule 111 (factor -> factor_expresion .)
    EQUAL           reduce using rule 111 (factor -> factor_expresion .)
    Y               reduce using rule 111 (factor -> factor_expresion .)
    O               reduce using rule 111 (factor -> factor_expresion .)
    RPAREN          reduce using rule 111 (factor -> factor_expresion .)
    COMMA           reduce using rule 111 (factor -> factor_expresion .)
    HASTA           reduce using rule 111 (factor -> factor_expresion .)
    LBRACE          reduce using rule 111 (factor -> factor_expresion .)


state 92

    (112) factor_constante -> CTEI . push_int
    (121) push_int -> .

    TIMES           reduce using rule 121 (push_int -> .)
    DIVIDE          reduce using rule 121 (push_int -> .)
    CTEI            reduce using rule 121 (push_int -> .)
    CTEF            reduce using rule 121 (push_int -> .)
    ID              reduce using rule 121 (push_int -> .)
    LPAREN          reduce using rule 121 (push_int -> .)
    PLUS            reduce using rule 121 (push_int -> .)
    MINUS           reduce using rule 121 (push_int -> .)
    SEMICOLON       reduce using rule 121 (push_int -> .)
    RBRACKET        reduce using rule 121 (push_int -> .)
    GREATER         reduce using rule 121 (push_int -> .)
    LESS            reduce using rule 121 (push_int -> .)
    GREATEREQ       reduce using rule 121 (push_int -> .)
    LESSEQ          reduce using rule 121 (push_int -> .)
    NOTEQUAL        reduce using rule 121 (push_int -> .)
    EQUAL           reduce using rule 121 (push_int -> .)
    Y               reduce using rule 121 (push_int -> .)
    O               reduce using rule 121 (push_int -> .)
    RPAREN          reduce using rule 121 (push_int -> .)
    COMMA           reduce using rule 121 (push_int -> .)
    HASTA           reduce using rule 121 (push_int -> .)
    LBRACE          reduce using rule 121 (push_int -> .)

    push_int                       shift and go to state 118

state 93

    (113) factor_constante -> CTEF . push_float
    (122) push_float -> .

    TIMES           reduce using rule 122 (push_float -> .)
    DIVIDE          reduce using rule 122 (push_float -> .)
    CTEI            reduce using rule 122 (push_float -> .)
    CTEF            reduce using rule 122 (push_float -> .)
    ID              reduce using rule 122 (push_float -> .)
    LPAREN          reduce using rule 122 (push_float -> .)
    PLUS            reduce using rule 122 (push_float -> .)
    MINUS           reduce using rule 122 (push_float -> .)
    SEMICOLON       reduce using rule 122 (push_float -> .)
    RBRACKET        reduce using rule 122 (push_float -> .)
    GREATER         reduce using rule 122 (push_float -> .)
    LESS            reduce using rule 122 (push_float -> .)
    GREATEREQ       reduce using rule 122 (push_float -> .)
    LESSEQ          reduce using rule 122 (push_float -> .)
    NOTEQUAL        reduce using rule 122 (push_float -> .)
    EQUAL           reduce using rule 122 (push_float -> .)
    Y               reduce using rule 122 (push_float -> .)
    O               reduce using rule 122 (push_float -> .)
    RPAREN          reduce using rule 122 (push_float -> .)
    COMMA           reduce using rule 122 (push_float -> .)
    HASTA           reduce using rule 122 (push_float -> .)
    LBRACE          reduce using rule 122 (push_float -> .)

    push_float                     shift and go to state 119

state 94

    (114) factor_variable -> ID . push_id
    (115) factor_variable -> ID . LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> ID . LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> ID . llamada_func
    (123) push_id -> .
    (128) llamada_func -> . ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON

  ! shift/reduce conflict for ID resolved as shift
    LBRACKET        shift and go to state 122
    TIMES           reduce using rule 123 (push_id -> .)
    DIVIDE          reduce using rule 123 (push_id -> .)
    CTEI            reduce using rule 123 (push_id -> .)
    CTEF            reduce using rule 123 (push_id -> .)
    LPAREN          reduce using rule 123 (push_id -> .)
    PLUS            reduce using rule 123 (push_id -> .)
    MINUS           reduce using rule 123 (push_id -> .)
    SEMICOLON       reduce using rule 123 (push_id -> .)
    RBRACKET        reduce using rule 123 (push_id -> .)
    GREATER         reduce using rule 123 (push_id -> .)
    LESS            reduce using rule 123 (push_id -> .)
    GREATEREQ       reduce using rule 123 (push_id -> .)
    LESSEQ          reduce using rule 123 (push_id -> .)
    NOTEQUAL        reduce using rule 123 (push_id -> .)
    EQUAL           reduce using rule 123 (push_id -> .)
    Y               reduce using rule 123 (push_id -> .)
    O               reduce using rule 123 (push_id -> .)
    RPAREN          reduce using rule 123 (push_id -> .)
    COMMA           reduce using rule 123 (push_id -> .)
    HASTA           reduce using rule 123 (push_id -> .)
    LBRACE          reduce using rule 123 (push_id -> .)
    ID              shift and go to state 120

  ! ID              [ reduce using rule 123 (push_id -> .) ]

    push_id                        shift and go to state 121
    llamada_func                   shift and go to state 123

state 95

    (118) factor_expresion -> LPAREN . meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (119) meter_fondo_falso -> .

    CTEI            reduce using rule 119 (meter_fondo_falso -> .)
    CTEF            reduce using rule 119 (meter_fondo_falso -> .)
    ID              reduce using rule 119 (meter_fondo_falso -> .)
    LPAREN          reduce using rule 119 (meter_fondo_falso -> .)

    meter_fondo_falso              shift and go to state 124

state 96

    (54) asignar -> variable ASSIGN . push_op_igual hyper_exp check_op_igual SEMICOLON
    (60) push_op_igual -> .

    CTEI            reduce using rule 60 (push_op_igual -> .)
    CTEF            reduce using rule 60 (push_op_igual -> .)
    ID              reduce using rule 60 (push_op_igual -> .)
    LPAREN          reduce using rule 60 (push_op_igual -> .)

    push_op_igual                  shift and go to state 125

state 97

    (128) llamada_func -> ID punto_verify_func . LPAREN punto_create_era func_params RPAREN SEMICOLON

    LPAREN          shift and go to state 126


state 98

    (55) variable -> ID variable_aux .

    ASSIGN          reduce using rule 55 (variable -> ID variable_aux .)
    SEMICOLON       reduce using rule 55 (variable -> ID variable_aux .)


state 99

    (56) variable_aux -> LBRACKET . exp RBRACKET
    (57) variable_aux -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (95) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    exp                            shift and go to state 127
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 100

    (58) variable_aux -> punto_push_id . empty
    (137) empty -> .

    ASSIGN          reduce using rule 137 (empty -> .)
    SEMICOLON       reduce using rule 137 (empty -> .)

    empty                          shift and go to state 128

state 101

    (67) ciclo_for -> PORCADA ID . punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (68) punto_existe_id -> .

    ASSIGN          reduce using rule 68 (punto_existe_id -> .)

    punto_existe_id                shift and go to state 129

state 102

    (63) ciclo_while -> MIENTRAS punto_inicio_while . LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON

    LPAREN          shift and go to state 130


state 103

    (72) condicion -> SI LPAREN . hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (73) condicion -> SI LPAREN . hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (77) hyper_exp -> . super_exp hyper_exp_aux
    (84) super_exp -> . exp super_exp_aux
    (95) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    hyper_exp                      shift and go to state 131
    super_exp                      shift and go to state 132
    exp                            shift and go to state 133
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 104

    (131) imprimir -> IMPRIMIR LPAREN . imprimir_aux RPAREN SEMICOLON
    (132) imprimir_aux -> . exp push_imprimir imprimirCycle
    (133) imprimir_aux -> . CTESTRING push_imprimir imprimirCycle
    (95) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTESTRING       shift and go to state 136
    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    imprimir_aux                   shift and go to state 134
    exp                            shift and go to state 135
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 105

    (62) leer -> LEER variable . SEMICOLON

    SEMICOLON       shift and go to state 137


state 106

    (55) variable -> ID . variable_aux
    (56) variable_aux -> . LBRACKET exp RBRACKET
    (57) variable_aux -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (58) variable_aux -> . punto_push_id empty
    (59) punto_push_id -> .

    LBRACKET        shift and go to state 99
    SEMICOLON       reduce using rule 59 (punto_push_id -> .)

    variable_aux                   shift and go to state 98
    punto_push_id                  shift and go to state 100

state 107

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter . RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    RPAREN          shift and go to state 138


state 108

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN . LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    LBRACE          shift and go to state 139


state 109

    (37) parameter -> type ID . punto_add_parameter parameterCycle
    (41) punto_add_parameter -> .

    COMMA           reduce using rule 41 (punto_add_parameter -> .)
    RPAREN          reduce using rule 41 (punto_add_parameter -> .)

    punto_add_parameter            shift and go to state 140

state 110

    (18) simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .

    VARIABLE        reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    RENGLON         reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    TABLA           reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    INICIO          reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    FUNCION         reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    REGRESAR        reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    ID              reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    PORCADA         reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    MIENTRAS        reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    SI              reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    LEER            reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    RBRACE          reduce using rule 18 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)


state 111

    (19) simpleVarCycle -> COMMA ID . punto_simple_var simpleVarCycle
    (21) punto_simple_var -> .

    COMMA           reduce using rule 21 (punto_simple_var -> .)
    SEMICOLON       reduce using rule 21 (punto_simple_var -> .)

    punto_simple_var               shift and go to state 141

state 112

    (22) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET . punto_array arrayCycle SEMICOLON
    (25) punto_array -> .

    COMMA           reduce using rule 25 (punto_array -> .)
    SEMICOLON       reduce using rule 25 (punto_array -> .)

    punto_array                    shift and go to state 142

state 113

    (26) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    LBRACKET        shift and go to state 143


state 114

    (6) inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON .

    $end            reduce using rule 6 (inicio -> INICIO LPAREN RPAREN LBRACE punto_update_goto estatutos RBRACE SEMICOLON .)


state 115

    (53) func_regresar -> REGRESAR exp SEMICOLON .

    RBRACE          reduce using rule 53 (func_regresar -> REGRESAR exp SEMICOLON .)


state 116

    (95) exp -> term check_op_masmenos . exp_aux
    (96) exp_aux -> . push_op_exp_masmenos exp
    (97) exp_aux -> . empty
    (98) push_op_exp_masmenos -> . PLUS
    (99) push_op_exp_masmenos -> . MINUS
    (100) push_op_exp_masmenos -> . empty
    (137) empty -> .

    PLUS            shift and go to state 147
    MINUS           shift and go to state 148
    SEMICOLON       reduce using rule 137 (empty -> .)
    RBRACKET        reduce using rule 137 (empty -> .)
    GREATER         reduce using rule 137 (empty -> .)
    LESS            reduce using rule 137 (empty -> .)
    GREATEREQ       reduce using rule 137 (empty -> .)
    LESSEQ          reduce using rule 137 (empty -> .)
    NOTEQUAL        reduce using rule 137 (empty -> .)
    EQUAL           reduce using rule 137 (empty -> .)
    CTEI            reduce using rule 137 (empty -> .)
    CTEF            reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    LPAREN          reduce using rule 137 (empty -> .)
    Y               reduce using rule 137 (empty -> .)
    O               reduce using rule 137 (empty -> .)
    RPAREN          reduce using rule 137 (empty -> .)
    COMMA           reduce using rule 137 (empty -> .)
    HASTA           reduce using rule 137 (empty -> .)
    LBRACE          reduce using rule 137 (empty -> .)

    exp_aux                        shift and go to state 144
    push_op_exp_masmenos           shift and go to state 145
    empty                          shift and go to state 146

state 117

    (102) term -> factor check_op_pordiv . term_aux
    (103) term_aux -> . push_op_exp_pordiv term
    (104) term_aux -> . empty
    (106) push_op_exp_pordiv -> . TIMES
    (107) push_op_exp_pordiv -> . DIVIDE
    (108) push_op_exp_pordiv -> . empty
    (137) empty -> .

    TIMES           shift and go to state 152
    DIVIDE          shift and go to state 153
    PLUS            reduce using rule 137 (empty -> .)
    MINUS           reduce using rule 137 (empty -> .)
    CTEI            reduce using rule 137 (empty -> .)
    CTEF            reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    LPAREN          reduce using rule 137 (empty -> .)
    SEMICOLON       reduce using rule 137 (empty -> .)
    RBRACKET        reduce using rule 137 (empty -> .)
    GREATER         reduce using rule 137 (empty -> .)
    LESS            reduce using rule 137 (empty -> .)
    GREATEREQ       reduce using rule 137 (empty -> .)
    LESSEQ          reduce using rule 137 (empty -> .)
    NOTEQUAL        reduce using rule 137 (empty -> .)
    EQUAL           reduce using rule 137 (empty -> .)
    Y               reduce using rule 137 (empty -> .)
    O               reduce using rule 137 (empty -> .)
    RPAREN          reduce using rule 137 (empty -> .)
    COMMA           reduce using rule 137 (empty -> .)
    HASTA           reduce using rule 137 (empty -> .)
    LBRACE          reduce using rule 137 (empty -> .)

    term_aux                       shift and go to state 149
    push_op_exp_pordiv             shift and go to state 150
    empty                          shift and go to state 151

state 118

    (112) factor_constante -> CTEI push_int .

    TIMES           reduce using rule 112 (factor_constante -> CTEI push_int .)
    DIVIDE          reduce using rule 112 (factor_constante -> CTEI push_int .)
    CTEI            reduce using rule 112 (factor_constante -> CTEI push_int .)
    CTEF            reduce using rule 112 (factor_constante -> CTEI push_int .)
    ID              reduce using rule 112 (factor_constante -> CTEI push_int .)
    LPAREN          reduce using rule 112 (factor_constante -> CTEI push_int .)
    PLUS            reduce using rule 112 (factor_constante -> CTEI push_int .)
    MINUS           reduce using rule 112 (factor_constante -> CTEI push_int .)
    SEMICOLON       reduce using rule 112 (factor_constante -> CTEI push_int .)
    RBRACKET        reduce using rule 112 (factor_constante -> CTEI push_int .)
    GREATER         reduce using rule 112 (factor_constante -> CTEI push_int .)
    LESS            reduce using rule 112 (factor_constante -> CTEI push_int .)
    GREATEREQ       reduce using rule 112 (factor_constante -> CTEI push_int .)
    LESSEQ          reduce using rule 112 (factor_constante -> CTEI push_int .)
    NOTEQUAL        reduce using rule 112 (factor_constante -> CTEI push_int .)
    EQUAL           reduce using rule 112 (factor_constante -> CTEI push_int .)
    Y               reduce using rule 112 (factor_constante -> CTEI push_int .)
    O               reduce using rule 112 (factor_constante -> CTEI push_int .)
    RPAREN          reduce using rule 112 (factor_constante -> CTEI push_int .)
    COMMA           reduce using rule 112 (factor_constante -> CTEI push_int .)
    HASTA           reduce using rule 112 (factor_constante -> CTEI push_int .)
    LBRACE          reduce using rule 112 (factor_constante -> CTEI push_int .)


state 119

    (113) factor_constante -> CTEF push_float .

    TIMES           reduce using rule 113 (factor_constante -> CTEF push_float .)
    DIVIDE          reduce using rule 113 (factor_constante -> CTEF push_float .)
    CTEI            reduce using rule 113 (factor_constante -> CTEF push_float .)
    CTEF            reduce using rule 113 (factor_constante -> CTEF push_float .)
    ID              reduce using rule 113 (factor_constante -> CTEF push_float .)
    LPAREN          reduce using rule 113 (factor_constante -> CTEF push_float .)
    PLUS            reduce using rule 113 (factor_constante -> CTEF push_float .)
    MINUS           reduce using rule 113 (factor_constante -> CTEF push_float .)
    SEMICOLON       reduce using rule 113 (factor_constante -> CTEF push_float .)
    RBRACKET        reduce using rule 113 (factor_constante -> CTEF push_float .)
    GREATER         reduce using rule 113 (factor_constante -> CTEF push_float .)
    LESS            reduce using rule 113 (factor_constante -> CTEF push_float .)
    GREATEREQ       reduce using rule 113 (factor_constante -> CTEF push_float .)
    LESSEQ          reduce using rule 113 (factor_constante -> CTEF push_float .)
    NOTEQUAL        reduce using rule 113 (factor_constante -> CTEF push_float .)
    EQUAL           reduce using rule 113 (factor_constante -> CTEF push_float .)
    Y               reduce using rule 113 (factor_constante -> CTEF push_float .)
    O               reduce using rule 113 (factor_constante -> CTEF push_float .)
    RPAREN          reduce using rule 113 (factor_constante -> CTEF push_float .)
    COMMA           reduce using rule 113 (factor_constante -> CTEF push_float .)
    HASTA           reduce using rule 113 (factor_constante -> CTEF push_float .)
    LBRACE          reduce using rule 113 (factor_constante -> CTEF push_float .)


state 120

    (128) llamada_func -> ID . punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON
    (129) punto_verify_func -> .

    LPAREN          reduce using rule 129 (punto_verify_func -> .)

    punto_verify_func              shift and go to state 97

state 121

    (114) factor_variable -> ID push_id .

    TIMES           reduce using rule 114 (factor_variable -> ID push_id .)
    DIVIDE          reduce using rule 114 (factor_variable -> ID push_id .)
    CTEI            reduce using rule 114 (factor_variable -> ID push_id .)
    CTEF            reduce using rule 114 (factor_variable -> ID push_id .)
    ID              reduce using rule 114 (factor_variable -> ID push_id .)
    LPAREN          reduce using rule 114 (factor_variable -> ID push_id .)
    PLUS            reduce using rule 114 (factor_variable -> ID push_id .)
    MINUS           reduce using rule 114 (factor_variable -> ID push_id .)
    SEMICOLON       reduce using rule 114 (factor_variable -> ID push_id .)
    RBRACKET        reduce using rule 114 (factor_variable -> ID push_id .)
    GREATER         reduce using rule 114 (factor_variable -> ID push_id .)
    LESS            reduce using rule 114 (factor_variable -> ID push_id .)
    GREATEREQ       reduce using rule 114 (factor_variable -> ID push_id .)
    LESSEQ          reduce using rule 114 (factor_variable -> ID push_id .)
    NOTEQUAL        reduce using rule 114 (factor_variable -> ID push_id .)
    EQUAL           reduce using rule 114 (factor_variable -> ID push_id .)
    Y               reduce using rule 114 (factor_variable -> ID push_id .)
    O               reduce using rule 114 (factor_variable -> ID push_id .)
    RPAREN          reduce using rule 114 (factor_variable -> ID push_id .)
    COMMA           reduce using rule 114 (factor_variable -> ID push_id .)
    HASTA           reduce using rule 114 (factor_variable -> ID push_id .)
    LBRACE          reduce using rule 114 (factor_variable -> ID push_id .)


state 122

    (115) factor_variable -> ID LBRACKET . hyper_exp RBRACKET
    (116) factor_variable -> ID LBRACKET . hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (77) hyper_exp -> . super_exp hyper_exp_aux
    (84) super_exp -> . exp super_exp_aux
    (95) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    hyper_exp                      shift and go to state 154
    super_exp                      shift and go to state 132
    exp                            shift and go to state 133
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 123

    (117) factor_variable -> ID llamada_func .

    TIMES           reduce using rule 117 (factor_variable -> ID llamada_func .)
    DIVIDE          reduce using rule 117 (factor_variable -> ID llamada_func .)
    CTEI            reduce using rule 117 (factor_variable -> ID llamada_func .)
    CTEF            reduce using rule 117 (factor_variable -> ID llamada_func .)
    ID              reduce using rule 117 (factor_variable -> ID llamada_func .)
    LPAREN          reduce using rule 117 (factor_variable -> ID llamada_func .)
    PLUS            reduce using rule 117 (factor_variable -> ID llamada_func .)
    MINUS           reduce using rule 117 (factor_variable -> ID llamada_func .)
    SEMICOLON       reduce using rule 117 (factor_variable -> ID llamada_func .)
    RBRACKET        reduce using rule 117 (factor_variable -> ID llamada_func .)
    GREATER         reduce using rule 117 (factor_variable -> ID llamada_func .)
    LESS            reduce using rule 117 (factor_variable -> ID llamada_func .)
    GREATEREQ       reduce using rule 117 (factor_variable -> ID llamada_func .)
    LESSEQ          reduce using rule 117 (factor_variable -> ID llamada_func .)
    NOTEQUAL        reduce using rule 117 (factor_variable -> ID llamada_func .)
    EQUAL           reduce using rule 117 (factor_variable -> ID llamada_func .)
    Y               reduce using rule 117 (factor_variable -> ID llamada_func .)
    O               reduce using rule 117 (factor_variable -> ID llamada_func .)
    RPAREN          reduce using rule 117 (factor_variable -> ID llamada_func .)
    COMMA           reduce using rule 117 (factor_variable -> ID llamada_func .)
    HASTA           reduce using rule 117 (factor_variable -> ID llamada_func .)
    LBRACE          reduce using rule 117 (factor_variable -> ID llamada_func .)


state 124

    (118) factor_expresion -> LPAREN meter_fondo_falso . hyper_exp RPAREN quitar_fondo_falso
    (77) hyper_exp -> . super_exp hyper_exp_aux
    (84) super_exp -> . exp super_exp_aux
    (95) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    hyper_exp                      shift and go to state 155
    super_exp                      shift and go to state 132
    exp                            shift and go to state 133
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 125

    (54) asignar -> variable ASSIGN push_op_igual . hyper_exp check_op_igual SEMICOLON
    (77) hyper_exp -> . super_exp hyper_exp_aux
    (84) super_exp -> . exp super_exp_aux
    (95) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    hyper_exp                      shift and go to state 156
    super_exp                      shift and go to state 132
    exp                            shift and go to state 133
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 126

    (128) llamada_func -> ID punto_verify_func LPAREN . punto_create_era func_params RPAREN SEMICOLON
    (130) punto_create_era -> .

    CTEI            reduce using rule 130 (punto_create_era -> .)
    CTEF            reduce using rule 130 (punto_create_era -> .)
    ID              reduce using rule 130 (punto_create_era -> .)
    LPAREN          reduce using rule 130 (punto_create_era -> .)
    RPAREN          reduce using rule 130 (punto_create_era -> .)

    punto_create_era               shift and go to state 157

state 127

    (56) variable_aux -> LBRACKET exp . RBRACKET
    (57) variable_aux -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET

    RBRACKET        shift and go to state 158


state 128

    (58) variable_aux -> punto_push_id empty .

    ASSIGN          reduce using rule 58 (variable_aux -> punto_push_id empty .)
    SEMICOLON       reduce using rule 58 (variable_aux -> punto_push_id empty .)


state 129

    (67) ciclo_for -> PORCADA ID punto_existe_id . ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON

    ASSIGN          shift and go to state 159


state 130

    (63) ciclo_while -> MIENTRAS punto_inicio_while LPAREN . hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (77) hyper_exp -> . super_exp hyper_exp_aux
    (84) super_exp -> . exp super_exp_aux
    (95) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    hyper_exp                      shift and go to state 160
    super_exp                      shift and go to state 132
    exp                            shift and go to state 133
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 131

    (72) condicion -> SI LPAREN hyper_exp . RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (73) condicion -> SI LPAREN hyper_exp . RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON

    RPAREN          shift and go to state 161


state 132

    (77) hyper_exp -> super_exp . hyper_exp_aux
    (78) hyper_exp_aux -> . push_op_logicos super_exp check_op_logicos
    (79) hyper_exp_aux -> . empty
    (81) push_op_logicos -> . Y
    (82) push_op_logicos -> . O
    (83) push_op_logicos -> . empty
    (137) empty -> .

    Y               shift and go to state 165
    O               shift and go to state 166
    RPAREN          reduce using rule 137 (empty -> .)
    RBRACKET        reduce using rule 137 (empty -> .)
    SEMICOLON       reduce using rule 137 (empty -> .)
    COMMA           reduce using rule 137 (empty -> .)
    HASTA           reduce using rule 137 (empty -> .)
    LBRACE          reduce using rule 137 (empty -> .)
    CTEI            reduce using rule 137 (empty -> .)
    CTEF            reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    LPAREN          reduce using rule 137 (empty -> .)

    hyper_exp_aux                  shift and go to state 162
    push_op_logicos                shift and go to state 163
    empty                          shift and go to state 164

state 133

    (84) super_exp -> exp . super_exp_aux
    (85) super_exp_aux -> . push_op_relacionales exp check_op_relacionales
    (86) super_exp_aux -> . empty
    (88) push_op_relacionales -> . GREATER
    (89) push_op_relacionales -> . LESS
    (90) push_op_relacionales -> . GREATEREQ
    (91) push_op_relacionales -> . LESSEQ
    (92) push_op_relacionales -> . NOTEQUAL
    (93) push_op_relacionales -> . EQUAL
    (94) push_op_relacionales -> . empty
    (137) empty -> .

    GREATER         shift and go to state 170
    LESS            shift and go to state 171
    GREATEREQ       shift and go to state 172
    LESSEQ          shift and go to state 173
    NOTEQUAL        shift and go to state 174
    EQUAL           shift and go to state 175
    Y               reduce using rule 137 (empty -> .)
    O               reduce using rule 137 (empty -> .)
    CTEI            reduce using rule 137 (empty -> .)
    CTEF            reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    LPAREN          reduce using rule 137 (empty -> .)
    RPAREN          reduce using rule 137 (empty -> .)
    RBRACKET        reduce using rule 137 (empty -> .)
    SEMICOLON       reduce using rule 137 (empty -> .)
    COMMA           reduce using rule 137 (empty -> .)
    HASTA           reduce using rule 137 (empty -> .)
    LBRACE          reduce using rule 137 (empty -> .)

    super_exp_aux                  shift and go to state 167
    push_op_relacionales           shift and go to state 168
    empty                          shift and go to state 169

state 134

    (131) imprimir -> IMPRIMIR LPAREN imprimir_aux . RPAREN SEMICOLON

    RPAREN          shift and go to state 176


state 135

    (132) imprimir_aux -> exp . push_imprimir imprimirCycle
    (136) push_imprimir -> .

    COMMA           reduce using rule 136 (push_imprimir -> .)
    RPAREN          reduce using rule 136 (push_imprimir -> .)

    push_imprimir                  shift and go to state 177

state 136

    (133) imprimir_aux -> CTESTRING . push_imprimir imprimirCycle
    (136) push_imprimir -> .

    COMMA           reduce using rule 136 (push_imprimir -> .)
    RPAREN          reduce using rule 136 (push_imprimir -> .)

    push_imprimir                  shift and go to state 178

state 137

    (62) leer -> LEER variable SEMICOLON .

    REGRESAR        reduce using rule 62 (leer -> LEER variable SEMICOLON .)
    ID              reduce using rule 62 (leer -> LEER variable SEMICOLON .)
    PORCADA         reduce using rule 62 (leer -> LEER variable SEMICOLON .)
    MIENTRAS        reduce using rule 62 (leer -> LEER variable SEMICOLON .)
    SI              reduce using rule 62 (leer -> LEER variable SEMICOLON .)
    IMPRIMIR        reduce using rule 62 (leer -> LEER variable SEMICOLON .)
    LEER            reduce using rule 62 (leer -> LEER variable SEMICOLON .)
    RBRACE          reduce using rule 62 (leer -> LEER variable SEMICOLON .)


state 138

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN . LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function

    LBRACE          shift and go to state 179


state 139

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE . dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (8) dec_var_cycle -> . dec_var dec_var_cycle
    (9) dec_var_cycle -> . empty
    (12) dec_var -> . simple_var
    (13) dec_var -> . array
    (14) dec_var -> . matrix
    (137) empty -> .
    (18) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (22) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (26) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    REGRESAR        reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    PORCADA         reduce using rule 137 (empty -> .)
    MIENTRAS        reduce using rule 137 (empty -> .)
    SI              reduce using rule 137 (empty -> .)
    IMPRIMIR        reduce using rule 137 (empty -> .)
    LEER            reduce using rule 137 (empty -> .)
    RBRACE          reduce using rule 137 (empty -> .)
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

    dec_var_cycle                  shift and go to state 180
    dec_var                        shift and go to state 10
    empty                          shift and go to state 26
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 140

    (37) parameter -> type ID punto_add_parameter . parameterCycle
    (39) parameterCycle -> . COMMA type ID punto_add_parameter parameterCycle
    (40) parameterCycle -> . empty
    (137) empty -> .

    COMMA           shift and go to state 182
    RPAREN          reduce using rule 137 (empty -> .)

    parameterCycle                 shift and go to state 181
    empty                          shift and go to state 183

state 141

    (19) simpleVarCycle -> COMMA ID punto_simple_var . simpleVarCycle
    (19) simpleVarCycle -> . COMMA ID punto_simple_var simpleVarCycle
    (20) simpleVarCycle -> . empty
    (137) empty -> .

    COMMA           shift and go to state 80
    SEMICOLON       reduce using rule 137 (empty -> .)

    simpleVarCycle                 shift and go to state 184
    empty                          shift and go to state 81

state 142

    (22) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array . arrayCycle SEMICOLON
    (23) arrayCycle -> . COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle
    (24) arrayCycle -> . empty
    (137) empty -> .

    COMMA           shift and go to state 186
    SEMICOLON       reduce using rule 137 (empty -> .)

    arrayCycle                     shift and go to state 185
    empty                          shift and go to state 187

state 143

    (26) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    CTEI            shift and go to state 188


state 144

    (95) exp -> term check_op_masmenos exp_aux .

    SEMICOLON       reduce using rule 95 (exp -> term check_op_masmenos exp_aux .)
    RBRACKET        reduce using rule 95 (exp -> term check_op_masmenos exp_aux .)
    GREATER         reduce using rule 95 (exp -> term check_op_masmenos exp_aux .)
    LESS            reduce using rule 95 (exp -> term check_op_masmenos exp_aux .)
    GREATEREQ       reduce using rule 95 (exp -> term check_op_masmenos exp_aux .)
    LESSEQ          reduce using rule 95 (exp -> term check_op_masmenos exp_aux .)
    NOTEQUAL        reduce using rule 95 (exp -> term check_op_masmenos exp_aux .)
    EQUAL           reduce using rule 95 (exp -> term check_op_masmenos exp_aux .)
    CTEI            reduce using rule 95 (exp -> term check_op_masmenos exp_aux .)
    CTEF            reduce using rule 95 (exp -> term check_op_masmenos exp_aux .)
    ID              reduce using rule 95 (exp -> term check_op_masmenos exp_aux .)
    LPAREN          reduce using rule 95 (exp -> term check_op_masmenos exp_aux .)
    Y               reduce using rule 95 (exp -> term check_op_masmenos exp_aux .)
    O               reduce using rule 95 (exp -> term check_op_masmenos exp_aux .)
    RPAREN          reduce using rule 95 (exp -> term check_op_masmenos exp_aux .)
    COMMA           reduce using rule 95 (exp -> term check_op_masmenos exp_aux .)
    HASTA           reduce using rule 95 (exp -> term check_op_masmenos exp_aux .)
    LBRACE          reduce using rule 95 (exp -> term check_op_masmenos exp_aux .)


state 145

    (96) exp_aux -> push_op_exp_masmenos . exp
    (95) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    exp                            shift and go to state 189
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 146

    (97) exp_aux -> empty .
    (100) push_op_exp_masmenos -> empty .

  ! reduce/reduce conflict for CTEI resolved using rule 97 (exp_aux -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 97 (exp_aux -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 97 (exp_aux -> empty .)
  ! reduce/reduce conflict for LPAREN resolved using rule 97 (exp_aux -> empty .)
    SEMICOLON       reduce using rule 97 (exp_aux -> empty .)
    RBRACKET        reduce using rule 97 (exp_aux -> empty .)
    GREATER         reduce using rule 97 (exp_aux -> empty .)
    LESS            reduce using rule 97 (exp_aux -> empty .)
    GREATEREQ       reduce using rule 97 (exp_aux -> empty .)
    LESSEQ          reduce using rule 97 (exp_aux -> empty .)
    NOTEQUAL        reduce using rule 97 (exp_aux -> empty .)
    EQUAL           reduce using rule 97 (exp_aux -> empty .)
    CTEI            reduce using rule 97 (exp_aux -> empty .)
    CTEF            reduce using rule 97 (exp_aux -> empty .)
    ID              reduce using rule 97 (exp_aux -> empty .)
    LPAREN          reduce using rule 97 (exp_aux -> empty .)
    Y               reduce using rule 97 (exp_aux -> empty .)
    O               reduce using rule 97 (exp_aux -> empty .)
    RPAREN          reduce using rule 97 (exp_aux -> empty .)
    COMMA           reduce using rule 97 (exp_aux -> empty .)
    HASTA           reduce using rule 97 (exp_aux -> empty .)
    LBRACE          reduce using rule 97 (exp_aux -> empty .)

  ! CTEI            [ reduce using rule 100 (push_op_exp_masmenos -> empty .) ]
  ! CTEF            [ reduce using rule 100 (push_op_exp_masmenos -> empty .) ]
  ! ID              [ reduce using rule 100 (push_op_exp_masmenos -> empty .) ]
  ! LPAREN          [ reduce using rule 100 (push_op_exp_masmenos -> empty .) ]


state 147

    (98) push_op_exp_masmenos -> PLUS .

    CTEI            reduce using rule 98 (push_op_exp_masmenos -> PLUS .)
    CTEF            reduce using rule 98 (push_op_exp_masmenos -> PLUS .)
    ID              reduce using rule 98 (push_op_exp_masmenos -> PLUS .)
    LPAREN          reduce using rule 98 (push_op_exp_masmenos -> PLUS .)


state 148

    (99) push_op_exp_masmenos -> MINUS .

    CTEI            reduce using rule 99 (push_op_exp_masmenos -> MINUS .)
    CTEF            reduce using rule 99 (push_op_exp_masmenos -> MINUS .)
    ID              reduce using rule 99 (push_op_exp_masmenos -> MINUS .)
    LPAREN          reduce using rule 99 (push_op_exp_masmenos -> MINUS .)


state 149

    (102) term -> factor check_op_pordiv term_aux .

    PLUS            reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    MINUS           reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    CTEI            reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    CTEF            reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    ID              reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    LPAREN          reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    SEMICOLON       reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    RBRACKET        reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    GREATER         reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    LESS            reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    GREATEREQ       reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    LESSEQ          reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    NOTEQUAL        reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    EQUAL           reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    Y               reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    O               reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    RPAREN          reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    COMMA           reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    HASTA           reduce using rule 102 (term -> factor check_op_pordiv term_aux .)
    LBRACE          reduce using rule 102 (term -> factor check_op_pordiv term_aux .)


state 150

    (103) term_aux -> push_op_exp_pordiv . term
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    term                           shift and go to state 190
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 151

    (104) term_aux -> empty .
    (108) push_op_exp_pordiv -> empty .

  ! reduce/reduce conflict for CTEI resolved using rule 104 (term_aux -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 104 (term_aux -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 104 (term_aux -> empty .)
  ! reduce/reduce conflict for LPAREN resolved using rule 104 (term_aux -> empty .)
    PLUS            reduce using rule 104 (term_aux -> empty .)
    MINUS           reduce using rule 104 (term_aux -> empty .)
    CTEI            reduce using rule 104 (term_aux -> empty .)
    CTEF            reduce using rule 104 (term_aux -> empty .)
    ID              reduce using rule 104 (term_aux -> empty .)
    LPAREN          reduce using rule 104 (term_aux -> empty .)
    SEMICOLON       reduce using rule 104 (term_aux -> empty .)
    RBRACKET        reduce using rule 104 (term_aux -> empty .)
    GREATER         reduce using rule 104 (term_aux -> empty .)
    LESS            reduce using rule 104 (term_aux -> empty .)
    GREATEREQ       reduce using rule 104 (term_aux -> empty .)
    LESSEQ          reduce using rule 104 (term_aux -> empty .)
    NOTEQUAL        reduce using rule 104 (term_aux -> empty .)
    EQUAL           reduce using rule 104 (term_aux -> empty .)
    Y               reduce using rule 104 (term_aux -> empty .)
    O               reduce using rule 104 (term_aux -> empty .)
    RPAREN          reduce using rule 104 (term_aux -> empty .)
    COMMA           reduce using rule 104 (term_aux -> empty .)
    HASTA           reduce using rule 104 (term_aux -> empty .)
    LBRACE          reduce using rule 104 (term_aux -> empty .)

  ! CTEI            [ reduce using rule 108 (push_op_exp_pordiv -> empty .) ]
  ! CTEF            [ reduce using rule 108 (push_op_exp_pordiv -> empty .) ]
  ! ID              [ reduce using rule 108 (push_op_exp_pordiv -> empty .) ]
  ! LPAREN          [ reduce using rule 108 (push_op_exp_pordiv -> empty .) ]


state 152

    (106) push_op_exp_pordiv -> TIMES .

    CTEI            reduce using rule 106 (push_op_exp_pordiv -> TIMES .)
    CTEF            reduce using rule 106 (push_op_exp_pordiv -> TIMES .)
    ID              reduce using rule 106 (push_op_exp_pordiv -> TIMES .)
    LPAREN          reduce using rule 106 (push_op_exp_pordiv -> TIMES .)


state 153

    (107) push_op_exp_pordiv -> DIVIDE .

    CTEI            reduce using rule 107 (push_op_exp_pordiv -> DIVIDE .)
    CTEF            reduce using rule 107 (push_op_exp_pordiv -> DIVIDE .)
    ID              reduce using rule 107 (push_op_exp_pordiv -> DIVIDE .)
    LPAREN          reduce using rule 107 (push_op_exp_pordiv -> DIVIDE .)


state 154

    (115) factor_variable -> ID LBRACKET hyper_exp . RBRACKET
    (116) factor_variable -> ID LBRACKET hyper_exp . RBRACKET LBRACKET hyper_exp RBRACKET

    RBRACKET        shift and go to state 191


state 155

    (118) factor_expresion -> LPAREN meter_fondo_falso hyper_exp . RPAREN quitar_fondo_falso

    RPAREN          shift and go to state 192


state 156

    (54) asignar -> variable ASSIGN push_op_igual hyper_exp . check_op_igual SEMICOLON
    (61) check_op_igual -> .

    SEMICOLON       reduce using rule 61 (check_op_igual -> .)

    check_op_igual                 shift and go to state 193

state 157

    (128) llamada_func -> ID punto_verify_func LPAREN punto_create_era . func_params RPAREN SEMICOLON
    (126) func_params -> . hyper_exp func_params_aux
    (127) func_params -> . empty
    (77) hyper_exp -> . super_exp hyper_exp_aux
    (137) empty -> .
    (84) super_exp -> . exp super_exp_aux
    (95) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    RPAREN          reduce using rule 137 (empty -> .)
    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    func_params                    shift and go to state 194
    hyper_exp                      shift and go to state 195
    empty                          shift and go to state 196
    super_exp                      shift and go to state 132
    exp                            shift and go to state 133
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 158

    (56) variable_aux -> LBRACKET exp RBRACKET .
    (57) variable_aux -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    ASSIGN          reduce using rule 56 (variable_aux -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 56 (variable_aux -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 197


state 159

    (67) ciclo_for -> PORCADA ID punto_existe_id ASSIGN . hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (77) hyper_exp -> . super_exp hyper_exp_aux
    (84) super_exp -> . exp super_exp_aux
    (95) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    hyper_exp                      shift and go to state 198
    super_exp                      shift and go to state 132
    exp                            shift and go to state 133
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 160

    (63) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp . RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON

    RPAREN          shift and go to state 199


state 161

    (72) condicion -> SI LPAREN hyper_exp RPAREN . punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (73) condicion -> SI LPAREN hyper_exp RPAREN . punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (74) punto_si -> .

    LBRACE          reduce using rule 74 (punto_si -> .)

    punto_si                       shift and go to state 200

state 162

    (77) hyper_exp -> super_exp hyper_exp_aux .

    RPAREN          reduce using rule 77 (hyper_exp -> super_exp hyper_exp_aux .)
    RBRACKET        reduce using rule 77 (hyper_exp -> super_exp hyper_exp_aux .)
    SEMICOLON       reduce using rule 77 (hyper_exp -> super_exp hyper_exp_aux .)
    COMMA           reduce using rule 77 (hyper_exp -> super_exp hyper_exp_aux .)
    HASTA           reduce using rule 77 (hyper_exp -> super_exp hyper_exp_aux .)
    LBRACE          reduce using rule 77 (hyper_exp -> super_exp hyper_exp_aux .)


state 163

    (78) hyper_exp_aux -> push_op_logicos . super_exp check_op_logicos
    (84) super_exp -> . exp super_exp_aux
    (95) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    super_exp                      shift and go to state 201
    exp                            shift and go to state 133
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 164

    (79) hyper_exp_aux -> empty .
    (83) push_op_logicos -> empty .

    RPAREN          reduce using rule 79 (hyper_exp_aux -> empty .)
    RBRACKET        reduce using rule 79 (hyper_exp_aux -> empty .)
    SEMICOLON       reduce using rule 79 (hyper_exp_aux -> empty .)
    COMMA           reduce using rule 79 (hyper_exp_aux -> empty .)
    HASTA           reduce using rule 79 (hyper_exp_aux -> empty .)
    LBRACE          reduce using rule 79 (hyper_exp_aux -> empty .)
    CTEI            reduce using rule 83 (push_op_logicos -> empty .)
    CTEF            reduce using rule 83 (push_op_logicos -> empty .)
    ID              reduce using rule 83 (push_op_logicos -> empty .)
    LPAREN          reduce using rule 83 (push_op_logicos -> empty .)


state 165

    (81) push_op_logicos -> Y .

    CTEI            reduce using rule 81 (push_op_logicos -> Y .)
    CTEF            reduce using rule 81 (push_op_logicos -> Y .)
    ID              reduce using rule 81 (push_op_logicos -> Y .)
    LPAREN          reduce using rule 81 (push_op_logicos -> Y .)


state 166

    (82) push_op_logicos -> O .

    CTEI            reduce using rule 82 (push_op_logicos -> O .)
    CTEF            reduce using rule 82 (push_op_logicos -> O .)
    ID              reduce using rule 82 (push_op_logicos -> O .)
    LPAREN          reduce using rule 82 (push_op_logicos -> O .)


state 167

    (84) super_exp -> exp super_exp_aux .

    Y               reduce using rule 84 (super_exp -> exp super_exp_aux .)
    O               reduce using rule 84 (super_exp -> exp super_exp_aux .)
    CTEI            reduce using rule 84 (super_exp -> exp super_exp_aux .)
    CTEF            reduce using rule 84 (super_exp -> exp super_exp_aux .)
    ID              reduce using rule 84 (super_exp -> exp super_exp_aux .)
    LPAREN          reduce using rule 84 (super_exp -> exp super_exp_aux .)
    RPAREN          reduce using rule 84 (super_exp -> exp super_exp_aux .)
    RBRACKET        reduce using rule 84 (super_exp -> exp super_exp_aux .)
    SEMICOLON       reduce using rule 84 (super_exp -> exp super_exp_aux .)
    COMMA           reduce using rule 84 (super_exp -> exp super_exp_aux .)
    HASTA           reduce using rule 84 (super_exp -> exp super_exp_aux .)
    LBRACE          reduce using rule 84 (super_exp -> exp super_exp_aux .)


state 168

    (85) super_exp_aux -> push_op_relacionales . exp check_op_relacionales
    (95) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    exp                            shift and go to state 202
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 169

    (86) super_exp_aux -> empty .
    (94) push_op_relacionales -> empty .

  ! reduce/reduce conflict for CTEI resolved using rule 86 (super_exp_aux -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 86 (super_exp_aux -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 86 (super_exp_aux -> empty .)
  ! reduce/reduce conflict for LPAREN resolved using rule 86 (super_exp_aux -> empty .)
    Y               reduce using rule 86 (super_exp_aux -> empty .)
    O               reduce using rule 86 (super_exp_aux -> empty .)
    CTEI            reduce using rule 86 (super_exp_aux -> empty .)
    CTEF            reduce using rule 86 (super_exp_aux -> empty .)
    ID              reduce using rule 86 (super_exp_aux -> empty .)
    LPAREN          reduce using rule 86 (super_exp_aux -> empty .)
    RPAREN          reduce using rule 86 (super_exp_aux -> empty .)
    RBRACKET        reduce using rule 86 (super_exp_aux -> empty .)
    SEMICOLON       reduce using rule 86 (super_exp_aux -> empty .)
    COMMA           reduce using rule 86 (super_exp_aux -> empty .)
    HASTA           reduce using rule 86 (super_exp_aux -> empty .)
    LBRACE          reduce using rule 86 (super_exp_aux -> empty .)

  ! CTEI            [ reduce using rule 94 (push_op_relacionales -> empty .) ]
  ! CTEF            [ reduce using rule 94 (push_op_relacionales -> empty .) ]
  ! ID              [ reduce using rule 94 (push_op_relacionales -> empty .) ]
  ! LPAREN          [ reduce using rule 94 (push_op_relacionales -> empty .) ]


state 170

    (88) push_op_relacionales -> GREATER .

    CTEI            reduce using rule 88 (push_op_relacionales -> GREATER .)
    CTEF            reduce using rule 88 (push_op_relacionales -> GREATER .)
    ID              reduce using rule 88 (push_op_relacionales -> GREATER .)
    LPAREN          reduce using rule 88 (push_op_relacionales -> GREATER .)


state 171

    (89) push_op_relacionales -> LESS .

    CTEI            reduce using rule 89 (push_op_relacionales -> LESS .)
    CTEF            reduce using rule 89 (push_op_relacionales -> LESS .)
    ID              reduce using rule 89 (push_op_relacionales -> LESS .)
    LPAREN          reduce using rule 89 (push_op_relacionales -> LESS .)


state 172

    (90) push_op_relacionales -> GREATEREQ .

    CTEI            reduce using rule 90 (push_op_relacionales -> GREATEREQ .)
    CTEF            reduce using rule 90 (push_op_relacionales -> GREATEREQ .)
    ID              reduce using rule 90 (push_op_relacionales -> GREATEREQ .)
    LPAREN          reduce using rule 90 (push_op_relacionales -> GREATEREQ .)


state 173

    (91) push_op_relacionales -> LESSEQ .

    CTEI            reduce using rule 91 (push_op_relacionales -> LESSEQ .)
    CTEF            reduce using rule 91 (push_op_relacionales -> LESSEQ .)
    ID              reduce using rule 91 (push_op_relacionales -> LESSEQ .)
    LPAREN          reduce using rule 91 (push_op_relacionales -> LESSEQ .)


state 174

    (92) push_op_relacionales -> NOTEQUAL .

    CTEI            reduce using rule 92 (push_op_relacionales -> NOTEQUAL .)
    CTEF            reduce using rule 92 (push_op_relacionales -> NOTEQUAL .)
    ID              reduce using rule 92 (push_op_relacionales -> NOTEQUAL .)
    LPAREN          reduce using rule 92 (push_op_relacionales -> NOTEQUAL .)


state 175

    (93) push_op_relacionales -> EQUAL .

    CTEI            reduce using rule 93 (push_op_relacionales -> EQUAL .)
    CTEF            reduce using rule 93 (push_op_relacionales -> EQUAL .)
    ID              reduce using rule 93 (push_op_relacionales -> EQUAL .)
    LPAREN          reduce using rule 93 (push_op_relacionales -> EQUAL .)


state 176

    (131) imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 203


state 177

    (132) imprimir_aux -> exp push_imprimir . imprimirCycle
    (134) imprimirCycle -> . COMMA imprimir_aux
    (135) imprimirCycle -> . empty
    (137) empty -> .

    COMMA           shift and go to state 205
    RPAREN          reduce using rule 137 (empty -> .)

    imprimirCycle                  shift and go to state 204
    empty                          shift and go to state 206

state 178

    (133) imprimir_aux -> CTESTRING push_imprimir . imprimirCycle
    (134) imprimirCycle -> . COMMA imprimir_aux
    (135) imprimirCycle -> . empty
    (137) empty -> .

    COMMA           shift and go to state 205
    RPAREN          reduce using rule 137 (empty -> .)

    imprimirCycle                  shift and go to state 207
    empty                          shift and go to state 206

state 179

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE . dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function
    (8) dec_var_cycle -> . dec_var dec_var_cycle
    (9) dec_var_cycle -> . empty
    (12) dec_var -> . simple_var
    (13) dec_var -> . array
    (14) dec_var -> . matrix
    (137) empty -> .
    (18) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (22) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (26) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    REGRESAR        reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    PORCADA         reduce using rule 137 (empty -> .)
    MIENTRAS        reduce using rule 137 (empty -> .)
    SI              reduce using rule 137 (empty -> .)
    IMPRIMIR        reduce using rule 137 (empty -> .)
    LEER            reduce using rule 137 (empty -> .)
    RBRACE          reduce using rule 137 (empty -> .)
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

    dec_var_cycle                  shift and go to state 208
    dec_var                        shift and go to state 10
    empty                          shift and go to state 26
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 180

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle . estatutos RBRACE SEMICOLON punto_end_function
    (42) estatutos -> . estatutosCycle
    (43) estatutos -> . func_regresar
    (44) estatutosCycle -> . estatutos_opciones estatutos
    (45) estatutosCycle -> . empty
    (53) func_regresar -> . REGRESAR exp SEMICOLON
    (46) estatutos_opciones -> . asignar
    (47) estatutos_opciones -> . llamada_func
    (48) estatutos_opciones -> . ciclo_for
    (49) estatutos_opciones -> . ciclo_while
    (50) estatutos_opciones -> . condicion
    (51) estatutos_opciones -> . imprimir
    (52) estatutos_opciones -> . leer
    (137) empty -> .
    (54) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (128) llamada_func -> . ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON
    (67) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (63) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (72) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (73) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (131) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (62) leer -> . LEER variable SEMICOLON
    (55) variable -> . ID variable_aux

    REGRESAR        shift and go to state 60
    RBRACE          reduce using rule 137 (empty -> .)
    ID              shift and go to state 69
    PORCADA         shift and go to state 70
    MIENTRAS        shift and go to state 71
    SI              shift and go to state 72
    IMPRIMIR        shift and go to state 73
    LEER            shift and go to state 74

    estatutos                      shift and go to state 209
    estatutosCycle                 shift and go to state 56
    func_regresar                  shift and go to state 57
    estatutos_opciones             shift and go to state 58
    empty                          shift and go to state 59
    asignar                        shift and go to state 61
    llamada_func                   shift and go to state 62
    ciclo_for                      shift and go to state 63
    ciclo_while                    shift and go to state 64
    condicion                      shift and go to state 65
    imprimir                       shift and go to state 66
    leer                           shift and go to state 67
    variable                       shift and go to state 68

state 181

    (37) parameter -> type ID punto_add_parameter parameterCycle .

    RPAREN          reduce using rule 37 (parameter -> type ID punto_add_parameter parameterCycle .)


state 182

    (39) parameterCycle -> COMMA . type ID punto_add_parameter parameterCycle
    (15) type -> . ENTERO
    (16) type -> . DECIMAL
    (17) type -> . LETRA

    ENTERO          shift and go to state 30
    DECIMAL         shift and go to state 31
    LETRA           shift and go to state 32

    type                           shift and go to state 210

state 183

    (40) parameterCycle -> empty .

    RPAREN          reduce using rule 40 (parameterCycle -> empty .)


state 184

    (19) simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle .

    SEMICOLON       reduce using rule 19 (simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle .)


state 185

    (22) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle . SEMICOLON

    SEMICOLON       shift and go to state 211


state 186

    (23) arrayCycle -> COMMA . ID LBRACKET CTEI RBRACKET punto_array arrayCycle

    ID              shift and go to state 212


state 187

    (24) arrayCycle -> empty .

    SEMICOLON       reduce using rule 24 (arrayCycle -> empty .)


state 188

    (26) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET punto_matrix matrixCycle SEMICOLON

    RBRACKET        shift and go to state 213


state 189

    (96) exp_aux -> push_op_exp_masmenos exp .

    SEMICOLON       reduce using rule 96 (exp_aux -> push_op_exp_masmenos exp .)
    RBRACKET        reduce using rule 96 (exp_aux -> push_op_exp_masmenos exp .)
    GREATER         reduce using rule 96 (exp_aux -> push_op_exp_masmenos exp .)
    LESS            reduce using rule 96 (exp_aux -> push_op_exp_masmenos exp .)
    GREATEREQ       reduce using rule 96 (exp_aux -> push_op_exp_masmenos exp .)
    LESSEQ          reduce using rule 96 (exp_aux -> push_op_exp_masmenos exp .)
    NOTEQUAL        reduce using rule 96 (exp_aux -> push_op_exp_masmenos exp .)
    EQUAL           reduce using rule 96 (exp_aux -> push_op_exp_masmenos exp .)
    CTEI            reduce using rule 96 (exp_aux -> push_op_exp_masmenos exp .)
    CTEF            reduce using rule 96 (exp_aux -> push_op_exp_masmenos exp .)
    ID              reduce using rule 96 (exp_aux -> push_op_exp_masmenos exp .)
    LPAREN          reduce using rule 96 (exp_aux -> push_op_exp_masmenos exp .)
    Y               reduce using rule 96 (exp_aux -> push_op_exp_masmenos exp .)
    O               reduce using rule 96 (exp_aux -> push_op_exp_masmenos exp .)
    RPAREN          reduce using rule 96 (exp_aux -> push_op_exp_masmenos exp .)
    COMMA           reduce using rule 96 (exp_aux -> push_op_exp_masmenos exp .)
    HASTA           reduce using rule 96 (exp_aux -> push_op_exp_masmenos exp .)
    LBRACE          reduce using rule 96 (exp_aux -> push_op_exp_masmenos exp .)


state 190

    (103) term_aux -> push_op_exp_pordiv term .

    PLUS            reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    MINUS           reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    CTEI            reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    CTEF            reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    ID              reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    LPAREN          reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    SEMICOLON       reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    RBRACKET        reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    GREATER         reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    LESS            reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    GREATEREQ       reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    LESSEQ          reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    NOTEQUAL        reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    EQUAL           reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    Y               reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    O               reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    RPAREN          reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    COMMA           reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    HASTA           reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)
    LBRACE          reduce using rule 103 (term_aux -> push_op_exp_pordiv term .)


state 191

    (115) factor_variable -> ID LBRACKET hyper_exp RBRACKET .
    (116) factor_variable -> ID LBRACKET hyper_exp RBRACKET . LBRACKET hyper_exp RBRACKET

    TIMES           reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    DIVIDE          reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    CTEI            reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    CTEF            reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    ID              reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LPAREN          reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    PLUS            reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    MINUS           reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    SEMICOLON       reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    RBRACKET        reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    GREATER         reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LESS            reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    GREATEREQ       reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LESSEQ          reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    NOTEQUAL        reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    EQUAL           reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    Y               reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    O               reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    RPAREN          reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    COMMA           reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    HASTA           reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LBRACE          reduce using rule 115 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LBRACKET        shift and go to state 214


state 192

    (118) factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN . quitar_fondo_falso
    (120) quitar_fondo_falso -> .

    TIMES           reduce using rule 120 (quitar_fondo_falso -> .)
    DIVIDE          reduce using rule 120 (quitar_fondo_falso -> .)
    CTEI            reduce using rule 120 (quitar_fondo_falso -> .)
    CTEF            reduce using rule 120 (quitar_fondo_falso -> .)
    ID              reduce using rule 120 (quitar_fondo_falso -> .)
    LPAREN          reduce using rule 120 (quitar_fondo_falso -> .)
    PLUS            reduce using rule 120 (quitar_fondo_falso -> .)
    MINUS           reduce using rule 120 (quitar_fondo_falso -> .)
    SEMICOLON       reduce using rule 120 (quitar_fondo_falso -> .)
    RBRACKET        reduce using rule 120 (quitar_fondo_falso -> .)
    GREATER         reduce using rule 120 (quitar_fondo_falso -> .)
    LESS            reduce using rule 120 (quitar_fondo_falso -> .)
    GREATEREQ       reduce using rule 120 (quitar_fondo_falso -> .)
    LESSEQ          reduce using rule 120 (quitar_fondo_falso -> .)
    NOTEQUAL        reduce using rule 120 (quitar_fondo_falso -> .)
    EQUAL           reduce using rule 120 (quitar_fondo_falso -> .)
    Y               reduce using rule 120 (quitar_fondo_falso -> .)
    O               reduce using rule 120 (quitar_fondo_falso -> .)
    RPAREN          reduce using rule 120 (quitar_fondo_falso -> .)
    COMMA           reduce using rule 120 (quitar_fondo_falso -> .)
    HASTA           reduce using rule 120 (quitar_fondo_falso -> .)
    LBRACE          reduce using rule 120 (quitar_fondo_falso -> .)

    quitar_fondo_falso             shift and go to state 215

state 193

    (54) asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual . SEMICOLON

    SEMICOLON       shift and go to state 216


state 194

    (128) llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params . RPAREN SEMICOLON

    RPAREN          shift and go to state 217


state 195

    (126) func_params -> hyper_exp . func_params_aux
    (124) func_params_aux -> . COMMA hyper_exp func_params_aux
    (125) func_params_aux -> . empty
    (137) empty -> .

    COMMA           shift and go to state 219
    RPAREN          reduce using rule 137 (empty -> .)

    func_params_aux                shift and go to state 218
    empty                          shift and go to state 220

state 196

    (127) func_params -> empty .

    RPAREN          reduce using rule 127 (func_params -> empty .)


state 197

    (57) variable_aux -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (95) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    exp                            shift and go to state 221
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 198

    (67) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp . punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (69) punto_valida_int -> .

    HASTA           reduce using rule 69 (punto_valida_int -> .)

    punto_valida_int               shift and go to state 222

state 199

    (63) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN . punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (65) punto_medio_while -> .

    LBRACE          reduce using rule 65 (punto_medio_while -> .)

    punto_medio_while              shift and go to state 223

state 200

    (72) condicion -> SI LPAREN hyper_exp RPAREN punto_si . LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (73) condicion -> SI LPAREN hyper_exp RPAREN punto_si . LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON

    LBRACE          shift and go to state 224


state 201

    (78) hyper_exp_aux -> push_op_logicos super_exp . check_op_logicos
    (80) check_op_logicos -> .

    RPAREN          reduce using rule 80 (check_op_logicos -> .)
    RBRACKET        reduce using rule 80 (check_op_logicos -> .)
    SEMICOLON       reduce using rule 80 (check_op_logicos -> .)
    COMMA           reduce using rule 80 (check_op_logicos -> .)
    HASTA           reduce using rule 80 (check_op_logicos -> .)
    LBRACE          reduce using rule 80 (check_op_logicos -> .)

    check_op_logicos               shift and go to state 225

state 202

    (85) super_exp_aux -> push_op_relacionales exp . check_op_relacionales
    (87) check_op_relacionales -> .

    Y               reduce using rule 87 (check_op_relacionales -> .)
    O               reduce using rule 87 (check_op_relacionales -> .)
    CTEI            reduce using rule 87 (check_op_relacionales -> .)
    CTEF            reduce using rule 87 (check_op_relacionales -> .)
    ID              reduce using rule 87 (check_op_relacionales -> .)
    LPAREN          reduce using rule 87 (check_op_relacionales -> .)
    RPAREN          reduce using rule 87 (check_op_relacionales -> .)
    RBRACKET        reduce using rule 87 (check_op_relacionales -> .)
    SEMICOLON       reduce using rule 87 (check_op_relacionales -> .)
    COMMA           reduce using rule 87 (check_op_relacionales -> .)
    HASTA           reduce using rule 87 (check_op_relacionales -> .)
    LBRACE          reduce using rule 87 (check_op_relacionales -> .)

    check_op_relacionales          shift and go to state 226

state 203

    (131) imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .

    REGRESAR        reduce using rule 131 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    ID              reduce using rule 131 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    PORCADA         reduce using rule 131 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 131 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    SI              reduce using rule 131 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 131 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    LEER            reduce using rule 131 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    RBRACE          reduce using rule 131 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)


state 204

    (132) imprimir_aux -> exp push_imprimir imprimirCycle .

    RPAREN          reduce using rule 132 (imprimir_aux -> exp push_imprimir imprimirCycle .)


state 205

    (134) imprimirCycle -> COMMA . imprimir_aux
    (132) imprimir_aux -> . exp push_imprimir imprimirCycle
    (133) imprimir_aux -> . CTESTRING push_imprimir imprimirCycle
    (95) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTESTRING       shift and go to state 136
    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    imprimir_aux                   shift and go to state 227
    exp                            shift and go to state 135
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 206

    (135) imprimirCycle -> empty .

    RPAREN          reduce using rule 135 (imprimirCycle -> empty .)


state 207

    (133) imprimir_aux -> CTESTRING push_imprimir imprimirCycle .

    RPAREN          reduce using rule 133 (imprimir_aux -> CTESTRING push_imprimir imprimirCycle .)


state 208

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle . estatutos RBRACE SEMICOLON punto_end_function
    (42) estatutos -> . estatutosCycle
    (43) estatutos -> . func_regresar
    (44) estatutosCycle -> . estatutos_opciones estatutos
    (45) estatutosCycle -> . empty
    (53) func_regresar -> . REGRESAR exp SEMICOLON
    (46) estatutos_opciones -> . asignar
    (47) estatutos_opciones -> . llamada_func
    (48) estatutos_opciones -> . ciclo_for
    (49) estatutos_opciones -> . ciclo_while
    (50) estatutos_opciones -> . condicion
    (51) estatutos_opciones -> . imprimir
    (52) estatutos_opciones -> . leer
    (137) empty -> .
    (54) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (128) llamada_func -> . ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON
    (67) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (63) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (72) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (73) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (131) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (62) leer -> . LEER variable SEMICOLON
    (55) variable -> . ID variable_aux

    REGRESAR        shift and go to state 60
    RBRACE          reduce using rule 137 (empty -> .)
    ID              shift and go to state 69
    PORCADA         shift and go to state 70
    MIENTRAS        shift and go to state 71
    SI              shift and go to state 72
    IMPRIMIR        shift and go to state 73
    LEER            shift and go to state 74

    estatutos                      shift and go to state 228
    estatutosCycle                 shift and go to state 56
    func_regresar                  shift and go to state 57
    estatutos_opciones             shift and go to state 58
    empty                          shift and go to state 59
    asignar                        shift and go to state 61
    llamada_func                   shift and go to state 62
    ciclo_for                      shift and go to state 63
    ciclo_while                    shift and go to state 64
    condicion                      shift and go to state 65
    imprimir                       shift and go to state 66
    leer                           shift and go to state 67
    variable                       shift and go to state 68

state 209

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos . RBRACE SEMICOLON punto_end_function

    RBRACE          shift and go to state 229


state 210

    (39) parameterCycle -> COMMA type . ID punto_add_parameter parameterCycle

    ID              shift and go to state 230


state 211

    (22) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .

    VARIABLE        reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    RENGLON         reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    TABLA           reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    INICIO          reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    FUNCION         reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    REGRESAR        reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    ID              reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    PORCADA         reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    MIENTRAS        reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    SI              reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    LEER            reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    RBRACE          reduce using rule 22 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)


state 212

    (23) arrayCycle -> COMMA ID . LBRACKET CTEI RBRACKET punto_array arrayCycle

    LBRACKET        shift and go to state 231


state 213

    (26) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . punto_matrix matrixCycle SEMICOLON
    (29) punto_matrix -> .

    COMMA           reduce using rule 29 (punto_matrix -> .)
    SEMICOLON       reduce using rule 29 (punto_matrix -> .)

    punto_matrix                   shift and go to state 232

state 214

    (116) factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET . hyper_exp RBRACKET
    (77) hyper_exp -> . super_exp hyper_exp_aux
    (84) super_exp -> . exp super_exp_aux
    (95) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    hyper_exp                      shift and go to state 233
    super_exp                      shift and go to state 132
    exp                            shift and go to state 133
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 215

    (118) factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .

    TIMES           reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    DIVIDE          reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    CTEI            reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    CTEF            reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    ID              reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LPAREN          reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    PLUS            reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    MINUS           reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    SEMICOLON       reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    RBRACKET        reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    GREATER         reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LESS            reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    GREATEREQ       reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LESSEQ          reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    NOTEQUAL        reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    EQUAL           reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    Y               reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    O               reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    RPAREN          reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    COMMA           reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    HASTA           reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LBRACE          reduce using rule 118 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)


state 216

    (54) asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .

    REGRESAR        reduce using rule 54 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    ID              reduce using rule 54 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    PORCADA         reduce using rule 54 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    MIENTRAS        reduce using rule 54 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    SI              reduce using rule 54 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    IMPRIMIR        reduce using rule 54 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    LEER            reduce using rule 54 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    RBRACE          reduce using rule 54 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)


state 217

    (128) llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 234


state 218

    (126) func_params -> hyper_exp func_params_aux .

    RPAREN          reduce using rule 126 (func_params -> hyper_exp func_params_aux .)


state 219

    (124) func_params_aux -> COMMA . hyper_exp func_params_aux
    (77) hyper_exp -> . super_exp hyper_exp_aux
    (84) super_exp -> . exp super_exp_aux
    (95) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    hyper_exp                      shift and go to state 235
    super_exp                      shift and go to state 132
    exp                            shift and go to state 133
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 220

    (125) func_params_aux -> empty .

    RPAREN          reduce using rule 125 (func_params_aux -> empty .)


state 221

    (57) variable_aux -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 236


state 222

    (67) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int . HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON

    HASTA           shift and go to state 237


state 223

    (63) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while . LBRACE estatutos RBRACE punto_fin_while SEMICOLON

    LBRACE          shift and go to state 238


state 224

    (72) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE . estatutos RBRACE punto_fin_si SEMICOLON
    (73) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE . estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (42) estatutos -> . estatutosCycle
    (43) estatutos -> . func_regresar
    (44) estatutosCycle -> . estatutos_opciones estatutos
    (45) estatutosCycle -> . empty
    (53) func_regresar -> . REGRESAR exp SEMICOLON
    (46) estatutos_opciones -> . asignar
    (47) estatutos_opciones -> . llamada_func
    (48) estatutos_opciones -> . ciclo_for
    (49) estatutos_opciones -> . ciclo_while
    (50) estatutos_opciones -> . condicion
    (51) estatutos_opciones -> . imprimir
    (52) estatutos_opciones -> . leer
    (137) empty -> .
    (54) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (128) llamada_func -> . ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON
    (67) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (63) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (72) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (73) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (131) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (62) leer -> . LEER variable SEMICOLON
    (55) variable -> . ID variable_aux

    REGRESAR        shift and go to state 60
    RBRACE          reduce using rule 137 (empty -> .)
    ID              shift and go to state 69
    PORCADA         shift and go to state 70
    MIENTRAS        shift and go to state 71
    SI              shift and go to state 72
    IMPRIMIR        shift and go to state 73
    LEER            shift and go to state 74

    estatutos                      shift and go to state 239
    estatutosCycle                 shift and go to state 56
    func_regresar                  shift and go to state 57
    estatutos_opciones             shift and go to state 58
    empty                          shift and go to state 59
    asignar                        shift and go to state 61
    llamada_func                   shift and go to state 62
    ciclo_for                      shift and go to state 63
    ciclo_while                    shift and go to state 64
    condicion                      shift and go to state 65
    imprimir                       shift and go to state 66
    leer                           shift and go to state 67
    variable                       shift and go to state 68

state 225

    (78) hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .

    RPAREN          reduce using rule 78 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    RBRACKET        reduce using rule 78 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    SEMICOLON       reduce using rule 78 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    COMMA           reduce using rule 78 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    HASTA           reduce using rule 78 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    LBRACE          reduce using rule 78 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)


state 226

    (85) super_exp_aux -> push_op_relacionales exp check_op_relacionales .

    Y               reduce using rule 85 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    O               reduce using rule 85 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    CTEI            reduce using rule 85 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    CTEF            reduce using rule 85 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    ID              reduce using rule 85 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    LPAREN          reduce using rule 85 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    RPAREN          reduce using rule 85 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    RBRACKET        reduce using rule 85 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    SEMICOLON       reduce using rule 85 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    COMMA           reduce using rule 85 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    HASTA           reduce using rule 85 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    LBRACE          reduce using rule 85 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)


state 227

    (134) imprimirCycle -> COMMA imprimir_aux .

    RPAREN          reduce using rule 134 (imprimirCycle -> COMMA imprimir_aux .)


state 228

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos . RBRACE SEMICOLON punto_end_function

    RBRACE          shift and go to state 240


state 229

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE . SEMICOLON punto_end_function

    SEMICOLON       shift and go to state 241


state 230

    (39) parameterCycle -> COMMA type ID . punto_add_parameter parameterCycle
    (41) punto_add_parameter -> .

    COMMA           reduce using rule 41 (punto_add_parameter -> .)
    RPAREN          reduce using rule 41 (punto_add_parameter -> .)

    punto_add_parameter            shift and go to state 242

state 231

    (23) arrayCycle -> COMMA ID LBRACKET . CTEI RBRACKET punto_array arrayCycle

    CTEI            shift and go to state 243


state 232

    (26) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix . matrixCycle SEMICOLON
    (27) matrixCycle -> . COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle
    (28) matrixCycle -> . empty
    (137) empty -> .

    COMMA           shift and go to state 245
    SEMICOLON       reduce using rule 137 (empty -> .)

    matrixCycle                    shift and go to state 244
    empty                          shift and go to state 246

state 233

    (116) factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp . RBRACKET

    RBRACKET        shift and go to state 247


state 234

    (128) llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .

    REGRESAR        reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    ID              reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    PORCADA         reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    SI              reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    LEER            reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    RBRACE          reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    TIMES           reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    CTEI            reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    CTEF            reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    LPAREN          reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    PLUS            reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    MINUS           reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    GREATER         reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    LESS            reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    GREATEREQ       reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    LESSEQ          reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    EQUAL           reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    Y               reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    O               reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    RPAREN          reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    COMMA           reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    HASTA           reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)
    LBRACE          reduce using rule 128 (llamada_func -> ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON .)


state 235

    (124) func_params_aux -> COMMA hyper_exp . func_params_aux
    (124) func_params_aux -> . COMMA hyper_exp func_params_aux
    (125) func_params_aux -> . empty
    (137) empty -> .

    COMMA           shift and go to state 219
    RPAREN          reduce using rule 137 (empty -> .)

    func_params_aux                shift and go to state 248
    empty                          shift and go to state 220

state 236

    (57) variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    ASSIGN          reduce using rule 57 (variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 57 (variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 237

    (67) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA . hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (77) hyper_exp -> . super_exp hyper_exp_aux
    (84) super_exp -> . exp super_exp_aux
    (95) exp -> . term check_op_masmenos exp_aux
    (102) term -> . factor check_op_pordiv term_aux
    (109) factor -> . factor_constante
    (110) factor -> . factor_variable
    (111) factor -> . factor_expresion
    (112) factor_constante -> . CTEI push_int
    (113) factor_constante -> . CTEF push_float
    (114) factor_variable -> . ID push_id
    (115) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (116) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (117) factor_variable -> . ID llamada_func
    (118) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 92
    CTEF            shift and go to state 93
    ID              shift and go to state 94
    LPAREN          shift and go to state 95

    hyper_exp                      shift and go to state 249
    super_exp                      shift and go to state 132
    exp                            shift and go to state 133
    term                           shift and go to state 87
    factor                         shift and go to state 88
    factor_constante               shift and go to state 89
    factor_variable                shift and go to state 90
    factor_expresion               shift and go to state 91

state 238

    (63) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE . estatutos RBRACE punto_fin_while SEMICOLON
    (42) estatutos -> . estatutosCycle
    (43) estatutos -> . func_regresar
    (44) estatutosCycle -> . estatutos_opciones estatutos
    (45) estatutosCycle -> . empty
    (53) func_regresar -> . REGRESAR exp SEMICOLON
    (46) estatutos_opciones -> . asignar
    (47) estatutos_opciones -> . llamada_func
    (48) estatutos_opciones -> . ciclo_for
    (49) estatutos_opciones -> . ciclo_while
    (50) estatutos_opciones -> . condicion
    (51) estatutos_opciones -> . imprimir
    (52) estatutos_opciones -> . leer
    (137) empty -> .
    (54) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (128) llamada_func -> . ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON
    (67) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (63) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (72) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (73) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (131) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (62) leer -> . LEER variable SEMICOLON
    (55) variable -> . ID variable_aux

    REGRESAR        shift and go to state 60
    RBRACE          reduce using rule 137 (empty -> .)
    ID              shift and go to state 69
    PORCADA         shift and go to state 70
    MIENTRAS        shift and go to state 71
    SI              shift and go to state 72
    IMPRIMIR        shift and go to state 73
    LEER            shift and go to state 74

    estatutos                      shift and go to state 250
    estatutosCycle                 shift and go to state 56
    func_regresar                  shift and go to state 57
    estatutos_opciones             shift and go to state 58
    empty                          shift and go to state 59
    asignar                        shift and go to state 61
    llamada_func                   shift and go to state 62
    ciclo_for                      shift and go to state 63
    ciclo_while                    shift and go to state 64
    condicion                      shift and go to state 65
    imprimir                       shift and go to state 66
    leer                           shift and go to state 67
    variable                       shift and go to state 68

state 239

    (72) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos . RBRACE punto_fin_si SEMICOLON
    (73) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos . RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON

    RBRACE          shift and go to state 251


state 240

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE . SEMICOLON punto_end_function

    SEMICOLON       shift and go to state 252


state 241

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON . punto_end_function
    (35) punto_end_function -> .

    FUNCION         reduce using rule 35 (punto_end_function -> .)
    INICIO          reduce using rule 35 (punto_end_function -> .)

    punto_end_function             shift and go to state 253

state 242

    (39) parameterCycle -> COMMA type ID punto_add_parameter . parameterCycle
    (39) parameterCycle -> . COMMA type ID punto_add_parameter parameterCycle
    (40) parameterCycle -> . empty
    (137) empty -> .

    COMMA           shift and go to state 182
    RPAREN          reduce using rule 137 (empty -> .)

    parameterCycle                 shift and go to state 254
    empty                          shift and go to state 183

state 243

    (23) arrayCycle -> COMMA ID LBRACKET CTEI . RBRACKET punto_array arrayCycle

    RBRACKET        shift and go to state 255


state 244

    (26) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle . SEMICOLON

    SEMICOLON       shift and go to state 256


state 245

    (27) matrixCycle -> COMMA . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    ID              shift and go to state 257


state 246

    (28) matrixCycle -> empty .

    SEMICOLON       reduce using rule 28 (matrixCycle -> empty .)


state 247

    (116) factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .

    TIMES           reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    DIVIDE          reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    CTEI            reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    CTEF            reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    ID              reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LPAREN          reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    PLUS            reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    MINUS           reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    SEMICOLON       reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    RBRACKET        reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    GREATER         reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LESS            reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    GREATEREQ       reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LESSEQ          reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    NOTEQUAL        reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    EQUAL           reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    Y               reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    O               reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    RPAREN          reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    COMMA           reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    HASTA           reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LBRACE          reduce using rule 116 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)


state 248

    (124) func_params_aux -> COMMA hyper_exp func_params_aux .

    RPAREN          reduce using rule 124 (func_params_aux -> COMMA hyper_exp func_params_aux .)


state 249

    (67) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp . punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (70) punto_valida_exp -> .

    LBRACE          reduce using rule 70 (punto_valida_exp -> .)

    punto_valida_exp               shift and go to state 258

state 250

    (63) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos . RBRACE punto_fin_while SEMICOLON

    RBRACE          shift and go to state 259


state 251

    (72) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE . punto_fin_si SEMICOLON
    (73) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE . SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (75) punto_fin_si -> .

    SINO            shift and go to state 261
    SEMICOLON       reduce using rule 75 (punto_fin_si -> .)

    punto_fin_si                   shift and go to state 260

state 252

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON . punto_end_function
    (35) punto_end_function -> .

    FUNCION         reduce using rule 35 (punto_end_function -> .)
    INICIO          reduce using rule 35 (punto_end_function -> .)

    punto_end_function             shift and go to state 262

state 253

    (31) dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function .

    FUNCION         reduce using rule 31 (dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function .)
    INICIO          reduce using rule 31 (dec_func -> FUNCION SINREGRESAR ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function .)


state 254

    (39) parameterCycle -> COMMA type ID punto_add_parameter parameterCycle .

    RPAREN          reduce using rule 39 (parameterCycle -> COMMA type ID punto_add_parameter parameterCycle .)


state 255

    (23) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET . punto_array arrayCycle
    (25) punto_array -> .

    COMMA           reduce using rule 25 (punto_array -> .)
    SEMICOLON       reduce using rule 25 (punto_array -> .)

    punto_array                    shift and go to state 263

state 256

    (26) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .

    VARIABLE        reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    RENGLON         reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    TABLA           reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    INICIO          reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    FUNCION         reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    REGRESAR        reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    ID              reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    PORCADA         reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    MIENTRAS        reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    SI              reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    LEER            reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    RBRACE          reduce using rule 26 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)


state 257

    (27) matrixCycle -> COMMA ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    LBRACKET        shift and go to state 264


state 258

    (67) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp . LBRACE estatutos RBRACE punto_termina_for SEMICOLON

    LBRACE          shift and go to state 265


state 259

    (63) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE . punto_fin_while SEMICOLON
    (66) punto_fin_while -> .

    SEMICOLON       reduce using rule 66 (punto_fin_while -> .)

    punto_fin_while                shift and go to state 266

state 260

    (72) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si . SEMICOLON

    SEMICOLON       shift and go to state 267


state 261

    (73) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO . punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (76) punto_sino -> .

    LBRACE          reduce using rule 76 (punto_sino -> .)

    punto_sino                     shift and go to state 268

state 262

    (30) dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function .

    FUNCION         reduce using rule 30 (dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function .)
    INICIO          reduce using rule 30 (dec_func -> FUNCION type ID punto_add_func punto_global_func_var LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos RBRACE SEMICOLON punto_end_function .)


state 263

    (23) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array . arrayCycle
    (23) arrayCycle -> . COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle
    (24) arrayCycle -> . empty
    (137) empty -> .

    COMMA           shift and go to state 186
    SEMICOLON       reduce using rule 137 (empty -> .)

    arrayCycle                     shift and go to state 269
    empty                          shift and go to state 187

state 264

    (27) matrixCycle -> COMMA ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    CTEI            shift and go to state 270


state 265

    (67) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE . estatutos RBRACE punto_termina_for SEMICOLON
    (42) estatutos -> . estatutosCycle
    (43) estatutos -> . func_regresar
    (44) estatutosCycle -> . estatutos_opciones estatutos
    (45) estatutosCycle -> . empty
    (53) func_regresar -> . REGRESAR exp SEMICOLON
    (46) estatutos_opciones -> . asignar
    (47) estatutos_opciones -> . llamada_func
    (48) estatutos_opciones -> . ciclo_for
    (49) estatutos_opciones -> . ciclo_while
    (50) estatutos_opciones -> . condicion
    (51) estatutos_opciones -> . imprimir
    (52) estatutos_opciones -> . leer
    (137) empty -> .
    (54) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (128) llamada_func -> . ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON
    (67) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (63) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (72) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (73) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (131) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (62) leer -> . LEER variable SEMICOLON
    (55) variable -> . ID variable_aux

    REGRESAR        shift and go to state 60
    RBRACE          reduce using rule 137 (empty -> .)
    ID              shift and go to state 69
    PORCADA         shift and go to state 70
    MIENTRAS        shift and go to state 71
    SI              shift and go to state 72
    IMPRIMIR        shift and go to state 73
    LEER            shift and go to state 74

    estatutos                      shift and go to state 271
    estatutosCycle                 shift and go to state 56
    func_regresar                  shift and go to state 57
    estatutos_opciones             shift and go to state 58
    empty                          shift and go to state 59
    asignar                        shift and go to state 61
    llamada_func                   shift and go to state 62
    ciclo_for                      shift and go to state 63
    ciclo_while                    shift and go to state 64
    condicion                      shift and go to state 65
    imprimir                       shift and go to state 66
    leer                           shift and go to state 67
    variable                       shift and go to state 68

state 266

    (63) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while . SEMICOLON

    SEMICOLON       shift and go to state 272


state 267

    (72) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .

    REGRESAR        reduce using rule 72 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    ID              reduce using rule 72 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    PORCADA         reduce using rule 72 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    MIENTRAS        reduce using rule 72 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    SI              reduce using rule 72 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    IMPRIMIR        reduce using rule 72 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    LEER            reduce using rule 72 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    RBRACE          reduce using rule 72 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)


state 268

    (73) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino . LBRACE estatutos RBRACE punto_fin_si SEMICOLON

    LBRACE          shift and go to state 273


state 269

    (23) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle .

    SEMICOLON       reduce using rule 23 (arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle .)


state 270

    (27) matrixCycle -> COMMA ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    RBRACKET        shift and go to state 274


state 271

    (67) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos . RBRACE punto_termina_for SEMICOLON

    RBRACE          shift and go to state 275


state 272

    (63) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .

    REGRESAR        reduce using rule 63 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    ID              reduce using rule 63 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    PORCADA         reduce using rule 63 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    MIENTRAS        reduce using rule 63 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    SI              reduce using rule 63 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    IMPRIMIR        reduce using rule 63 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    LEER            reduce using rule 63 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)
    RBRACE          reduce using rule 63 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON .)


state 273

    (73) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE . estatutos RBRACE punto_fin_si SEMICOLON
    (42) estatutos -> . estatutosCycle
    (43) estatutos -> . func_regresar
    (44) estatutosCycle -> . estatutos_opciones estatutos
    (45) estatutosCycle -> . empty
    (53) func_regresar -> . REGRESAR exp SEMICOLON
    (46) estatutos_opciones -> . asignar
    (47) estatutos_opciones -> . llamada_func
    (48) estatutos_opciones -> . ciclo_for
    (49) estatutos_opciones -> . ciclo_while
    (50) estatutos_opciones -> . condicion
    (51) estatutos_opciones -> . imprimir
    (52) estatutos_opciones -> . leer
    (137) empty -> .
    (54) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (128) llamada_func -> . ID punto_verify_func LPAREN punto_create_era func_params RPAREN SEMICOLON
    (67) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON
    (63) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos RBRACE punto_fin_while SEMICOLON
    (72) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (73) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON
    (131) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (62) leer -> . LEER variable SEMICOLON
    (55) variable -> . ID variable_aux

    REGRESAR        shift and go to state 60
    RBRACE          reduce using rule 137 (empty -> .)
    ID              shift and go to state 69
    PORCADA         shift and go to state 70
    MIENTRAS        shift and go to state 71
    SI              shift and go to state 72
    IMPRIMIR        shift and go to state 73
    LEER            shift and go to state 74

    estatutos                      shift and go to state 276
    estatutosCycle                 shift and go to state 56
    func_regresar                  shift and go to state 57
    estatutos_opciones             shift and go to state 58
    empty                          shift and go to state 59
    asignar                        shift and go to state 61
    llamada_func                   shift and go to state 62
    ciclo_for                      shift and go to state 63
    ciclo_while                    shift and go to state 64
    condicion                      shift and go to state 65
    imprimir                       shift and go to state 66
    leer                           shift and go to state 67
    variable                       shift and go to state 68

state 274

    (27) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    LBRACKET        shift and go to state 277


state 275

    (67) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE . punto_termina_for SEMICOLON
    (71) punto_termina_for -> .

    SEMICOLON       reduce using rule 71 (punto_termina_for -> .)

    punto_termina_for              shift and go to state 278

state 276

    (73) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos . RBRACE punto_fin_si SEMICOLON

    RBRACE          shift and go to state 279


state 277

    (27) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET punto_matrix matrixCycle

    CTEI            shift and go to state 280


state 278

    (67) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for . SEMICOLON

    SEMICOLON       shift and go to state 281


state 279

    (73) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE . punto_fin_si SEMICOLON
    (75) punto_fin_si -> .

    SEMICOLON       reduce using rule 75 (punto_fin_si -> .)

    punto_fin_si                   shift and go to state 282

state 280

    (27) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET punto_matrix matrixCycle

    RBRACKET        shift and go to state 283


state 281

    (67) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .

    REGRESAR        reduce using rule 67 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    ID              reduce using rule 67 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    PORCADA         reduce using rule 67 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    MIENTRAS        reduce using rule 67 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    SI              reduce using rule 67 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    IMPRIMIR        reduce using rule 67 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    LEER            reduce using rule 67 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)
    RBRACE          reduce using rule 67 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos RBRACE punto_termina_for SEMICOLON .)


state 282

    (73) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si . SEMICOLON

    SEMICOLON       shift and go to state 284


state 283

    (27) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . punto_matrix matrixCycle
    (29) punto_matrix -> .

    COMMA           reduce using rule 29 (punto_matrix -> .)
    SEMICOLON       reduce using rule 29 (punto_matrix -> .)

    punto_matrix                   shift and go to state 285

state 284

    (73) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .

    REGRESAR        reduce using rule 73 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    ID              reduce using rule 73 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    PORCADA         reduce using rule 73 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    MIENTRAS        reduce using rule 73 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    SI              reduce using rule 73 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    IMPRIMIR        reduce using rule 73 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    LEER            reduce using rule 73 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)
    RBRACE          reduce using rule 73 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos RBRACE SINO punto_sino LBRACE estatutos RBRACE punto_fin_si SEMICOLON .)


state 285

    (27) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix . matrixCycle
    (27) matrixCycle -> . COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle
    (28) matrixCycle -> . empty
    (137) empty -> .

    COMMA           shift and go to state 245
    SEMICOLON       reduce using rule 137 (empty -> .)

    matrixCycle                    shift and go to state 286
    empty                          shift and go to state 246

state 286

    (27) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle .

    SEMICOLON       reduce using rule 27 (matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INICIO in state 5 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 5 resolved as shift
WARNING: shift/reduce conflict for INICIO in state 7 resolved as shift
WARNING: shift/reduce conflict for ID in state 94 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (dec_var_cycle -> empty)
WARNING: rejected rule (dec_func_cycle -> empty) in state 11
WARNING: reduce/reduce conflict in state 146 resolved using rule (exp_aux -> empty)
WARNING: rejected rule (push_op_exp_masmenos -> empty) in state 146
WARNING: reduce/reduce conflict in state 151 resolved using rule (term_aux -> empty)
WARNING: rejected rule (push_op_exp_pordiv -> empty) in state 151
WARNING: reduce/reduce conflict in state 169 resolved using rule (super_exp_aux -> empty)
WARNING: rejected rule (push_op_relacionales -> empty) in state 169
WARNING: Rule (push_op_exp_masmenos -> empty) is never reduced
WARNING: Rule (push_op_exp_pordiv -> empty) is never reduced
WARNING: Rule (push_op_relacionales -> empty) is never reduced
