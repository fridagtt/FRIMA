Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTECHAR
    EQUAL
    GREATER
    GREATEREQ
    LESS
    LESSEQ
    NOTEQUAL
    o
    y

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID punto_programa COLON inicio
Rule 2     programa -> PROGRAMA ID punto_programa COLON dec_var inicio
Rule 3     programa -> PROGRAMA ID punto_programa COLON dec_var dec_func inicio
Rule 4     programa -> PROGRAMA ID punto_programa COLON dec_func inicio
Rule 5     punto_programa -> <empty>
Rule 6     inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON
Rule 7     dec_var -> simple_var
Rule 8     dec_var -> array
Rule 9     dec_var -> matrix
Rule 10    simple_var -> VARIABLE type punto_simple_var ARROW ID simpleVarCycle SEMICOLON
Rule 11    simpleVarCycle -> COMMA ID simpleVarCycle
Rule 12    simpleVarCycle -> empty
Rule 13    punto_simple_var -> <empty>
Rule 14    type -> ENTERO
Rule 15    type -> DECIMAL
Rule 16    type -> LETRA
Rule 17    array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON
Rule 18    arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET arrayCycle
Rule 19    arrayCycle -> empty
Rule 20    matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON
Rule 21    matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle
Rule 22    matrixCycle -> empty
Rule 23    dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
Rule 24    dec_func_return -> type
Rule 25    dec_func_return -> SINREGRESAR
Rule 26    decFuncCycle -> estatutos decFuncCycle
Rule 27    decFuncCycle -> empty
Rule 28    parameter -> type ID parameterCycle
Rule 29    parameterCycle -> COMMA type ID parameterCycle
Rule 30    parameterCycle -> empty
Rule 31    estatutos -> asignar
Rule 32    estatutos -> llamada_func
Rule 33    estatutos -> ciclo_for
Rule 34    estatutos -> ciclo_while
Rule 35    estatutos -> condicion
Rule 36    estatutos -> escribe
Rule 37    estatutos -> leer
Rule 38    estatutos -> empty
Rule 39    asignar -> variable ASSIGN exp SEMICOLON
Rule 40    variable -> ID variable_aux
Rule 41    variable_aux -> LBRACKET exp RBRACKET
Rule 42    variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 43    variable_aux -> empty
Rule 44    leer -> LEER variable SEMICOLON
Rule 45    ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
Rule 46    whileCycle -> estatutos whileCycle
Rule 47    whileCycle -> empty
Rule 48    ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
Rule 49    forCycle -> estatutos forCycle
Rule 50    forCycle -> empty
Rule 51    condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
Rule 52    condicionCycle -> estatutos condicionCycle
Rule 53    condicionCycle -> empty
Rule 54    sinoCondicion -> SINO LBRACE estatutos condicionCycle RBRACE
Rule 55    sinoCondicion -> empty
Rule 56    exp -> term expT
Rule 57    expT -> PLUS exp
Rule 58    expT -> MINUS exp
Rule 59    expT -> empty
Rule 60    term -> factor termT
Rule 61    termT -> TIMES term
Rule 62    termT -> DIVIDE term
Rule 63    termT -> empty
Rule 64    factor -> factor_constante
Rule 65    factor -> factor_variable
Rule 66    factor -> factor_expresion
Rule 67    factor_constante -> CTEI
Rule 68    factor_constante -> CTEF
Rule 69    factor_variable -> ID
Rule 70    factor_variable -> ID LBRACKET exp RBRACKET
Rule 71    factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 72    factor_variable -> ID llamada_func
Rule 73    factor_expresion -> LPAREN exp RPAREN
Rule 74    llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON
Rule 75    llamadaCYCLE -> exp llamadaCYCLE_aux
Rule 76    llamadaCYCLE -> empty
Rule 77    llamadaCYCLE_aux -> COMMA exp llamadaCYCLE_aux
Rule 78    llamadaCYCLE_aux -> empty
Rule 79    escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
Rule 80    escribe_aux -> exp escribeCycle
Rule 81    escribe_aux -> CTESTRING escribeCycle
Rule 82    escribeCycle -> COMMA escribe_aux
Rule 83    escribeCycle -> empty
Rule 84    empty -> <empty>

Terminals, with rules where they appear

ARROW                : 10 17 20
ASSIGN               : 39
COLON                : 1 2 3 4
COMMA                : 11 18 21 29 77 82
CTECHAR              : 
CTEF                 : 68
CTEI                 : 17 18 20 20 21 21 67
CTESTRING            : 81
DECIMAL              : 15
DIVIDE               : 62
EN                   : 48
ENTERO               : 14
EQUAL                : 
FUNCION              : 23
GREATER              : 
GREATEREQ            : 
ID                   : 1 2 3 4 10 11 17 18 20 21 23 28 29 40 69 70 71 72 74
IMPRIMIR             : 79
INICIO               : 6
LBRACE               : 6 23 45 48 51 54
LBRACKET             : 17 18 20 20 21 21 41 42 42 70 71 71
LEER                 : 44
LESS                 : 
LESSEQ               : 
LETRA                : 16
LPAREN               : 6 23 45 51 73 74 79
MIENTRAS             : 45
MINUS                : 58
NOTEQUAL             : 
PLUS                 : 57
PORCADA              : 48
PROGRAMA             : 1 2 3 4
RBRACE               : 6 23 45 48 51 54
RBRACKET             : 17 18 20 20 21 21 41 42 42 70 71 71
REGRESAR             : 23
RENGLON              : 17
RPAREN               : 6 23 45 51 73 74 79
SEMICOLON            : 6 10 17 20 23 23 39 44 45 48 51 74 79
SI                   : 51
SINO                 : 54
SINREGRESAR          : 25
TABLA                : 20
TIMES                : 61
VARIABLE             : 10
error                : 
o                    : 
y                    : 

Nonterminals, with rules where they appear

array                : 8
arrayCycle           : 17 18
asignar              : 31
ciclo_for            : 33
ciclo_while          : 34
condicion            : 35
condicionCycle       : 51 52 54
decFuncCycle         : 23 26
dec_func             : 3 4
dec_func_return      : 23
dec_var              : 2 3 23
empty                : 12 19 22 27 30 38 43 47 50 53 55 59 63 76 78 83
escribe              : 36
escribeCycle         : 80 81
escribe_aux          : 79 82
estatutos            : 6 23 26 45 46 48 49 51 52 54
exp                  : 39 41 42 42 45 48 48 51 57 58 70 71 71 73 75 77 80
expT                 : 56
factor               : 60
factor_constante     : 64
factor_expresion     : 66
factor_variable      : 65
forCycle             : 48 49
inicio               : 1 2 3 4
leer                 : 37
llamadaCYCLE         : 74
llamadaCYCLE_aux     : 75 77
llamada_func         : 32 72
matrix               : 9
matrixCycle          : 20 21
parameter            : 23
parameterCycle       : 28 29
programa             : 0
punto_programa       : 1 2 3 4
punto_simple_var     : 10
simpleVarCycle       : 10 11
simple_var           : 7
sinoCondicion        : 51
term                 : 56 61 62
termT                : 60
type                 : 10 17 20 24 28 29
variable             : 23 39 44
variable_aux         : 40
whileCycle           : 45 46

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID punto_programa COLON inicio
    (2) programa -> . PROGRAMA ID punto_programa COLON dec_var inicio
    (3) programa -> . PROGRAMA ID punto_programa COLON dec_var dec_func inicio
    (4) programa -> . PROGRAMA ID punto_programa COLON dec_func inicio

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID punto_programa COLON inicio
    (2) programa -> PROGRAMA . ID punto_programa COLON dec_var inicio
    (3) programa -> PROGRAMA . ID punto_programa COLON dec_var dec_func inicio
    (4) programa -> PROGRAMA . ID punto_programa COLON dec_func inicio

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . punto_programa COLON inicio
    (2) programa -> PROGRAMA ID . punto_programa COLON dec_var inicio
    (3) programa -> PROGRAMA ID . punto_programa COLON dec_var dec_func inicio
    (4) programa -> PROGRAMA ID . punto_programa COLON dec_func inicio
    (5) punto_programa -> .

    COLON           reduce using rule 5 (punto_programa -> .)

    punto_programa                 shift and go to state 4

state 4

    (1) programa -> PROGRAMA ID punto_programa . COLON inicio
    (2) programa -> PROGRAMA ID punto_programa . COLON dec_var inicio
    (3) programa -> PROGRAMA ID punto_programa . COLON dec_var dec_func inicio
    (4) programa -> PROGRAMA ID punto_programa . COLON dec_func inicio

    COLON           shift and go to state 5


state 5

    (1) programa -> PROGRAMA ID punto_programa COLON . inicio
    (2) programa -> PROGRAMA ID punto_programa COLON . dec_var inicio
    (3) programa -> PROGRAMA ID punto_programa COLON . dec_var dec_func inicio
    (4) programa -> PROGRAMA ID punto_programa COLON . dec_func inicio
    (6) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON
    (7) dec_var -> . simple_var
    (8) dec_var -> . array
    (9) dec_var -> . matrix
    (23) dec_func -> . FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
    (10) simple_var -> . VARIABLE type punto_simple_var ARROW ID simpleVarCycle SEMICOLON
    (17) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON
    (20) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    INICIO          shift and go to state 9
    FUNCION         shift and go to state 13
    VARIABLE        shift and go to state 14
    RENGLON         shift and go to state 15
    TABLA           shift and go to state 16

    inicio                         shift and go to state 6
    dec_var                        shift and go to state 7
    dec_func                       shift and go to state 8
    simple_var                     shift and go to state 10
    array                          shift and go to state 11
    matrix                         shift and go to state 12

state 6

    (1) programa -> PROGRAMA ID punto_programa COLON inicio .

    $end            reduce using rule 1 (programa -> PROGRAMA ID punto_programa COLON inicio .)


state 7

    (2) programa -> PROGRAMA ID punto_programa COLON dec_var . inicio
    (3) programa -> PROGRAMA ID punto_programa COLON dec_var . dec_func inicio
    (6) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON
    (23) dec_func -> . FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON

    INICIO          shift and go to state 9
    FUNCION         shift and go to state 13

    inicio                         shift and go to state 17
    dec_func                       shift and go to state 18

state 8

    (4) programa -> PROGRAMA ID punto_programa COLON dec_func . inicio
    (6) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON

    INICIO          shift and go to state 9

    inicio                         shift and go to state 19

state 9

    (6) inicio -> INICIO . LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON

    LPAREN          shift and go to state 20


state 10

    (7) dec_var -> simple_var .

    INICIO          reduce using rule 7 (dec_var -> simple_var .)
    FUNCION         reduce using rule 7 (dec_var -> simple_var .)
    ID              reduce using rule 7 (dec_var -> simple_var .)
    PORCADA         reduce using rule 7 (dec_var -> simple_var .)
    MIENTRAS        reduce using rule 7 (dec_var -> simple_var .)
    SI              reduce using rule 7 (dec_var -> simple_var .)
    IMPRIMIR        reduce using rule 7 (dec_var -> simple_var .)
    LEER            reduce using rule 7 (dec_var -> simple_var .)
    REGRESAR        reduce using rule 7 (dec_var -> simple_var .)


state 11

    (8) dec_var -> array .

    INICIO          reduce using rule 8 (dec_var -> array .)
    FUNCION         reduce using rule 8 (dec_var -> array .)
    ID              reduce using rule 8 (dec_var -> array .)
    PORCADA         reduce using rule 8 (dec_var -> array .)
    MIENTRAS        reduce using rule 8 (dec_var -> array .)
    SI              reduce using rule 8 (dec_var -> array .)
    IMPRIMIR        reduce using rule 8 (dec_var -> array .)
    LEER            reduce using rule 8 (dec_var -> array .)
    REGRESAR        reduce using rule 8 (dec_var -> array .)


state 12

    (9) dec_var -> matrix .

    INICIO          reduce using rule 9 (dec_var -> matrix .)
    FUNCION         reduce using rule 9 (dec_var -> matrix .)
    ID              reduce using rule 9 (dec_var -> matrix .)
    PORCADA         reduce using rule 9 (dec_var -> matrix .)
    MIENTRAS        reduce using rule 9 (dec_var -> matrix .)
    SI              reduce using rule 9 (dec_var -> matrix .)
    IMPRIMIR        reduce using rule 9 (dec_var -> matrix .)
    LEER            reduce using rule 9 (dec_var -> matrix .)
    REGRESAR        reduce using rule 9 (dec_var -> matrix .)


state 13

    (23) dec_func -> FUNCION . dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
    (24) dec_func_return -> . type
    (25) dec_func_return -> . SINREGRESAR
    (14) type -> . ENTERO
    (15) type -> . DECIMAL
    (16) type -> . LETRA

    SINREGRESAR     shift and go to state 23
    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    LETRA           shift and go to state 26

    dec_func_return                shift and go to state 21
    type                           shift and go to state 22

state 14

    (10) simple_var -> VARIABLE . type punto_simple_var ARROW ID simpleVarCycle SEMICOLON
    (14) type -> . ENTERO
    (15) type -> . DECIMAL
    (16) type -> . LETRA

    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    LETRA           shift and go to state 26

    type                           shift and go to state 27

state 15

    (17) array -> RENGLON . type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON
    (14) type -> . ENTERO
    (15) type -> . DECIMAL
    (16) type -> . LETRA

    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    LETRA           shift and go to state 26

    type                           shift and go to state 28

state 16

    (20) matrix -> TABLA . type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON
    (14) type -> . ENTERO
    (15) type -> . DECIMAL
    (16) type -> . LETRA

    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    LETRA           shift and go to state 26

    type                           shift and go to state 29

state 17

    (2) programa -> PROGRAMA ID punto_programa COLON dec_var inicio .

    $end            reduce using rule 2 (programa -> PROGRAMA ID punto_programa COLON dec_var inicio .)


state 18

    (3) programa -> PROGRAMA ID punto_programa COLON dec_var dec_func . inicio
    (6) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON

    INICIO          shift and go to state 9

    inicio                         shift and go to state 30

state 19

    (4) programa -> PROGRAMA ID punto_programa COLON dec_func inicio .

    $end            reduce using rule 4 (programa -> PROGRAMA ID punto_programa COLON dec_func inicio .)


state 20

    (6) inicio -> INICIO LPAREN . RPAREN LBRACE estatutos RBRACE SEMICOLON

    RPAREN          shift and go to state 31


state 21

    (23) dec_func -> FUNCION dec_func_return . ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON

    ID              shift and go to state 32


state 22

    (24) dec_func_return -> type .

    ID              reduce using rule 24 (dec_func_return -> type .)


state 23

    (25) dec_func_return -> SINREGRESAR .

    ID              reduce using rule 25 (dec_func_return -> SINREGRESAR .)


state 24

    (14) type -> ENTERO .

    ID              reduce using rule 14 (type -> ENTERO .)
    ARROW           reduce using rule 14 (type -> ENTERO .)


state 25

    (15) type -> DECIMAL .

    ID              reduce using rule 15 (type -> DECIMAL .)
    ARROW           reduce using rule 15 (type -> DECIMAL .)


state 26

    (16) type -> LETRA .

    ID              reduce using rule 16 (type -> LETRA .)
    ARROW           reduce using rule 16 (type -> LETRA .)


state 27

    (10) simple_var -> VARIABLE type . punto_simple_var ARROW ID simpleVarCycle SEMICOLON
    (13) punto_simple_var -> .

    ARROW           reduce using rule 13 (punto_simple_var -> .)

    punto_simple_var               shift and go to state 33

state 28

    (17) array -> RENGLON type . ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON

    ARROW           shift and go to state 34


state 29

    (20) matrix -> TABLA type . ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    ARROW           shift and go to state 35


state 30

    (3) programa -> PROGRAMA ID punto_programa COLON dec_var dec_func inicio .

    $end            reduce using rule 3 (programa -> PROGRAMA ID punto_programa COLON dec_var dec_func inicio .)


state 31

    (6) inicio -> INICIO LPAREN RPAREN . LBRACE estatutos RBRACE SEMICOLON

    LBRACE          shift and go to state 36


state 32

    (23) dec_func -> FUNCION dec_func_return ID . LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON

    LPAREN          shift and go to state 37


state 33

    (10) simple_var -> VARIABLE type punto_simple_var . ARROW ID simpleVarCycle SEMICOLON

    ARROW           shift and go to state 38


state 34

    (17) array -> RENGLON type ARROW . ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON

    ID              shift and go to state 39


state 35

    (20) matrix -> TABLA type ARROW . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    ID              shift and go to state 40


state 36

    (6) inicio -> INICIO LPAREN RPAREN LBRACE . estatutos RBRACE SEMICOLON
    (31) estatutos -> . asignar
    (32) estatutos -> . llamada_func
    (33) estatutos -> . ciclo_for
    (34) estatutos -> . ciclo_while
    (35) estatutos -> . condicion
    (36) estatutos -> . escribe
    (37) estatutos -> . leer
    (38) estatutos -> . empty
    (39) asignar -> . variable ASSIGN exp SEMICOLON
    (74) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (48) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (45) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (51) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (79) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (44) leer -> . LEER variable SEMICOLON
    (84) empty -> .
    (40) variable -> . ID variable_aux

    ID              shift and go to state 51
    PORCADA         shift and go to state 52
    MIENTRAS        shift and go to state 53
    SI              shift and go to state 54
    IMPRIMIR        shift and go to state 55
    LEER            shift and go to state 56
    RBRACE          reduce using rule 84 (empty -> .)

    estatutos                      shift and go to state 41
    asignar                        shift and go to state 42
    llamada_func                   shift and go to state 43
    ciclo_for                      shift and go to state 44
    ciclo_while                    shift and go to state 45
    condicion                      shift and go to state 46
    escribe                        shift and go to state 47
    leer                           shift and go to state 48
    empty                          shift and go to state 49
    variable                       shift and go to state 50

state 37

    (23) dec_func -> FUNCION dec_func_return ID LPAREN . parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
    (28) parameter -> . type ID parameterCycle
    (14) type -> . ENTERO
    (15) type -> . DECIMAL
    (16) type -> . LETRA

    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    LETRA           shift and go to state 26

    parameter                      shift and go to state 57
    type                           shift and go to state 58

state 38

    (10) simple_var -> VARIABLE type punto_simple_var ARROW . ID simpleVarCycle SEMICOLON

    ID              shift and go to state 59


state 39

    (17) array -> RENGLON type ARROW ID . LBRACKET CTEI RBRACKET arrayCycle SEMICOLON

    LBRACKET        shift and go to state 60


state 40

    (20) matrix -> TABLA type ARROW ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    LBRACKET        shift and go to state 61


state 41

    (6) inicio -> INICIO LPAREN RPAREN LBRACE estatutos . RBRACE SEMICOLON

    RBRACE          shift and go to state 62


state 42

    (31) estatutos -> asignar .

    RBRACE          reduce using rule 31 (estatutos -> asignar .)
    ID              reduce using rule 31 (estatutos -> asignar .)
    PORCADA         reduce using rule 31 (estatutos -> asignar .)
    MIENTRAS        reduce using rule 31 (estatutos -> asignar .)
    SI              reduce using rule 31 (estatutos -> asignar .)
    IMPRIMIR        reduce using rule 31 (estatutos -> asignar .)
    LEER            reduce using rule 31 (estatutos -> asignar .)
    REGRESAR        reduce using rule 31 (estatutos -> asignar .)


state 43

    (32) estatutos -> llamada_func .

    RBRACE          reduce using rule 32 (estatutos -> llamada_func .)
    ID              reduce using rule 32 (estatutos -> llamada_func .)
    PORCADA         reduce using rule 32 (estatutos -> llamada_func .)
    MIENTRAS        reduce using rule 32 (estatutos -> llamada_func .)
    SI              reduce using rule 32 (estatutos -> llamada_func .)
    IMPRIMIR        reduce using rule 32 (estatutos -> llamada_func .)
    LEER            reduce using rule 32 (estatutos -> llamada_func .)
    REGRESAR        reduce using rule 32 (estatutos -> llamada_func .)


state 44

    (33) estatutos -> ciclo_for .

    RBRACE          reduce using rule 33 (estatutos -> ciclo_for .)
    ID              reduce using rule 33 (estatutos -> ciclo_for .)
    PORCADA         reduce using rule 33 (estatutos -> ciclo_for .)
    MIENTRAS        reduce using rule 33 (estatutos -> ciclo_for .)
    SI              reduce using rule 33 (estatutos -> ciclo_for .)
    IMPRIMIR        reduce using rule 33 (estatutos -> ciclo_for .)
    LEER            reduce using rule 33 (estatutos -> ciclo_for .)
    REGRESAR        reduce using rule 33 (estatutos -> ciclo_for .)


state 45

    (34) estatutos -> ciclo_while .

    RBRACE          reduce using rule 34 (estatutos -> ciclo_while .)
    ID              reduce using rule 34 (estatutos -> ciclo_while .)
    PORCADA         reduce using rule 34 (estatutos -> ciclo_while .)
    MIENTRAS        reduce using rule 34 (estatutos -> ciclo_while .)
    SI              reduce using rule 34 (estatutos -> ciclo_while .)
    IMPRIMIR        reduce using rule 34 (estatutos -> ciclo_while .)
    LEER            reduce using rule 34 (estatutos -> ciclo_while .)
    REGRESAR        reduce using rule 34 (estatutos -> ciclo_while .)


state 46

    (35) estatutos -> condicion .

    RBRACE          reduce using rule 35 (estatutos -> condicion .)
    ID              reduce using rule 35 (estatutos -> condicion .)
    PORCADA         reduce using rule 35 (estatutos -> condicion .)
    MIENTRAS        reduce using rule 35 (estatutos -> condicion .)
    SI              reduce using rule 35 (estatutos -> condicion .)
    IMPRIMIR        reduce using rule 35 (estatutos -> condicion .)
    LEER            reduce using rule 35 (estatutos -> condicion .)
    REGRESAR        reduce using rule 35 (estatutos -> condicion .)


state 47

    (36) estatutos -> escribe .

    RBRACE          reduce using rule 36 (estatutos -> escribe .)
    ID              reduce using rule 36 (estatutos -> escribe .)
    PORCADA         reduce using rule 36 (estatutos -> escribe .)
    MIENTRAS        reduce using rule 36 (estatutos -> escribe .)
    SI              reduce using rule 36 (estatutos -> escribe .)
    IMPRIMIR        reduce using rule 36 (estatutos -> escribe .)
    LEER            reduce using rule 36 (estatutos -> escribe .)
    REGRESAR        reduce using rule 36 (estatutos -> escribe .)


state 48

    (37) estatutos -> leer .

    RBRACE          reduce using rule 37 (estatutos -> leer .)
    ID              reduce using rule 37 (estatutos -> leer .)
    PORCADA         reduce using rule 37 (estatutos -> leer .)
    MIENTRAS        reduce using rule 37 (estatutos -> leer .)
    SI              reduce using rule 37 (estatutos -> leer .)
    IMPRIMIR        reduce using rule 37 (estatutos -> leer .)
    LEER            reduce using rule 37 (estatutos -> leer .)
    REGRESAR        reduce using rule 37 (estatutos -> leer .)


state 49

    (38) estatutos -> empty .

    RBRACE          reduce using rule 38 (estatutos -> empty .)
    ID              reduce using rule 38 (estatutos -> empty .)
    PORCADA         reduce using rule 38 (estatutos -> empty .)
    MIENTRAS        reduce using rule 38 (estatutos -> empty .)
    SI              reduce using rule 38 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 38 (estatutos -> empty .)
    LEER            reduce using rule 38 (estatutos -> empty .)
    REGRESAR        reduce using rule 38 (estatutos -> empty .)


state 50

    (39) asignar -> variable . ASSIGN exp SEMICOLON

    ASSIGN          shift and go to state 63


state 51

    (74) llamada_func -> ID . LPAREN llamadaCYCLE RPAREN SEMICOLON
    (40) variable -> ID . variable_aux
    (41) variable_aux -> . LBRACKET exp RBRACKET
    (42) variable_aux -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (43) variable_aux -> . empty
    (84) empty -> .

    LPAREN          shift and go to state 64
    LBRACKET        shift and go to state 66
    ASSIGN          reduce using rule 84 (empty -> .)

    variable_aux                   shift and go to state 65
    empty                          shift and go to state 67

state 52

    (48) ciclo_for -> PORCADA . exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (56) exp -> . term expT
    (60) term -> . factor termT
    (64) factor -> . factor_constante
    (65) factor -> . factor_variable
    (66) factor -> . factor_expresion
    (67) factor_constante -> . CTEI
    (68) factor_constante -> . CTEF
    (69) factor_variable -> . ID
    (70) factor_variable -> . ID LBRACKET exp RBRACKET
    (71) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> . ID llamada_func
    (73) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 76
    LPAREN          shift and go to state 77

    exp                            shift and go to state 68
    term                           shift and go to state 69
    factor                         shift and go to state 70
    factor_constante               shift and go to state 71
    factor_variable                shift and go to state 72
    factor_expresion               shift and go to state 73

state 53

    (45) ciclo_while -> MIENTRAS . LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON

    LPAREN          shift and go to state 78


state 54

    (51) condicion -> SI . LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON

    LPAREN          shift and go to state 79


state 55

    (79) escribe -> IMPRIMIR . LPAREN escribe_aux RPAREN SEMICOLON

    LPAREN          shift and go to state 80


state 56

    (44) leer -> LEER . variable SEMICOLON
    (40) variable -> . ID variable_aux

    ID              shift and go to state 82

    variable                       shift and go to state 81

state 57

    (23) dec_func -> FUNCION dec_func_return ID LPAREN parameter . RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON

    RPAREN          shift and go to state 83


state 58

    (28) parameter -> type . ID parameterCycle

    ID              shift and go to state 84


state 59

    (10) simple_var -> VARIABLE type punto_simple_var ARROW ID . simpleVarCycle SEMICOLON
    (11) simpleVarCycle -> . COMMA ID simpleVarCycle
    (12) simpleVarCycle -> . empty
    (84) empty -> .

    COMMA           shift and go to state 86
    SEMICOLON       reduce using rule 84 (empty -> .)

    simpleVarCycle                 shift and go to state 85
    empty                          shift and go to state 87

state 60

    (17) array -> RENGLON type ARROW ID LBRACKET . CTEI RBRACKET arrayCycle SEMICOLON

    CTEI            shift and go to state 88


state 61

    (20) matrix -> TABLA type ARROW ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    CTEI            shift and go to state 89


state 62

    (6) inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 90


state 63

    (39) asignar -> variable ASSIGN . exp SEMICOLON
    (56) exp -> . term expT
    (60) term -> . factor termT
    (64) factor -> . factor_constante
    (65) factor -> . factor_variable
    (66) factor -> . factor_expresion
    (67) factor_constante -> . CTEI
    (68) factor_constante -> . CTEF
    (69) factor_variable -> . ID
    (70) factor_variable -> . ID LBRACKET exp RBRACKET
    (71) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> . ID llamada_func
    (73) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 76
    LPAREN          shift and go to state 77

    exp                            shift and go to state 91
    term                           shift and go to state 69
    factor                         shift and go to state 70
    factor_constante               shift and go to state 71
    factor_variable                shift and go to state 72
    factor_expresion               shift and go to state 73

state 64

    (74) llamada_func -> ID LPAREN . llamadaCYCLE RPAREN SEMICOLON
    (75) llamadaCYCLE -> . exp llamadaCYCLE_aux
    (76) llamadaCYCLE -> . empty
    (56) exp -> . term expT
    (84) empty -> .
    (60) term -> . factor termT
    (64) factor -> . factor_constante
    (65) factor -> . factor_variable
    (66) factor -> . factor_expresion
    (67) factor_constante -> . CTEI
    (68) factor_constante -> . CTEF
    (69) factor_variable -> . ID
    (70) factor_variable -> . ID LBRACKET exp RBRACKET
    (71) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> . ID llamada_func
    (73) factor_expresion -> . LPAREN exp RPAREN

    RPAREN          reduce using rule 84 (empty -> .)
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 76
    LPAREN          shift and go to state 77

    llamadaCYCLE                   shift and go to state 92
    exp                            shift and go to state 93
    empty                          shift and go to state 94
    term                           shift and go to state 69
    factor                         shift and go to state 70
    factor_constante               shift and go to state 71
    factor_variable                shift and go to state 72
    factor_expresion               shift and go to state 73

state 65

    (40) variable -> ID variable_aux .

    ASSIGN          reduce using rule 40 (variable -> ID variable_aux .)
    SEMICOLON       reduce using rule 40 (variable -> ID variable_aux .)


state 66

    (41) variable_aux -> LBRACKET . exp RBRACKET
    (42) variable_aux -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (56) exp -> . term expT
    (60) term -> . factor termT
    (64) factor -> . factor_constante
    (65) factor -> . factor_variable
    (66) factor -> . factor_expresion
    (67) factor_constante -> . CTEI
    (68) factor_constante -> . CTEF
    (69) factor_variable -> . ID
    (70) factor_variable -> . ID LBRACKET exp RBRACKET
    (71) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> . ID llamada_func
    (73) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 76
    LPAREN          shift and go to state 77

    exp                            shift and go to state 95
    term                           shift and go to state 69
    factor                         shift and go to state 70
    factor_constante               shift and go to state 71
    factor_variable                shift and go to state 72
    factor_expresion               shift and go to state 73

state 67

    (43) variable_aux -> empty .

    ASSIGN          reduce using rule 43 (variable_aux -> empty .)
    SEMICOLON       reduce using rule 43 (variable_aux -> empty .)


state 68

    (48) ciclo_for -> PORCADA exp . EN exp LBRACE estatutos forCycle RBRACE SEMICOLON

    EN              shift and go to state 96


state 69

    (56) exp -> term . expT
    (57) expT -> . PLUS exp
    (58) expT -> . MINUS exp
    (59) expT -> . empty
    (84) empty -> .

    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    EN              reduce using rule 84 (empty -> .)
    SEMICOLON       reduce using rule 84 (empty -> .)
    COMMA           reduce using rule 84 (empty -> .)
    RPAREN          reduce using rule 84 (empty -> .)
    RBRACKET        reduce using rule 84 (empty -> .)
    LBRACE          reduce using rule 84 (empty -> .)

    expT                           shift and go to state 97
    empty                          shift and go to state 100

state 70

    (60) term -> factor . termT
    (61) termT -> . TIMES term
    (62) termT -> . DIVIDE term
    (63) termT -> . empty
    (84) empty -> .

    TIMES           shift and go to state 102
    DIVIDE          shift and go to state 103
    PLUS            reduce using rule 84 (empty -> .)
    MINUS           reduce using rule 84 (empty -> .)
    EN              reduce using rule 84 (empty -> .)
    SEMICOLON       reduce using rule 84 (empty -> .)
    COMMA           reduce using rule 84 (empty -> .)
    RPAREN          reduce using rule 84 (empty -> .)
    RBRACKET        reduce using rule 84 (empty -> .)
    LBRACE          reduce using rule 84 (empty -> .)

    termT                          shift and go to state 101
    empty                          shift and go to state 104

state 71

    (64) factor -> factor_constante .

    TIMES           reduce using rule 64 (factor -> factor_constante .)
    DIVIDE          reduce using rule 64 (factor -> factor_constante .)
    PLUS            reduce using rule 64 (factor -> factor_constante .)
    MINUS           reduce using rule 64 (factor -> factor_constante .)
    EN              reduce using rule 64 (factor -> factor_constante .)
    SEMICOLON       reduce using rule 64 (factor -> factor_constante .)
    COMMA           reduce using rule 64 (factor -> factor_constante .)
    RPAREN          reduce using rule 64 (factor -> factor_constante .)
    RBRACKET        reduce using rule 64 (factor -> factor_constante .)
    LBRACE          reduce using rule 64 (factor -> factor_constante .)


state 72

    (65) factor -> factor_variable .

    TIMES           reduce using rule 65 (factor -> factor_variable .)
    DIVIDE          reduce using rule 65 (factor -> factor_variable .)
    PLUS            reduce using rule 65 (factor -> factor_variable .)
    MINUS           reduce using rule 65 (factor -> factor_variable .)
    EN              reduce using rule 65 (factor -> factor_variable .)
    SEMICOLON       reduce using rule 65 (factor -> factor_variable .)
    COMMA           reduce using rule 65 (factor -> factor_variable .)
    RPAREN          reduce using rule 65 (factor -> factor_variable .)
    RBRACKET        reduce using rule 65 (factor -> factor_variable .)
    LBRACE          reduce using rule 65 (factor -> factor_variable .)


state 73

    (66) factor -> factor_expresion .

    TIMES           reduce using rule 66 (factor -> factor_expresion .)
    DIVIDE          reduce using rule 66 (factor -> factor_expresion .)
    PLUS            reduce using rule 66 (factor -> factor_expresion .)
    MINUS           reduce using rule 66 (factor -> factor_expresion .)
    EN              reduce using rule 66 (factor -> factor_expresion .)
    SEMICOLON       reduce using rule 66 (factor -> factor_expresion .)
    COMMA           reduce using rule 66 (factor -> factor_expresion .)
    RPAREN          reduce using rule 66 (factor -> factor_expresion .)
    RBRACKET        reduce using rule 66 (factor -> factor_expresion .)
    LBRACE          reduce using rule 66 (factor -> factor_expresion .)


state 74

    (67) factor_constante -> CTEI .

    TIMES           reduce using rule 67 (factor_constante -> CTEI .)
    DIVIDE          reduce using rule 67 (factor_constante -> CTEI .)
    PLUS            reduce using rule 67 (factor_constante -> CTEI .)
    MINUS           reduce using rule 67 (factor_constante -> CTEI .)
    EN              reduce using rule 67 (factor_constante -> CTEI .)
    SEMICOLON       reduce using rule 67 (factor_constante -> CTEI .)
    COMMA           reduce using rule 67 (factor_constante -> CTEI .)
    RPAREN          reduce using rule 67 (factor_constante -> CTEI .)
    RBRACKET        reduce using rule 67 (factor_constante -> CTEI .)
    LBRACE          reduce using rule 67 (factor_constante -> CTEI .)


state 75

    (68) factor_constante -> CTEF .

    TIMES           reduce using rule 68 (factor_constante -> CTEF .)
    DIVIDE          reduce using rule 68 (factor_constante -> CTEF .)
    PLUS            reduce using rule 68 (factor_constante -> CTEF .)
    MINUS           reduce using rule 68 (factor_constante -> CTEF .)
    EN              reduce using rule 68 (factor_constante -> CTEF .)
    SEMICOLON       reduce using rule 68 (factor_constante -> CTEF .)
    COMMA           reduce using rule 68 (factor_constante -> CTEF .)
    RPAREN          reduce using rule 68 (factor_constante -> CTEF .)
    RBRACKET        reduce using rule 68 (factor_constante -> CTEF .)
    LBRACE          reduce using rule 68 (factor_constante -> CTEF .)


state 76

    (69) factor_variable -> ID .
    (70) factor_variable -> ID . LBRACKET exp RBRACKET
    (71) factor_variable -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> ID . llamada_func
    (74) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON

    TIMES           reduce using rule 69 (factor_variable -> ID .)
    DIVIDE          reduce using rule 69 (factor_variable -> ID .)
    PLUS            reduce using rule 69 (factor_variable -> ID .)
    MINUS           reduce using rule 69 (factor_variable -> ID .)
    EN              reduce using rule 69 (factor_variable -> ID .)
    SEMICOLON       reduce using rule 69 (factor_variable -> ID .)
    COMMA           reduce using rule 69 (factor_variable -> ID .)
    RPAREN          reduce using rule 69 (factor_variable -> ID .)
    RBRACKET        reduce using rule 69 (factor_variable -> ID .)
    LBRACE          reduce using rule 69 (factor_variable -> ID .)
    LBRACKET        shift and go to state 106
    ID              shift and go to state 105

    llamada_func                   shift and go to state 107

state 77

    (73) factor_expresion -> LPAREN . exp RPAREN
    (56) exp -> . term expT
    (60) term -> . factor termT
    (64) factor -> . factor_constante
    (65) factor -> . factor_variable
    (66) factor -> . factor_expresion
    (67) factor_constante -> . CTEI
    (68) factor_constante -> . CTEF
    (69) factor_variable -> . ID
    (70) factor_variable -> . ID LBRACKET exp RBRACKET
    (71) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> . ID llamada_func
    (73) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 76
    LPAREN          shift and go to state 77

    exp                            shift and go to state 108
    term                           shift and go to state 69
    factor                         shift and go to state 70
    factor_constante               shift and go to state 71
    factor_variable                shift and go to state 72
    factor_expresion               shift and go to state 73

state 78

    (45) ciclo_while -> MIENTRAS LPAREN . exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (56) exp -> . term expT
    (60) term -> . factor termT
    (64) factor -> . factor_constante
    (65) factor -> . factor_variable
    (66) factor -> . factor_expresion
    (67) factor_constante -> . CTEI
    (68) factor_constante -> . CTEF
    (69) factor_variable -> . ID
    (70) factor_variable -> . ID LBRACKET exp RBRACKET
    (71) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> . ID llamada_func
    (73) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 76
    LPAREN          shift and go to state 77

    exp                            shift and go to state 109
    term                           shift and go to state 69
    factor                         shift and go to state 70
    factor_constante               shift and go to state 71
    factor_variable                shift and go to state 72
    factor_expresion               shift and go to state 73

state 79

    (51) condicion -> SI LPAREN . exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (56) exp -> . term expT
    (60) term -> . factor termT
    (64) factor -> . factor_constante
    (65) factor -> . factor_variable
    (66) factor -> . factor_expresion
    (67) factor_constante -> . CTEI
    (68) factor_constante -> . CTEF
    (69) factor_variable -> . ID
    (70) factor_variable -> . ID LBRACKET exp RBRACKET
    (71) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> . ID llamada_func
    (73) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 76
    LPAREN          shift and go to state 77

    exp                            shift and go to state 110
    term                           shift and go to state 69
    factor                         shift and go to state 70
    factor_constante               shift and go to state 71
    factor_variable                shift and go to state 72
    factor_expresion               shift and go to state 73

state 80

    (79) escribe -> IMPRIMIR LPAREN . escribe_aux RPAREN SEMICOLON
    (80) escribe_aux -> . exp escribeCycle
    (81) escribe_aux -> . CTESTRING escribeCycle
    (56) exp -> . term expT
    (60) term -> . factor termT
    (64) factor -> . factor_constante
    (65) factor -> . factor_variable
    (66) factor -> . factor_expresion
    (67) factor_constante -> . CTEI
    (68) factor_constante -> . CTEF
    (69) factor_variable -> . ID
    (70) factor_variable -> . ID LBRACKET exp RBRACKET
    (71) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> . ID llamada_func
    (73) factor_expresion -> . LPAREN exp RPAREN

    CTESTRING       shift and go to state 113
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 76
    LPAREN          shift and go to state 77

    escribe_aux                    shift and go to state 111
    exp                            shift and go to state 112
    term                           shift and go to state 69
    factor                         shift and go to state 70
    factor_constante               shift and go to state 71
    factor_variable                shift and go to state 72
    factor_expresion               shift and go to state 73

state 81

    (44) leer -> LEER variable . SEMICOLON

    SEMICOLON       shift and go to state 114


state 82

    (40) variable -> ID . variable_aux
    (41) variable_aux -> . LBRACKET exp RBRACKET
    (42) variable_aux -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (43) variable_aux -> . empty
    (84) empty -> .

    LBRACKET        shift and go to state 66
    SEMICOLON       reduce using rule 84 (empty -> .)

    variable_aux                   shift and go to state 65
    empty                          shift and go to state 67

state 83

    (23) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN . LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON

    LBRACE          shift and go to state 115


state 84

    (28) parameter -> type ID . parameterCycle
    (29) parameterCycle -> . COMMA type ID parameterCycle
    (30) parameterCycle -> . empty
    (84) empty -> .

    COMMA           shift and go to state 117
    RPAREN          reduce using rule 84 (empty -> .)

    parameterCycle                 shift and go to state 116
    empty                          shift and go to state 118

state 85

    (10) simple_var -> VARIABLE type punto_simple_var ARROW ID simpleVarCycle . SEMICOLON

    SEMICOLON       shift and go to state 119


state 86

    (11) simpleVarCycle -> COMMA . ID simpleVarCycle

    ID              shift and go to state 120


state 87

    (12) simpleVarCycle -> empty .

    SEMICOLON       reduce using rule 12 (simpleVarCycle -> empty .)


state 88

    (17) array -> RENGLON type ARROW ID LBRACKET CTEI . RBRACKET arrayCycle SEMICOLON

    RBRACKET        shift and go to state 121


state 89

    (20) matrix -> TABLA type ARROW ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    RBRACKET        shift and go to state 122


state 90

    (6) inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON .

    $end            reduce using rule 6 (inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON .)


state 91

    (39) asignar -> variable ASSIGN exp . SEMICOLON

    SEMICOLON       shift and go to state 123


state 92

    (74) llamada_func -> ID LPAREN llamadaCYCLE . RPAREN SEMICOLON

    RPAREN          shift and go to state 124


state 93

    (75) llamadaCYCLE -> exp . llamadaCYCLE_aux
    (77) llamadaCYCLE_aux -> . COMMA exp llamadaCYCLE_aux
    (78) llamadaCYCLE_aux -> . empty
    (84) empty -> .

    COMMA           shift and go to state 126
    RPAREN          reduce using rule 84 (empty -> .)

    llamadaCYCLE_aux               shift and go to state 125
    empty                          shift and go to state 127

state 94

    (76) llamadaCYCLE -> empty .

    RPAREN          reduce using rule 76 (llamadaCYCLE -> empty .)


state 95

    (41) variable_aux -> LBRACKET exp . RBRACKET
    (42) variable_aux -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET

    RBRACKET        shift and go to state 128


state 96

    (48) ciclo_for -> PORCADA exp EN . exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (56) exp -> . term expT
    (60) term -> . factor termT
    (64) factor -> . factor_constante
    (65) factor -> . factor_variable
    (66) factor -> . factor_expresion
    (67) factor_constante -> . CTEI
    (68) factor_constante -> . CTEF
    (69) factor_variable -> . ID
    (70) factor_variable -> . ID LBRACKET exp RBRACKET
    (71) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> . ID llamada_func
    (73) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 76
    LPAREN          shift and go to state 77

    exp                            shift and go to state 129
    term                           shift and go to state 69
    factor                         shift and go to state 70
    factor_constante               shift and go to state 71
    factor_variable                shift and go to state 72
    factor_expresion               shift and go to state 73

state 97

    (56) exp -> term expT .

    EN              reduce using rule 56 (exp -> term expT .)
    SEMICOLON       reduce using rule 56 (exp -> term expT .)
    COMMA           reduce using rule 56 (exp -> term expT .)
    RPAREN          reduce using rule 56 (exp -> term expT .)
    RBRACKET        reduce using rule 56 (exp -> term expT .)
    LBRACE          reduce using rule 56 (exp -> term expT .)


state 98

    (57) expT -> PLUS . exp
    (56) exp -> . term expT
    (60) term -> . factor termT
    (64) factor -> . factor_constante
    (65) factor -> . factor_variable
    (66) factor -> . factor_expresion
    (67) factor_constante -> . CTEI
    (68) factor_constante -> . CTEF
    (69) factor_variable -> . ID
    (70) factor_variable -> . ID LBRACKET exp RBRACKET
    (71) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> . ID llamada_func
    (73) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 76
    LPAREN          shift and go to state 77

    exp                            shift and go to state 130
    term                           shift and go to state 69
    factor                         shift and go to state 70
    factor_constante               shift and go to state 71
    factor_variable                shift and go to state 72
    factor_expresion               shift and go to state 73

state 99

    (58) expT -> MINUS . exp
    (56) exp -> . term expT
    (60) term -> . factor termT
    (64) factor -> . factor_constante
    (65) factor -> . factor_variable
    (66) factor -> . factor_expresion
    (67) factor_constante -> . CTEI
    (68) factor_constante -> . CTEF
    (69) factor_variable -> . ID
    (70) factor_variable -> . ID LBRACKET exp RBRACKET
    (71) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> . ID llamada_func
    (73) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 76
    LPAREN          shift and go to state 77

    exp                            shift and go to state 131
    term                           shift and go to state 69
    factor                         shift and go to state 70
    factor_constante               shift and go to state 71
    factor_variable                shift and go to state 72
    factor_expresion               shift and go to state 73

state 100

    (59) expT -> empty .

    EN              reduce using rule 59 (expT -> empty .)
    SEMICOLON       reduce using rule 59 (expT -> empty .)
    COMMA           reduce using rule 59 (expT -> empty .)
    RPAREN          reduce using rule 59 (expT -> empty .)
    RBRACKET        reduce using rule 59 (expT -> empty .)
    LBRACE          reduce using rule 59 (expT -> empty .)


state 101

    (60) term -> factor termT .

    PLUS            reduce using rule 60 (term -> factor termT .)
    MINUS           reduce using rule 60 (term -> factor termT .)
    EN              reduce using rule 60 (term -> factor termT .)
    SEMICOLON       reduce using rule 60 (term -> factor termT .)
    COMMA           reduce using rule 60 (term -> factor termT .)
    RPAREN          reduce using rule 60 (term -> factor termT .)
    RBRACKET        reduce using rule 60 (term -> factor termT .)
    LBRACE          reduce using rule 60 (term -> factor termT .)


state 102

    (61) termT -> TIMES . term
    (60) term -> . factor termT
    (64) factor -> . factor_constante
    (65) factor -> . factor_variable
    (66) factor -> . factor_expresion
    (67) factor_constante -> . CTEI
    (68) factor_constante -> . CTEF
    (69) factor_variable -> . ID
    (70) factor_variable -> . ID LBRACKET exp RBRACKET
    (71) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> . ID llamada_func
    (73) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 76
    LPAREN          shift and go to state 77

    term                           shift and go to state 132
    factor                         shift and go to state 70
    factor_constante               shift and go to state 71
    factor_variable                shift and go to state 72
    factor_expresion               shift and go to state 73

state 103

    (62) termT -> DIVIDE . term
    (60) term -> . factor termT
    (64) factor -> . factor_constante
    (65) factor -> . factor_variable
    (66) factor -> . factor_expresion
    (67) factor_constante -> . CTEI
    (68) factor_constante -> . CTEF
    (69) factor_variable -> . ID
    (70) factor_variable -> . ID LBRACKET exp RBRACKET
    (71) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> . ID llamada_func
    (73) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 76
    LPAREN          shift and go to state 77

    term                           shift and go to state 133
    factor                         shift and go to state 70
    factor_constante               shift and go to state 71
    factor_variable                shift and go to state 72
    factor_expresion               shift and go to state 73

state 104

    (63) termT -> empty .

    PLUS            reduce using rule 63 (termT -> empty .)
    MINUS           reduce using rule 63 (termT -> empty .)
    EN              reduce using rule 63 (termT -> empty .)
    SEMICOLON       reduce using rule 63 (termT -> empty .)
    COMMA           reduce using rule 63 (termT -> empty .)
    RPAREN          reduce using rule 63 (termT -> empty .)
    RBRACKET        reduce using rule 63 (termT -> empty .)
    LBRACE          reduce using rule 63 (termT -> empty .)


state 105

    (74) llamada_func -> ID . LPAREN llamadaCYCLE RPAREN SEMICOLON

    LPAREN          shift and go to state 64


state 106

    (70) factor_variable -> ID LBRACKET . exp RBRACKET
    (71) factor_variable -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (56) exp -> . term expT
    (60) term -> . factor termT
    (64) factor -> . factor_constante
    (65) factor -> . factor_variable
    (66) factor -> . factor_expresion
    (67) factor_constante -> . CTEI
    (68) factor_constante -> . CTEF
    (69) factor_variable -> . ID
    (70) factor_variable -> . ID LBRACKET exp RBRACKET
    (71) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> . ID llamada_func
    (73) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 76
    LPAREN          shift and go to state 77

    exp                            shift and go to state 134
    term                           shift and go to state 69
    factor                         shift and go to state 70
    factor_constante               shift and go to state 71
    factor_variable                shift and go to state 72
    factor_expresion               shift and go to state 73

state 107

    (72) factor_variable -> ID llamada_func .

    TIMES           reduce using rule 72 (factor_variable -> ID llamada_func .)
    DIVIDE          reduce using rule 72 (factor_variable -> ID llamada_func .)
    PLUS            reduce using rule 72 (factor_variable -> ID llamada_func .)
    MINUS           reduce using rule 72 (factor_variable -> ID llamada_func .)
    EN              reduce using rule 72 (factor_variable -> ID llamada_func .)
    SEMICOLON       reduce using rule 72 (factor_variable -> ID llamada_func .)
    COMMA           reduce using rule 72 (factor_variable -> ID llamada_func .)
    RPAREN          reduce using rule 72 (factor_variable -> ID llamada_func .)
    RBRACKET        reduce using rule 72 (factor_variable -> ID llamada_func .)
    LBRACE          reduce using rule 72 (factor_variable -> ID llamada_func .)


state 108

    (73) factor_expresion -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 135


state 109

    (45) ciclo_while -> MIENTRAS LPAREN exp . RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON

    RPAREN          shift and go to state 136


state 110

    (51) condicion -> SI LPAREN exp . RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON

    RPAREN          shift and go to state 137


state 111

    (79) escribe -> IMPRIMIR LPAREN escribe_aux . RPAREN SEMICOLON

    RPAREN          shift and go to state 138


state 112

    (80) escribe_aux -> exp . escribeCycle
    (82) escribeCycle -> . COMMA escribe_aux
    (83) escribeCycle -> . empty
    (84) empty -> .

    COMMA           shift and go to state 140
    RPAREN          reduce using rule 84 (empty -> .)

    escribeCycle                   shift and go to state 139
    empty                          shift and go to state 141

state 113

    (81) escribe_aux -> CTESTRING . escribeCycle
    (82) escribeCycle -> . COMMA escribe_aux
    (83) escribeCycle -> . empty
    (84) empty -> .

    COMMA           shift and go to state 140
    RPAREN          reduce using rule 84 (empty -> .)

    escribeCycle                   shift and go to state 142
    empty                          shift and go to state 141

state 114

    (44) leer -> LEER variable SEMICOLON .

    RBRACE          reduce using rule 44 (leer -> LEER variable SEMICOLON .)
    ID              reduce using rule 44 (leer -> LEER variable SEMICOLON .)
    PORCADA         reduce using rule 44 (leer -> LEER variable SEMICOLON .)
    MIENTRAS        reduce using rule 44 (leer -> LEER variable SEMICOLON .)
    SI              reduce using rule 44 (leer -> LEER variable SEMICOLON .)
    IMPRIMIR        reduce using rule 44 (leer -> LEER variable SEMICOLON .)
    LEER            reduce using rule 44 (leer -> LEER variable SEMICOLON .)
    REGRESAR        reduce using rule 44 (leer -> LEER variable SEMICOLON .)


state 115

    (23) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE . dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
    (7) dec_var -> . simple_var
    (8) dec_var -> . array
    (9) dec_var -> . matrix
    (10) simple_var -> . VARIABLE type punto_simple_var ARROW ID simpleVarCycle SEMICOLON
    (17) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON
    (20) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    VARIABLE        shift and go to state 14
    RENGLON         shift and go to state 15
    TABLA           shift and go to state 16

    dec_var                        shift and go to state 143
    simple_var                     shift and go to state 10
    array                          shift and go to state 11
    matrix                         shift and go to state 12

state 116

    (28) parameter -> type ID parameterCycle .

    RPAREN          reduce using rule 28 (parameter -> type ID parameterCycle .)


state 117

    (29) parameterCycle -> COMMA . type ID parameterCycle
    (14) type -> . ENTERO
    (15) type -> . DECIMAL
    (16) type -> . LETRA

    ENTERO          shift and go to state 24
    DECIMAL         shift and go to state 25
    LETRA           shift and go to state 26

    type                           shift and go to state 144

state 118

    (30) parameterCycle -> empty .

    RPAREN          reduce using rule 30 (parameterCycle -> empty .)


state 119

    (10) simple_var -> VARIABLE type punto_simple_var ARROW ID simpleVarCycle SEMICOLON .

    INICIO          reduce using rule 10 (simple_var -> VARIABLE type punto_simple_var ARROW ID simpleVarCycle SEMICOLON .)
    FUNCION         reduce using rule 10 (simple_var -> VARIABLE type punto_simple_var ARROW ID simpleVarCycle SEMICOLON .)
    ID              reduce using rule 10 (simple_var -> VARIABLE type punto_simple_var ARROW ID simpleVarCycle SEMICOLON .)
    PORCADA         reduce using rule 10 (simple_var -> VARIABLE type punto_simple_var ARROW ID simpleVarCycle SEMICOLON .)
    MIENTRAS        reduce using rule 10 (simple_var -> VARIABLE type punto_simple_var ARROW ID simpleVarCycle SEMICOLON .)
    SI              reduce using rule 10 (simple_var -> VARIABLE type punto_simple_var ARROW ID simpleVarCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 10 (simple_var -> VARIABLE type punto_simple_var ARROW ID simpleVarCycle SEMICOLON .)
    LEER            reduce using rule 10 (simple_var -> VARIABLE type punto_simple_var ARROW ID simpleVarCycle SEMICOLON .)
    REGRESAR        reduce using rule 10 (simple_var -> VARIABLE type punto_simple_var ARROW ID simpleVarCycle SEMICOLON .)


state 120

    (11) simpleVarCycle -> COMMA ID . simpleVarCycle
    (11) simpleVarCycle -> . COMMA ID simpleVarCycle
    (12) simpleVarCycle -> . empty
    (84) empty -> .

    COMMA           shift and go to state 86
    SEMICOLON       reduce using rule 84 (empty -> .)

    simpleVarCycle                 shift and go to state 145
    empty                          shift and go to state 87

state 121

    (17) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET . arrayCycle SEMICOLON
    (18) arrayCycle -> . COMMA ID LBRACKET CTEI RBRACKET arrayCycle
    (19) arrayCycle -> . empty
    (84) empty -> .

    COMMA           shift and go to state 147
    SEMICOLON       reduce using rule 84 (empty -> .)

    arrayCycle                     shift and go to state 146
    empty                          shift and go to state 148

state 122

    (20) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    LBRACKET        shift and go to state 149


state 123

    (39) asignar -> variable ASSIGN exp SEMICOLON .

    RBRACE          reduce using rule 39 (asignar -> variable ASSIGN exp SEMICOLON .)
    ID              reduce using rule 39 (asignar -> variable ASSIGN exp SEMICOLON .)
    PORCADA         reduce using rule 39 (asignar -> variable ASSIGN exp SEMICOLON .)
    MIENTRAS        reduce using rule 39 (asignar -> variable ASSIGN exp SEMICOLON .)
    SI              reduce using rule 39 (asignar -> variable ASSIGN exp SEMICOLON .)
    IMPRIMIR        reduce using rule 39 (asignar -> variable ASSIGN exp SEMICOLON .)
    LEER            reduce using rule 39 (asignar -> variable ASSIGN exp SEMICOLON .)
    REGRESAR        reduce using rule 39 (asignar -> variable ASSIGN exp SEMICOLON .)


state 124

    (74) llamada_func -> ID LPAREN llamadaCYCLE RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 150


state 125

    (75) llamadaCYCLE -> exp llamadaCYCLE_aux .

    RPAREN          reduce using rule 75 (llamadaCYCLE -> exp llamadaCYCLE_aux .)


state 126

    (77) llamadaCYCLE_aux -> COMMA . exp llamadaCYCLE_aux
    (56) exp -> . term expT
    (60) term -> . factor termT
    (64) factor -> . factor_constante
    (65) factor -> . factor_variable
    (66) factor -> . factor_expresion
    (67) factor_constante -> . CTEI
    (68) factor_constante -> . CTEF
    (69) factor_variable -> . ID
    (70) factor_variable -> . ID LBRACKET exp RBRACKET
    (71) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> . ID llamada_func
    (73) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 76
    LPAREN          shift and go to state 77

    exp                            shift and go to state 151
    term                           shift and go to state 69
    factor                         shift and go to state 70
    factor_constante               shift and go to state 71
    factor_variable                shift and go to state 72
    factor_expresion               shift and go to state 73

state 127

    (78) llamadaCYCLE_aux -> empty .

    RPAREN          reduce using rule 78 (llamadaCYCLE_aux -> empty .)


state 128

    (41) variable_aux -> LBRACKET exp RBRACKET .
    (42) variable_aux -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    ASSIGN          reduce using rule 41 (variable_aux -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 41 (variable_aux -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 152


state 129

    (48) ciclo_for -> PORCADA exp EN exp . LBRACE estatutos forCycle RBRACE SEMICOLON

    LBRACE          shift and go to state 153


state 130

    (57) expT -> PLUS exp .

    EN              reduce using rule 57 (expT -> PLUS exp .)
    SEMICOLON       reduce using rule 57 (expT -> PLUS exp .)
    COMMA           reduce using rule 57 (expT -> PLUS exp .)
    RPAREN          reduce using rule 57 (expT -> PLUS exp .)
    RBRACKET        reduce using rule 57 (expT -> PLUS exp .)
    LBRACE          reduce using rule 57 (expT -> PLUS exp .)


state 131

    (58) expT -> MINUS exp .

    EN              reduce using rule 58 (expT -> MINUS exp .)
    SEMICOLON       reduce using rule 58 (expT -> MINUS exp .)
    COMMA           reduce using rule 58 (expT -> MINUS exp .)
    RPAREN          reduce using rule 58 (expT -> MINUS exp .)
    RBRACKET        reduce using rule 58 (expT -> MINUS exp .)
    LBRACE          reduce using rule 58 (expT -> MINUS exp .)


state 132

    (61) termT -> TIMES term .

    PLUS            reduce using rule 61 (termT -> TIMES term .)
    MINUS           reduce using rule 61 (termT -> TIMES term .)
    EN              reduce using rule 61 (termT -> TIMES term .)
    SEMICOLON       reduce using rule 61 (termT -> TIMES term .)
    COMMA           reduce using rule 61 (termT -> TIMES term .)
    RPAREN          reduce using rule 61 (termT -> TIMES term .)
    RBRACKET        reduce using rule 61 (termT -> TIMES term .)
    LBRACE          reduce using rule 61 (termT -> TIMES term .)


state 133

    (62) termT -> DIVIDE term .

    PLUS            reduce using rule 62 (termT -> DIVIDE term .)
    MINUS           reduce using rule 62 (termT -> DIVIDE term .)
    EN              reduce using rule 62 (termT -> DIVIDE term .)
    SEMICOLON       reduce using rule 62 (termT -> DIVIDE term .)
    COMMA           reduce using rule 62 (termT -> DIVIDE term .)
    RPAREN          reduce using rule 62 (termT -> DIVIDE term .)
    RBRACKET        reduce using rule 62 (termT -> DIVIDE term .)
    LBRACE          reduce using rule 62 (termT -> DIVIDE term .)


state 134

    (70) factor_variable -> ID LBRACKET exp . RBRACKET
    (71) factor_variable -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET

    RBRACKET        shift and go to state 154


state 135

    (73) factor_expresion -> LPAREN exp RPAREN .

    TIMES           reduce using rule 73 (factor_expresion -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 73 (factor_expresion -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 73 (factor_expresion -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 73 (factor_expresion -> LPAREN exp RPAREN .)
    EN              reduce using rule 73 (factor_expresion -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 73 (factor_expresion -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 73 (factor_expresion -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 73 (factor_expresion -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 73 (factor_expresion -> LPAREN exp RPAREN .)
    LBRACE          reduce using rule 73 (factor_expresion -> LPAREN exp RPAREN .)


state 136

    (45) ciclo_while -> MIENTRAS LPAREN exp RPAREN . LBRACE estatutos whileCycle RBRACE SEMICOLON

    LBRACE          shift and go to state 155


state 137

    (51) condicion -> SI LPAREN exp RPAREN . LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON

    LBRACE          shift and go to state 156


state 138

    (79) escribe -> IMPRIMIR LPAREN escribe_aux RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 157


state 139

    (80) escribe_aux -> exp escribeCycle .

    RPAREN          reduce using rule 80 (escribe_aux -> exp escribeCycle .)


state 140

    (82) escribeCycle -> COMMA . escribe_aux
    (80) escribe_aux -> . exp escribeCycle
    (81) escribe_aux -> . CTESTRING escribeCycle
    (56) exp -> . term expT
    (60) term -> . factor termT
    (64) factor -> . factor_constante
    (65) factor -> . factor_variable
    (66) factor -> . factor_expresion
    (67) factor_constante -> . CTEI
    (68) factor_constante -> . CTEF
    (69) factor_variable -> . ID
    (70) factor_variable -> . ID LBRACKET exp RBRACKET
    (71) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> . ID llamada_func
    (73) factor_expresion -> . LPAREN exp RPAREN

    CTESTRING       shift and go to state 113
    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 76
    LPAREN          shift and go to state 77

    escribe_aux                    shift and go to state 158
    exp                            shift and go to state 112
    term                           shift and go to state 69
    factor                         shift and go to state 70
    factor_constante               shift and go to state 71
    factor_variable                shift and go to state 72
    factor_expresion               shift and go to state 73

state 141

    (83) escribeCycle -> empty .

    RPAREN          reduce using rule 83 (escribeCycle -> empty .)


state 142

    (81) escribe_aux -> CTESTRING escribeCycle .

    RPAREN          reduce using rule 81 (escribe_aux -> CTESTRING escribeCycle .)


state 143

    (23) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var . estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
    (31) estatutos -> . asignar
    (32) estatutos -> . llamada_func
    (33) estatutos -> . ciclo_for
    (34) estatutos -> . ciclo_while
    (35) estatutos -> . condicion
    (36) estatutos -> . escribe
    (37) estatutos -> . leer
    (38) estatutos -> . empty
    (39) asignar -> . variable ASSIGN exp SEMICOLON
    (74) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (48) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (45) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (51) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (79) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (44) leer -> . LEER variable SEMICOLON
    (84) empty -> .
    (40) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 51
    PORCADA         shift and go to state 52
    MIENTRAS        shift and go to state 53
    SI              shift and go to state 54
    IMPRIMIR        shift and go to state 55
    LEER            shift and go to state 56
    REGRESAR        reduce using rule 84 (empty -> .)

  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! PORCADA         [ reduce using rule 84 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 84 (empty -> .) ]
  ! SI              [ reduce using rule 84 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 84 (empty -> .) ]
  ! LEER            [ reduce using rule 84 (empty -> .) ]

    estatutos                      shift and go to state 159
    variable                       shift and go to state 50
    asignar                        shift and go to state 42
    llamada_func                   shift and go to state 43
    ciclo_for                      shift and go to state 44
    ciclo_while                    shift and go to state 45
    condicion                      shift and go to state 46
    escribe                        shift and go to state 47
    leer                           shift and go to state 48
    empty                          shift and go to state 49

state 144

    (29) parameterCycle -> COMMA type . ID parameterCycle

    ID              shift and go to state 160


state 145

    (11) simpleVarCycle -> COMMA ID simpleVarCycle .

    SEMICOLON       reduce using rule 11 (simpleVarCycle -> COMMA ID simpleVarCycle .)


state 146

    (17) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle . SEMICOLON

    SEMICOLON       shift and go to state 161


state 147

    (18) arrayCycle -> COMMA . ID LBRACKET CTEI RBRACKET arrayCycle

    ID              shift and go to state 162


state 148

    (19) arrayCycle -> empty .

    SEMICOLON       reduce using rule 19 (arrayCycle -> empty .)


state 149

    (20) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET matrixCycle SEMICOLON

    CTEI            shift and go to state 163


state 150

    (74) llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .

    RBRACE          reduce using rule 74 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    TIMES           reduce using rule 74 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 74 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    PLUS            reduce using rule 74 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    MINUS           reduce using rule 74 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    EN              reduce using rule 74 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 74 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    COMMA           reduce using rule 74 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    RPAREN          reduce using rule 74 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 74 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LBRACE          reduce using rule 74 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    ID              reduce using rule 74 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    PORCADA         reduce using rule 74 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 74 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    SI              reduce using rule 74 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 74 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LEER            reduce using rule 74 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    REGRESAR        reduce using rule 74 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)


state 151

    (77) llamadaCYCLE_aux -> COMMA exp . llamadaCYCLE_aux
    (77) llamadaCYCLE_aux -> . COMMA exp llamadaCYCLE_aux
    (78) llamadaCYCLE_aux -> . empty
    (84) empty -> .

    COMMA           shift and go to state 126
    RPAREN          reduce using rule 84 (empty -> .)

    llamadaCYCLE_aux               shift and go to state 164
    empty                          shift and go to state 127

state 152

    (42) variable_aux -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (56) exp -> . term expT
    (60) term -> . factor termT
    (64) factor -> . factor_constante
    (65) factor -> . factor_variable
    (66) factor -> . factor_expresion
    (67) factor_constante -> . CTEI
    (68) factor_constante -> . CTEF
    (69) factor_variable -> . ID
    (70) factor_variable -> . ID LBRACKET exp RBRACKET
    (71) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> . ID llamada_func
    (73) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 76
    LPAREN          shift and go to state 77

    exp                            shift and go to state 165
    term                           shift and go to state 69
    factor                         shift and go to state 70
    factor_constante               shift and go to state 71
    factor_variable                shift and go to state 72
    factor_expresion               shift and go to state 73

state 153

    (48) ciclo_for -> PORCADA exp EN exp LBRACE . estatutos forCycle RBRACE SEMICOLON
    (31) estatutos -> . asignar
    (32) estatutos -> . llamada_func
    (33) estatutos -> . ciclo_for
    (34) estatutos -> . ciclo_while
    (35) estatutos -> . condicion
    (36) estatutos -> . escribe
    (37) estatutos -> . leer
    (38) estatutos -> . empty
    (39) asignar -> . variable ASSIGN exp SEMICOLON
    (74) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (48) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (45) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (51) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (79) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (44) leer -> . LEER variable SEMICOLON
    (84) empty -> .
    (40) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 51
    PORCADA         shift and go to state 52
    MIENTRAS        shift and go to state 53
    SI              shift and go to state 54
    IMPRIMIR        shift and go to state 55
    LEER            shift and go to state 56
    RBRACE          reduce using rule 84 (empty -> .)

  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! PORCADA         [ reduce using rule 84 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 84 (empty -> .) ]
  ! SI              [ reduce using rule 84 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 84 (empty -> .) ]
  ! LEER            [ reduce using rule 84 (empty -> .) ]

    estatutos                      shift and go to state 166
    asignar                        shift and go to state 42
    llamada_func                   shift and go to state 43
    ciclo_for                      shift and go to state 44
    ciclo_while                    shift and go to state 45
    condicion                      shift and go to state 46
    escribe                        shift and go to state 47
    leer                           shift and go to state 48
    empty                          shift and go to state 49
    variable                       shift and go to state 50

state 154

    (70) factor_variable -> ID LBRACKET exp RBRACKET .
    (71) factor_variable -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    TIMES           reduce using rule 70 (factor_variable -> ID LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 70 (factor_variable -> ID LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 70 (factor_variable -> ID LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 70 (factor_variable -> ID LBRACKET exp RBRACKET .)
    EN              reduce using rule 70 (factor_variable -> ID LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 70 (factor_variable -> ID LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 70 (factor_variable -> ID LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 70 (factor_variable -> ID LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 70 (factor_variable -> ID LBRACKET exp RBRACKET .)
    LBRACE          reduce using rule 70 (factor_variable -> ID LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 167


state 155

    (45) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE . estatutos whileCycle RBRACE SEMICOLON
    (31) estatutos -> . asignar
    (32) estatutos -> . llamada_func
    (33) estatutos -> . ciclo_for
    (34) estatutos -> . ciclo_while
    (35) estatutos -> . condicion
    (36) estatutos -> . escribe
    (37) estatutos -> . leer
    (38) estatutos -> . empty
    (39) asignar -> . variable ASSIGN exp SEMICOLON
    (74) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (48) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (45) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (51) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (79) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (44) leer -> . LEER variable SEMICOLON
    (84) empty -> .
    (40) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 51
    PORCADA         shift and go to state 52
    MIENTRAS        shift and go to state 53
    SI              shift and go to state 54
    IMPRIMIR        shift and go to state 55
    LEER            shift and go to state 56
    RBRACE          reduce using rule 84 (empty -> .)

  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! PORCADA         [ reduce using rule 84 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 84 (empty -> .) ]
  ! SI              [ reduce using rule 84 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 84 (empty -> .) ]
  ! LEER            [ reduce using rule 84 (empty -> .) ]

    estatutos                      shift and go to state 168
    asignar                        shift and go to state 42
    llamada_func                   shift and go to state 43
    ciclo_for                      shift and go to state 44
    ciclo_while                    shift and go to state 45
    condicion                      shift and go to state 46
    escribe                        shift and go to state 47
    leer                           shift and go to state 48
    empty                          shift and go to state 49
    variable                       shift and go to state 50

state 156

    (51) condicion -> SI LPAREN exp RPAREN LBRACE . estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (31) estatutos -> . asignar
    (32) estatutos -> . llamada_func
    (33) estatutos -> . ciclo_for
    (34) estatutos -> . ciclo_while
    (35) estatutos -> . condicion
    (36) estatutos -> . escribe
    (37) estatutos -> . leer
    (38) estatutos -> . empty
    (39) asignar -> . variable ASSIGN exp SEMICOLON
    (74) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (48) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (45) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (51) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (79) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (44) leer -> . LEER variable SEMICOLON
    (84) empty -> .
    (40) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 51
    PORCADA         shift and go to state 52
    MIENTRAS        shift and go to state 53
    SI              shift and go to state 54
    IMPRIMIR        shift and go to state 55
    LEER            shift and go to state 56
    RBRACE          reduce using rule 84 (empty -> .)

  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! PORCADA         [ reduce using rule 84 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 84 (empty -> .) ]
  ! SI              [ reduce using rule 84 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 84 (empty -> .) ]
  ! LEER            [ reduce using rule 84 (empty -> .) ]

    estatutos                      shift and go to state 169
    asignar                        shift and go to state 42
    llamada_func                   shift and go to state 43
    ciclo_for                      shift and go to state 44
    ciclo_while                    shift and go to state 45
    condicion                      shift and go to state 46
    escribe                        shift and go to state 47
    leer                           shift and go to state 48
    empty                          shift and go to state 49
    variable                       shift and go to state 50

state 157

    (79) escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .

    RBRACE          reduce using rule 79 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    ID              reduce using rule 79 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    PORCADA         reduce using rule 79 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 79 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    SI              reduce using rule 79 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 79 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    LEER            reduce using rule 79 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    REGRESAR        reduce using rule 79 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)


state 158

    (82) escribeCycle -> COMMA escribe_aux .

    RPAREN          reduce using rule 82 (escribeCycle -> COMMA escribe_aux .)


state 159

    (23) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos . decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
    (26) decFuncCycle -> . estatutos decFuncCycle
    (27) decFuncCycle -> . empty
    (31) estatutos -> . asignar
    (32) estatutos -> . llamada_func
    (33) estatutos -> . ciclo_for
    (34) estatutos -> . ciclo_while
    (35) estatutos -> . condicion
    (36) estatutos -> . escribe
    (37) estatutos -> . leer
    (38) estatutos -> . empty
    (84) empty -> .
    (39) asignar -> . variable ASSIGN exp SEMICOLON
    (74) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (48) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (45) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (51) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (79) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (44) leer -> . LEER variable SEMICOLON
    (40) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    REGRESAR        reduce using rule 84 (empty -> .)
    ID              shift and go to state 51
    PORCADA         shift and go to state 52
    MIENTRAS        shift and go to state 53
    SI              shift and go to state 54
    IMPRIMIR        shift and go to state 55
    LEER            shift and go to state 56

  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! PORCADA         [ reduce using rule 84 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 84 (empty -> .) ]
  ! SI              [ reduce using rule 84 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 84 (empty -> .) ]
  ! LEER            [ reduce using rule 84 (empty -> .) ]

    estatutos                      shift and go to state 170
    decFuncCycle                   shift and go to state 171
    variable                       shift and go to state 50
    empty                          shift and go to state 172
    asignar                        shift and go to state 42
    llamada_func                   shift and go to state 43
    ciclo_for                      shift and go to state 44
    ciclo_while                    shift and go to state 45
    condicion                      shift and go to state 46
    escribe                        shift and go to state 47
    leer                           shift and go to state 48

state 160

    (29) parameterCycle -> COMMA type ID . parameterCycle
    (29) parameterCycle -> . COMMA type ID parameterCycle
    (30) parameterCycle -> . empty
    (84) empty -> .

    COMMA           shift and go to state 117
    RPAREN          reduce using rule 84 (empty -> .)

    parameterCycle                 shift and go to state 173
    empty                          shift and go to state 118

state 161

    (17) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .

    INICIO          reduce using rule 17 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    FUNCION         reduce using rule 17 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    ID              reduce using rule 17 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    PORCADA         reduce using rule 17 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    MIENTRAS        reduce using rule 17 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    SI              reduce using rule 17 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 17 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    LEER            reduce using rule 17 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    REGRESAR        reduce using rule 17 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)


state 162

    (18) arrayCycle -> COMMA ID . LBRACKET CTEI RBRACKET arrayCycle

    LBRACKET        shift and go to state 174


state 163

    (20) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET matrixCycle SEMICOLON

    RBRACKET        shift and go to state 175


state 164

    (77) llamadaCYCLE_aux -> COMMA exp llamadaCYCLE_aux .

    RPAREN          reduce using rule 77 (llamadaCYCLE_aux -> COMMA exp llamadaCYCLE_aux .)


state 165

    (42) variable_aux -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 176


state 166

    (48) ciclo_for -> PORCADA exp EN exp LBRACE estatutos . forCycle RBRACE SEMICOLON
    (49) forCycle -> . estatutos forCycle
    (50) forCycle -> . empty
    (31) estatutos -> . asignar
    (32) estatutos -> . llamada_func
    (33) estatutos -> . ciclo_for
    (34) estatutos -> . ciclo_while
    (35) estatutos -> . condicion
    (36) estatutos -> . escribe
    (37) estatutos -> . leer
    (38) estatutos -> . empty
    (84) empty -> .
    (39) asignar -> . variable ASSIGN exp SEMICOLON
    (74) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (48) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (45) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (51) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (79) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (44) leer -> . LEER variable SEMICOLON
    (40) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 84 (empty -> .)
    ID              shift and go to state 51
    PORCADA         shift and go to state 52
    MIENTRAS        shift and go to state 53
    SI              shift and go to state 54
    IMPRIMIR        shift and go to state 55
    LEER            shift and go to state 56

  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! PORCADA         [ reduce using rule 84 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 84 (empty -> .) ]
  ! SI              [ reduce using rule 84 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 84 (empty -> .) ]
  ! LEER            [ reduce using rule 84 (empty -> .) ]

    estatutos                      shift and go to state 177
    forCycle                       shift and go to state 178
    empty                          shift and go to state 179
    asignar                        shift and go to state 42
    llamada_func                   shift and go to state 43
    ciclo_for                      shift and go to state 44
    ciclo_while                    shift and go to state 45
    condicion                      shift and go to state 46
    escribe                        shift and go to state 47
    leer                           shift and go to state 48
    variable                       shift and go to state 50

state 167

    (71) factor_variable -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (56) exp -> . term expT
    (60) term -> . factor termT
    (64) factor -> . factor_constante
    (65) factor -> . factor_variable
    (66) factor -> . factor_expresion
    (67) factor_constante -> . CTEI
    (68) factor_constante -> . CTEF
    (69) factor_variable -> . ID
    (70) factor_variable -> . ID LBRACKET exp RBRACKET
    (71) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (72) factor_variable -> . ID llamada_func
    (73) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 74
    CTEF            shift and go to state 75
    ID              shift and go to state 76
    LPAREN          shift and go to state 77

    exp                            shift and go to state 180
    term                           shift and go to state 69
    factor                         shift and go to state 70
    factor_constante               shift and go to state 71
    factor_variable                shift and go to state 72
    factor_expresion               shift and go to state 73

state 168

    (45) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos . whileCycle RBRACE SEMICOLON
    (46) whileCycle -> . estatutos whileCycle
    (47) whileCycle -> . empty
    (31) estatutos -> . asignar
    (32) estatutos -> . llamada_func
    (33) estatutos -> . ciclo_for
    (34) estatutos -> . ciclo_while
    (35) estatutos -> . condicion
    (36) estatutos -> . escribe
    (37) estatutos -> . leer
    (38) estatutos -> . empty
    (84) empty -> .
    (39) asignar -> . variable ASSIGN exp SEMICOLON
    (74) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (48) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (45) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (51) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (79) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (44) leer -> . LEER variable SEMICOLON
    (40) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 84 (empty -> .)
    ID              shift and go to state 51
    PORCADA         shift and go to state 52
    MIENTRAS        shift and go to state 53
    SI              shift and go to state 54
    IMPRIMIR        shift and go to state 55
    LEER            shift and go to state 56

  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! PORCADA         [ reduce using rule 84 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 84 (empty -> .) ]
  ! SI              [ reduce using rule 84 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 84 (empty -> .) ]
  ! LEER            [ reduce using rule 84 (empty -> .) ]

    estatutos                      shift and go to state 181
    whileCycle                     shift and go to state 182
    empty                          shift and go to state 183
    asignar                        shift and go to state 42
    llamada_func                   shift and go to state 43
    ciclo_for                      shift and go to state 44
    ciclo_while                    shift and go to state 45
    condicion                      shift and go to state 46
    escribe                        shift and go to state 47
    leer                           shift and go to state 48
    variable                       shift and go to state 50

state 169

    (51) condicion -> SI LPAREN exp RPAREN LBRACE estatutos . condicionCycle RBRACE sinoCondicion SEMICOLON
    (52) condicionCycle -> . estatutos condicionCycle
    (53) condicionCycle -> . empty
    (31) estatutos -> . asignar
    (32) estatutos -> . llamada_func
    (33) estatutos -> . ciclo_for
    (34) estatutos -> . ciclo_while
    (35) estatutos -> . condicion
    (36) estatutos -> . escribe
    (37) estatutos -> . leer
    (38) estatutos -> . empty
    (84) empty -> .
    (39) asignar -> . variable ASSIGN exp SEMICOLON
    (74) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (48) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (45) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (51) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (79) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (44) leer -> . LEER variable SEMICOLON
    (40) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 84 (empty -> .)
    ID              shift and go to state 51
    PORCADA         shift and go to state 52
    MIENTRAS        shift and go to state 53
    SI              shift and go to state 54
    IMPRIMIR        shift and go to state 55
    LEER            shift and go to state 56

  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! PORCADA         [ reduce using rule 84 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 84 (empty -> .) ]
  ! SI              [ reduce using rule 84 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 84 (empty -> .) ]
  ! LEER            [ reduce using rule 84 (empty -> .) ]

    estatutos                      shift and go to state 184
    condicionCycle                 shift and go to state 185
    empty                          shift and go to state 186
    asignar                        shift and go to state 42
    llamada_func                   shift and go to state 43
    ciclo_for                      shift and go to state 44
    ciclo_while                    shift and go to state 45
    condicion                      shift and go to state 46
    escribe                        shift and go to state 47
    leer                           shift and go to state 48
    variable                       shift and go to state 50

state 170

    (26) decFuncCycle -> estatutos . decFuncCycle
    (26) decFuncCycle -> . estatutos decFuncCycle
    (27) decFuncCycle -> . empty
    (31) estatutos -> . asignar
    (32) estatutos -> . llamada_func
    (33) estatutos -> . ciclo_for
    (34) estatutos -> . ciclo_while
    (35) estatutos -> . condicion
    (36) estatutos -> . escribe
    (37) estatutos -> . leer
    (38) estatutos -> . empty
    (84) empty -> .
    (39) asignar -> . variable ASSIGN exp SEMICOLON
    (74) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (48) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (45) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (51) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (79) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (44) leer -> . LEER variable SEMICOLON
    (40) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    REGRESAR        reduce using rule 84 (empty -> .)
    ID              shift and go to state 51
    PORCADA         shift and go to state 52
    MIENTRAS        shift and go to state 53
    SI              shift and go to state 54
    IMPRIMIR        shift and go to state 55
    LEER            shift and go to state 56

  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! PORCADA         [ reduce using rule 84 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 84 (empty -> .) ]
  ! SI              [ reduce using rule 84 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 84 (empty -> .) ]
  ! LEER            [ reduce using rule 84 (empty -> .) ]

    estatutos                      shift and go to state 170
    decFuncCycle                   shift and go to state 187
    empty                          shift and go to state 172
    asignar                        shift and go to state 42
    llamada_func                   shift and go to state 43
    ciclo_for                      shift and go to state 44
    ciclo_while                    shift and go to state 45
    condicion                      shift and go to state 46
    escribe                        shift and go to state 47
    leer                           shift and go to state 48
    variable                       shift and go to state 50

state 171

    (23) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle . REGRESAR variable SEMICOLON RBRACE SEMICOLON

    REGRESAR        shift and go to state 188


state 172

    (27) decFuncCycle -> empty .
    (38) estatutos -> empty .

  ! reduce/reduce conflict for REGRESAR resolved using rule 27 (decFuncCycle -> empty .)
    REGRESAR        reduce using rule 27 (decFuncCycle -> empty .)
    ID              reduce using rule 38 (estatutos -> empty .)
    PORCADA         reduce using rule 38 (estatutos -> empty .)
    MIENTRAS        reduce using rule 38 (estatutos -> empty .)
    SI              reduce using rule 38 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 38 (estatutos -> empty .)
    LEER            reduce using rule 38 (estatutos -> empty .)

  ! REGRESAR        [ reduce using rule 38 (estatutos -> empty .) ]


state 173

    (29) parameterCycle -> COMMA type ID parameterCycle .

    RPAREN          reduce using rule 29 (parameterCycle -> COMMA type ID parameterCycle .)


state 174

    (18) arrayCycle -> COMMA ID LBRACKET . CTEI RBRACKET arrayCycle

    CTEI            shift and go to state 189


state 175

    (20) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . matrixCycle SEMICOLON
    (21) matrixCycle -> . COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle
    (22) matrixCycle -> . empty
    (84) empty -> .

    COMMA           shift and go to state 191
    SEMICOLON       reduce using rule 84 (empty -> .)

    matrixCycle                    shift and go to state 190
    empty                          shift and go to state 192

state 176

    (42) variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    ASSIGN          reduce using rule 42 (variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 42 (variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 177

    (49) forCycle -> estatutos . forCycle
    (49) forCycle -> . estatutos forCycle
    (50) forCycle -> . empty
    (31) estatutos -> . asignar
    (32) estatutos -> . llamada_func
    (33) estatutos -> . ciclo_for
    (34) estatutos -> . ciclo_while
    (35) estatutos -> . condicion
    (36) estatutos -> . escribe
    (37) estatutos -> . leer
    (38) estatutos -> . empty
    (84) empty -> .
    (39) asignar -> . variable ASSIGN exp SEMICOLON
    (74) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (48) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (45) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (51) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (79) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (44) leer -> . LEER variable SEMICOLON
    (40) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 84 (empty -> .)
    ID              shift and go to state 51
    PORCADA         shift and go to state 52
    MIENTRAS        shift and go to state 53
    SI              shift and go to state 54
    IMPRIMIR        shift and go to state 55
    LEER            shift and go to state 56

  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! PORCADA         [ reduce using rule 84 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 84 (empty -> .) ]
  ! SI              [ reduce using rule 84 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 84 (empty -> .) ]
  ! LEER            [ reduce using rule 84 (empty -> .) ]

    estatutos                      shift and go to state 177
    forCycle                       shift and go to state 193
    empty                          shift and go to state 179
    asignar                        shift and go to state 42
    llamada_func                   shift and go to state 43
    ciclo_for                      shift and go to state 44
    ciclo_while                    shift and go to state 45
    condicion                      shift and go to state 46
    escribe                        shift and go to state 47
    leer                           shift and go to state 48
    variable                       shift and go to state 50

state 178

    (48) ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle . RBRACE SEMICOLON

    RBRACE          shift and go to state 194


state 179

    (50) forCycle -> empty .
    (38) estatutos -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 38 (estatutos -> empty .)
    ID              reduce using rule 38 (estatutos -> empty .)
    PORCADA         reduce using rule 38 (estatutos -> empty .)
    MIENTRAS        reduce using rule 38 (estatutos -> empty .)
    SI              reduce using rule 38 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 38 (estatutos -> empty .)
    LEER            reduce using rule 38 (estatutos -> empty .)
    RBRACE          reduce using rule 38 (estatutos -> empty .)

  ! RBRACE          [ reduce using rule 50 (forCycle -> empty .) ]


state 180

    (71) factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 195


state 181

    (46) whileCycle -> estatutos . whileCycle
    (46) whileCycle -> . estatutos whileCycle
    (47) whileCycle -> . empty
    (31) estatutos -> . asignar
    (32) estatutos -> . llamada_func
    (33) estatutos -> . ciclo_for
    (34) estatutos -> . ciclo_while
    (35) estatutos -> . condicion
    (36) estatutos -> . escribe
    (37) estatutos -> . leer
    (38) estatutos -> . empty
    (84) empty -> .
    (39) asignar -> . variable ASSIGN exp SEMICOLON
    (74) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (48) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (45) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (51) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (79) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (44) leer -> . LEER variable SEMICOLON
    (40) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 84 (empty -> .)
    ID              shift and go to state 51
    PORCADA         shift and go to state 52
    MIENTRAS        shift and go to state 53
    SI              shift and go to state 54
    IMPRIMIR        shift and go to state 55
    LEER            shift and go to state 56

  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! PORCADA         [ reduce using rule 84 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 84 (empty -> .) ]
  ! SI              [ reduce using rule 84 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 84 (empty -> .) ]
  ! LEER            [ reduce using rule 84 (empty -> .) ]

    estatutos                      shift and go to state 181
    whileCycle                     shift and go to state 196
    empty                          shift and go to state 183
    asignar                        shift and go to state 42
    llamada_func                   shift and go to state 43
    ciclo_for                      shift and go to state 44
    ciclo_while                    shift and go to state 45
    condicion                      shift and go to state 46
    escribe                        shift and go to state 47
    leer                           shift and go to state 48
    variable                       shift and go to state 50

state 182

    (45) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle . RBRACE SEMICOLON

    RBRACE          shift and go to state 197


state 183

    (47) whileCycle -> empty .
    (38) estatutos -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 38 (estatutos -> empty .)
    ID              reduce using rule 38 (estatutos -> empty .)
    PORCADA         reduce using rule 38 (estatutos -> empty .)
    MIENTRAS        reduce using rule 38 (estatutos -> empty .)
    SI              reduce using rule 38 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 38 (estatutos -> empty .)
    LEER            reduce using rule 38 (estatutos -> empty .)
    RBRACE          reduce using rule 38 (estatutos -> empty .)

  ! RBRACE          [ reduce using rule 47 (whileCycle -> empty .) ]


state 184

    (52) condicionCycle -> estatutos . condicionCycle
    (52) condicionCycle -> . estatutos condicionCycle
    (53) condicionCycle -> . empty
    (31) estatutos -> . asignar
    (32) estatutos -> . llamada_func
    (33) estatutos -> . ciclo_for
    (34) estatutos -> . ciclo_while
    (35) estatutos -> . condicion
    (36) estatutos -> . escribe
    (37) estatutos -> . leer
    (38) estatutos -> . empty
    (84) empty -> .
    (39) asignar -> . variable ASSIGN exp SEMICOLON
    (74) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (48) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (45) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (51) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (79) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (44) leer -> . LEER variable SEMICOLON
    (40) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 84 (empty -> .)
    ID              shift and go to state 51
    PORCADA         shift and go to state 52
    MIENTRAS        shift and go to state 53
    SI              shift and go to state 54
    IMPRIMIR        shift and go to state 55
    LEER            shift and go to state 56

  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! PORCADA         [ reduce using rule 84 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 84 (empty -> .) ]
  ! SI              [ reduce using rule 84 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 84 (empty -> .) ]
  ! LEER            [ reduce using rule 84 (empty -> .) ]

    estatutos                      shift and go to state 184
    condicionCycle                 shift and go to state 198
    empty                          shift and go to state 186
    asignar                        shift and go to state 42
    llamada_func                   shift and go to state 43
    ciclo_for                      shift and go to state 44
    ciclo_while                    shift and go to state 45
    condicion                      shift and go to state 46
    escribe                        shift and go to state 47
    leer                           shift and go to state 48
    variable                       shift and go to state 50

state 185

    (51) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle . RBRACE sinoCondicion SEMICOLON

    RBRACE          shift and go to state 199


state 186

    (53) condicionCycle -> empty .
    (38) estatutos -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 38 (estatutos -> empty .)
    ID              reduce using rule 38 (estatutos -> empty .)
    PORCADA         reduce using rule 38 (estatutos -> empty .)
    MIENTRAS        reduce using rule 38 (estatutos -> empty .)
    SI              reduce using rule 38 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 38 (estatutos -> empty .)
    LEER            reduce using rule 38 (estatutos -> empty .)
    RBRACE          reduce using rule 38 (estatutos -> empty .)

  ! RBRACE          [ reduce using rule 53 (condicionCycle -> empty .) ]


state 187

    (26) decFuncCycle -> estatutos decFuncCycle .

    REGRESAR        reduce using rule 26 (decFuncCycle -> estatutos decFuncCycle .)


state 188

    (23) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR . variable SEMICOLON RBRACE SEMICOLON
    (40) variable -> . ID variable_aux

    ID              shift and go to state 82

    variable                       shift and go to state 200

state 189

    (18) arrayCycle -> COMMA ID LBRACKET CTEI . RBRACKET arrayCycle

    RBRACKET        shift and go to state 201


state 190

    (20) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle . SEMICOLON

    SEMICOLON       shift and go to state 202


state 191

    (21) matrixCycle -> COMMA . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle

    ID              shift and go to state 203


state 192

    (22) matrixCycle -> empty .

    SEMICOLON       reduce using rule 22 (matrixCycle -> empty .)


state 193

    (49) forCycle -> estatutos forCycle .

    RBRACE          reduce using rule 49 (forCycle -> estatutos forCycle .)


state 194

    (48) ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 204


state 195

    (71) factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    TIMES           reduce using rule 71 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 71 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 71 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 71 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    EN              reduce using rule 71 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 71 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 71 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 71 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 71 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LBRACE          reduce using rule 71 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 196

    (46) whileCycle -> estatutos whileCycle .

    RBRACE          reduce using rule 46 (whileCycle -> estatutos whileCycle .)


state 197

    (45) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 205


state 198

    (52) condicionCycle -> estatutos condicionCycle .

    RBRACE          reduce using rule 52 (condicionCycle -> estatutos condicionCycle .)


state 199

    (51) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE . sinoCondicion SEMICOLON
    (54) sinoCondicion -> . SINO LBRACE estatutos condicionCycle RBRACE
    (55) sinoCondicion -> . empty
    (84) empty -> .

    SINO            shift and go to state 207
    SEMICOLON       reduce using rule 84 (empty -> .)

    sinoCondicion                  shift and go to state 206
    empty                          shift and go to state 208

state 200

    (23) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable . SEMICOLON RBRACE SEMICOLON

    SEMICOLON       shift and go to state 209


state 201

    (18) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET . arrayCycle
    (18) arrayCycle -> . COMMA ID LBRACKET CTEI RBRACKET arrayCycle
    (19) arrayCycle -> . empty
    (84) empty -> .

    COMMA           shift and go to state 147
    SEMICOLON       reduce using rule 84 (empty -> .)

    arrayCycle                     shift and go to state 210
    empty                          shift and go to state 148

state 202

    (20) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .

    INICIO          reduce using rule 20 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    FUNCION         reduce using rule 20 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    ID              reduce using rule 20 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    PORCADA         reduce using rule 20 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    MIENTRAS        reduce using rule 20 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    SI              reduce using rule 20 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 20 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    LEER            reduce using rule 20 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    REGRESAR        reduce using rule 20 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)


state 203

    (21) matrixCycle -> COMMA ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle

    LBRACKET        shift and go to state 211


state 204

    (48) ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .

    RBRACE          reduce using rule 48 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    ID              reduce using rule 48 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    PORCADA         reduce using rule 48 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    MIENTRAS        reduce using rule 48 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    SI              reduce using rule 48 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    IMPRIMIR        reduce using rule 48 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    LEER            reduce using rule 48 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    REGRESAR        reduce using rule 48 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)


state 205

    (45) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .

    RBRACE          reduce using rule 45 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    ID              reduce using rule 45 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    PORCADA         reduce using rule 45 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    MIENTRAS        reduce using rule 45 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    SI              reduce using rule 45 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    IMPRIMIR        reduce using rule 45 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    LEER            reduce using rule 45 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    REGRESAR        reduce using rule 45 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)


state 206

    (51) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion . SEMICOLON

    SEMICOLON       shift and go to state 212


state 207

    (54) sinoCondicion -> SINO . LBRACE estatutos condicionCycle RBRACE

    LBRACE          shift and go to state 213


state 208

    (55) sinoCondicion -> empty .

    SEMICOLON       reduce using rule 55 (sinoCondicion -> empty .)


state 209

    (23) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON . RBRACE SEMICOLON

    RBRACE          shift and go to state 214


state 210

    (18) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET arrayCycle .

    SEMICOLON       reduce using rule 18 (arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET arrayCycle .)


state 211

    (21) matrixCycle -> COMMA ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle

    CTEI            shift and go to state 215


state 212

    (51) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .

    RBRACE          reduce using rule 51 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    ID              reduce using rule 51 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    PORCADA         reduce using rule 51 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    MIENTRAS        reduce using rule 51 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    SI              reduce using rule 51 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    IMPRIMIR        reduce using rule 51 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    LEER            reduce using rule 51 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    REGRESAR        reduce using rule 51 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)


state 213

    (54) sinoCondicion -> SINO LBRACE . estatutos condicionCycle RBRACE
    (31) estatutos -> . asignar
    (32) estatutos -> . llamada_func
    (33) estatutos -> . ciclo_for
    (34) estatutos -> . ciclo_while
    (35) estatutos -> . condicion
    (36) estatutos -> . escribe
    (37) estatutos -> . leer
    (38) estatutos -> . empty
    (39) asignar -> . variable ASSIGN exp SEMICOLON
    (74) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (48) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (45) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (51) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (79) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (44) leer -> . LEER variable SEMICOLON
    (84) empty -> .
    (40) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 51
    PORCADA         shift and go to state 52
    MIENTRAS        shift and go to state 53
    SI              shift and go to state 54
    IMPRIMIR        shift and go to state 55
    LEER            shift and go to state 56
    RBRACE          reduce using rule 84 (empty -> .)

  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! PORCADA         [ reduce using rule 84 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 84 (empty -> .) ]
  ! SI              [ reduce using rule 84 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 84 (empty -> .) ]
  ! LEER            [ reduce using rule 84 (empty -> .) ]

    estatutos                      shift and go to state 216
    asignar                        shift and go to state 42
    llamada_func                   shift and go to state 43
    ciclo_for                      shift and go to state 44
    ciclo_while                    shift and go to state 45
    condicion                      shift and go to state 46
    escribe                        shift and go to state 47
    leer                           shift and go to state 48
    empty                          shift and go to state 49
    variable                       shift and go to state 50

state 214

    (23) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 217


state 215

    (21) matrixCycle -> COMMA ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET matrixCycle

    RBRACKET        shift and go to state 218


state 216

    (54) sinoCondicion -> SINO LBRACE estatutos . condicionCycle RBRACE
    (52) condicionCycle -> . estatutos condicionCycle
    (53) condicionCycle -> . empty
    (31) estatutos -> . asignar
    (32) estatutos -> . llamada_func
    (33) estatutos -> . ciclo_for
    (34) estatutos -> . ciclo_while
    (35) estatutos -> . condicion
    (36) estatutos -> . escribe
    (37) estatutos -> . leer
    (38) estatutos -> . empty
    (84) empty -> .
    (39) asignar -> . variable ASSIGN exp SEMICOLON
    (74) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (48) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (45) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (51) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (79) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (44) leer -> . LEER variable SEMICOLON
    (40) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 84 (empty -> .)
    ID              shift and go to state 51
    PORCADA         shift and go to state 52
    MIENTRAS        shift and go to state 53
    SI              shift and go to state 54
    IMPRIMIR        shift and go to state 55
    LEER            shift and go to state 56

  ! ID              [ reduce using rule 84 (empty -> .) ]
  ! PORCADA         [ reduce using rule 84 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 84 (empty -> .) ]
  ! SI              [ reduce using rule 84 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 84 (empty -> .) ]
  ! LEER            [ reduce using rule 84 (empty -> .) ]

    estatutos                      shift and go to state 184
    condicionCycle                 shift and go to state 219
    empty                          shift and go to state 186
    asignar                        shift and go to state 42
    llamada_func                   shift and go to state 43
    ciclo_for                      shift and go to state 44
    ciclo_while                    shift and go to state 45
    condicion                      shift and go to state 46
    escribe                        shift and go to state 47
    leer                           shift and go to state 48
    variable                       shift and go to state 50

state 217

    (23) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON .

    INICIO          reduce using rule 23 (dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON .)


state 218

    (21) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET matrixCycle

    LBRACKET        shift and go to state 220


state 219

    (54) sinoCondicion -> SINO LBRACE estatutos condicionCycle . RBRACE

    RBRACE          shift and go to state 221


state 220

    (21) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET matrixCycle

    CTEI            shift and go to state 222


state 221

    (54) sinoCondicion -> SINO LBRACE estatutos condicionCycle RBRACE .

    SEMICOLON       reduce using rule 54 (sinoCondicion -> SINO LBRACE estatutos condicionCycle RBRACE .)


state 222

    (21) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET matrixCycle

    RBRACKET        shift and go to state 223


state 223

    (21) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . matrixCycle
    (21) matrixCycle -> . COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle
    (22) matrixCycle -> . empty
    (84) empty -> .

    COMMA           shift and go to state 191
    SEMICOLON       reduce using rule 84 (empty -> .)

    matrixCycle                    shift and go to state 224
    empty                          shift and go to state 192

state 224

    (21) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle .

    SEMICOLON       reduce using rule 21 (matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 143 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 143 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 143 resolved as shift
WARNING: shift/reduce conflict for SI in state 143 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 143 resolved as shift
WARNING: shift/reduce conflict for LEER in state 143 resolved as shift
WARNING: shift/reduce conflict for ID in state 153 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 153 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 153 resolved as shift
WARNING: shift/reduce conflict for SI in state 153 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 153 resolved as shift
WARNING: shift/reduce conflict for LEER in state 153 resolved as shift
WARNING: shift/reduce conflict for ID in state 155 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 155 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 155 resolved as shift
WARNING: shift/reduce conflict for SI in state 155 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 155 resolved as shift
WARNING: shift/reduce conflict for LEER in state 155 resolved as shift
WARNING: shift/reduce conflict for ID in state 156 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 156 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 156 resolved as shift
WARNING: shift/reduce conflict for SI in state 156 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 156 resolved as shift
WARNING: shift/reduce conflict for LEER in state 156 resolved as shift
WARNING: shift/reduce conflict for ID in state 159 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 159 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 159 resolved as shift
WARNING: shift/reduce conflict for SI in state 159 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 159 resolved as shift
WARNING: shift/reduce conflict for LEER in state 159 resolved as shift
WARNING: shift/reduce conflict for ID in state 166 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 166 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 166 resolved as shift
WARNING: shift/reduce conflict for SI in state 166 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 166 resolved as shift
WARNING: shift/reduce conflict for LEER in state 166 resolved as shift
WARNING: shift/reduce conflict for ID in state 168 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 168 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 168 resolved as shift
WARNING: shift/reduce conflict for SI in state 168 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 168 resolved as shift
WARNING: shift/reduce conflict for LEER in state 168 resolved as shift
WARNING: shift/reduce conflict for ID in state 169 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 169 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 169 resolved as shift
WARNING: shift/reduce conflict for SI in state 169 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 169 resolved as shift
WARNING: shift/reduce conflict for LEER in state 169 resolved as shift
WARNING: shift/reduce conflict for ID in state 170 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 170 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 170 resolved as shift
WARNING: shift/reduce conflict for SI in state 170 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 170 resolved as shift
WARNING: shift/reduce conflict for LEER in state 170 resolved as shift
WARNING: shift/reduce conflict for ID in state 177 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 177 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 177 resolved as shift
WARNING: shift/reduce conflict for SI in state 177 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 177 resolved as shift
WARNING: shift/reduce conflict for LEER in state 177 resolved as shift
WARNING: shift/reduce conflict for ID in state 181 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 181 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 181 resolved as shift
WARNING: shift/reduce conflict for SI in state 181 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 181 resolved as shift
WARNING: shift/reduce conflict for LEER in state 181 resolved as shift
WARNING: shift/reduce conflict for ID in state 184 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 184 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 184 resolved as shift
WARNING: shift/reduce conflict for SI in state 184 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 184 resolved as shift
WARNING: shift/reduce conflict for LEER in state 184 resolved as shift
WARNING: shift/reduce conflict for ID in state 213 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 213 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 213 resolved as shift
WARNING: shift/reduce conflict for SI in state 213 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 213 resolved as shift
WARNING: shift/reduce conflict for LEER in state 213 resolved as shift
WARNING: shift/reduce conflict for ID in state 216 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 216 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 216 resolved as shift
WARNING: shift/reduce conflict for SI in state 216 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 216 resolved as shift
WARNING: shift/reduce conflict for LEER in state 216 resolved as shift
WARNING: reduce/reduce conflict in state 172 resolved using rule (decFuncCycle -> empty)
WARNING: rejected rule (estatutos -> empty) in state 172
WARNING: reduce/reduce conflict in state 179 resolved using rule (estatutos -> empty)
WARNING: rejected rule (forCycle -> empty) in state 179
WARNING: reduce/reduce conflict in state 183 resolved using rule (estatutos -> empty)
WARNING: rejected rule (whileCycle -> empty) in state 183
WARNING: reduce/reduce conflict in state 186 resolved using rule (estatutos -> empty)
WARNING: rejected rule (condicionCycle -> empty) in state 186
WARNING: Rule (forCycle -> empty) is never reduced
WARNING: Rule (whileCycle -> empty) is never reduced
WARNING: Rule (condicionCycle -> empty) is never reduced
