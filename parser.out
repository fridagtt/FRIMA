Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTECHAR
    EQUAL
    GREATER
    GREATEREQ
    LESS
    LESSEQ
    NOTEQUAL
    o
    y

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID punto_programa COLON inicio
Rule 2     programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio
Rule 3     programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func inicio
Rule 4     programa -> PROGRAMA ID punto_programa COLON dec_func inicio
Rule 5     dec_var_cycle -> dec_var dec_var_cycle
Rule 6     dec_var_cycle -> empty
Rule 7     punto_programa -> <empty>
Rule 8     inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON
Rule 9     dec_var -> simple_var
Rule 10    dec_var -> array
Rule 11    dec_var -> matrix
Rule 12    simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
Rule 13    simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle
Rule 14    simpleVarCycle -> empty
Rule 15    punto_simple_var -> <empty>
Rule 16    type -> ENTERO
Rule 17    type -> DECIMAL
Rule 18    type -> LETRA
Rule 19    array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON
Rule 20    arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET arrayCycle
Rule 21    arrayCycle -> empty
Rule 22    matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON
Rule 23    matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle
Rule 24    matrixCycle -> empty
Rule 25    dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
Rule 26    dec_func_return -> type
Rule 27    dec_func_return -> SINREGRESAR
Rule 28    decFuncCycle -> estatutos decFuncCycle
Rule 29    decFuncCycle -> empty
Rule 30    parameter -> type ID parameterCycle
Rule 31    parameterCycle -> COMMA type ID parameterCycle
Rule 32    parameterCycle -> empty
Rule 33    estatutos -> asignar
Rule 34    estatutos -> llamada_func
Rule 35    estatutos -> ciclo_for
Rule 36    estatutos -> ciclo_while
Rule 37    estatutos -> condicion
Rule 38    estatutos -> escribe
Rule 39    estatutos -> leer
Rule 40    estatutos -> empty
Rule 41    asignar -> variable ASSIGN exp SEMICOLON
Rule 42    variable -> ID variable_aux
Rule 43    variable_aux -> LBRACKET exp RBRACKET
Rule 44    variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 45    variable_aux -> empty
Rule 46    leer -> LEER variable SEMICOLON
Rule 47    ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
Rule 48    whileCycle -> estatutos whileCycle
Rule 49    whileCycle -> empty
Rule 50    ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
Rule 51    forCycle -> estatutos forCycle
Rule 52    forCycle -> empty
Rule 53    condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
Rule 54    condicionCycle -> estatutos condicionCycle
Rule 55    condicionCycle -> empty
Rule 56    sinoCondicion -> SINO LBRACE estatutos condicionCycle RBRACE
Rule 57    sinoCondicion -> empty
Rule 58    exp -> term expT
Rule 59    expT -> PLUS exp
Rule 60    expT -> MINUS exp
Rule 61    expT -> empty
Rule 62    term -> factor termT
Rule 63    termT -> TIMES term
Rule 64    termT -> DIVIDE term
Rule 65    termT -> empty
Rule 66    factor -> factor_constante
Rule 67    factor -> factor_variable
Rule 68    factor -> factor_expresion
Rule 69    factor_constante -> CTEI
Rule 70    factor_constante -> CTEF
Rule 71    factor_variable -> ID
Rule 72    factor_variable -> ID LBRACKET exp RBRACKET
Rule 73    factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 74    factor_variable -> ID llamada_func
Rule 75    factor_expresion -> LPAREN exp RPAREN
Rule 76    llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON
Rule 77    llamadaCYCLE -> exp llamadaCYCLE_aux
Rule 78    llamadaCYCLE -> empty
Rule 79    llamadaCYCLE_aux -> COMMA exp llamadaCYCLE_aux
Rule 80    llamadaCYCLE_aux -> empty
Rule 81    escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
Rule 82    escribe_aux -> exp escribeCycle
Rule 83    escribe_aux -> CTESTRING escribeCycle
Rule 84    escribeCycle -> COMMA escribe_aux
Rule 85    escribeCycle -> empty
Rule 86    empty -> <empty>

Terminals, with rules where they appear

ARROW                : 12 19 22
ASSIGN               : 41
COLON                : 1 2 3 4
COMMA                : 13 20 23 31 79 84
CTECHAR              : 
CTEF                 : 70
CTEI                 : 19 20 22 22 23 23 69
CTESTRING            : 83
DECIMAL              : 17
DIVIDE               : 64
EN                   : 50
ENTERO               : 16
EQUAL                : 
FUNCION              : 25
GREATER              : 
GREATEREQ            : 
ID                   : 1 2 3 4 12 13 19 20 22 23 25 30 31 42 71 72 73 74 76
IMPRIMIR             : 81
INICIO               : 8
LBRACE               : 8 25 47 50 53 56
LBRACKET             : 19 20 22 22 23 23 43 44 44 72 73 73
LEER                 : 46
LESS                 : 
LESSEQ               : 
LETRA                : 18
LPAREN               : 8 25 47 53 75 76 81
MIENTRAS             : 47
MINUS                : 60
NOTEQUAL             : 
PLUS                 : 59
PORCADA              : 50
PROGRAMA             : 1 2 3 4
RBRACE               : 8 25 47 50 53 56
RBRACKET             : 19 20 22 22 23 23 43 44 44 72 73 73
REGRESAR             : 25
RENGLON              : 19
RPAREN               : 8 25 47 53 75 76 81
SEMICOLON            : 8 12 19 22 25 25 41 46 47 50 53 76 81
SI                   : 53
SINO                 : 56
SINREGRESAR          : 27
TABLA                : 22
TIMES                : 63
VARIABLE             : 12
error                : 
o                    : 
y                    : 

Nonterminals, with rules where they appear

array                : 10
arrayCycle           : 19 20
asignar              : 33
ciclo_for            : 35
ciclo_while          : 36
condicion            : 37
condicionCycle       : 53 54 56
decFuncCycle         : 25 28
dec_func             : 3 4
dec_func_return      : 25
dec_var              : 5 25
dec_var_cycle        : 2 3 5
empty                : 6 14 21 24 29 32 40 45 49 52 55 57 61 65 78 80 85
escribe              : 38
escribeCycle         : 82 83
escribe_aux          : 81 84
estatutos            : 8 25 28 47 48 50 51 53 54 56
exp                  : 41 43 44 44 47 50 50 53 59 60 72 73 73 75 77 79 82
expT                 : 58
factor               : 62
factor_constante     : 66
factor_expresion     : 68
factor_variable      : 67
forCycle             : 50 51
inicio               : 1 2 3 4
leer                 : 39
llamadaCYCLE         : 76
llamadaCYCLE_aux     : 77 79
llamada_func         : 34 74
matrix               : 11
matrixCycle          : 22 23
parameter            : 25
parameterCycle       : 30 31
programa             : 0
punto_programa       : 1 2 3 4
punto_simple_var     : 12 13
simpleVarCycle       : 12 13
simple_var           : 9
sinoCondicion        : 53
term                 : 58 63 64
termT                : 62
type                 : 12 19 22 26 30 31
variable             : 25 41 46
variable_aux         : 42
whileCycle           : 47 48

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID punto_programa COLON inicio
    (2) programa -> . PROGRAMA ID punto_programa COLON dec_var_cycle inicio
    (3) programa -> . PROGRAMA ID punto_programa COLON dec_var_cycle dec_func inicio
    (4) programa -> . PROGRAMA ID punto_programa COLON dec_func inicio

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID punto_programa COLON inicio
    (2) programa -> PROGRAMA . ID punto_programa COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA . ID punto_programa COLON dec_var_cycle dec_func inicio
    (4) programa -> PROGRAMA . ID punto_programa COLON dec_func inicio

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . punto_programa COLON inicio
    (2) programa -> PROGRAMA ID . punto_programa COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA ID . punto_programa COLON dec_var_cycle dec_func inicio
    (4) programa -> PROGRAMA ID . punto_programa COLON dec_func inicio
    (7) punto_programa -> .

    COLON           reduce using rule 7 (punto_programa -> .)

    punto_programa                 shift and go to state 4

state 4

    (1) programa -> PROGRAMA ID punto_programa . COLON inicio
    (2) programa -> PROGRAMA ID punto_programa . COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA ID punto_programa . COLON dec_var_cycle dec_func inicio
    (4) programa -> PROGRAMA ID punto_programa . COLON dec_func inicio

    COLON           shift and go to state 5


state 5

    (1) programa -> PROGRAMA ID punto_programa COLON . inicio
    (2) programa -> PROGRAMA ID punto_programa COLON . dec_var_cycle inicio
    (3) programa -> PROGRAMA ID punto_programa COLON . dec_var_cycle dec_func inicio
    (4) programa -> PROGRAMA ID punto_programa COLON . dec_func inicio
    (8) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON
    (5) dec_var_cycle -> . dec_var dec_var_cycle
    (6) dec_var_cycle -> . empty
    (25) dec_func -> . FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
    (9) dec_var -> . simple_var
    (10) dec_var -> . array
    (11) dec_var -> . matrix
    (86) empty -> .
    (12) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (19) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON
    (22) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

  ! shift/reduce conflict for INICIO resolved as shift
  ! shift/reduce conflict for FUNCION resolved as shift
    INICIO          shift and go to state 9
    FUNCION         shift and go to state 12
    VARIABLE        shift and go to state 16
    RENGLON         shift and go to state 17
    TABLA           shift and go to state 18

  ! INICIO          [ reduce using rule 86 (empty -> .) ]
  ! FUNCION         [ reduce using rule 86 (empty -> .) ]

    inicio                         shift and go to state 6
    dec_var_cycle                  shift and go to state 7
    dec_func                       shift and go to state 8
    dec_var                        shift and go to state 10
    empty                          shift and go to state 11
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 6

    (1) programa -> PROGRAMA ID punto_programa COLON inicio .

    $end            reduce using rule 1 (programa -> PROGRAMA ID punto_programa COLON inicio .)


state 7

    (2) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle . inicio
    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle . dec_func inicio
    (8) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON
    (25) dec_func -> . FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON

    INICIO          shift and go to state 9
    FUNCION         shift and go to state 12

    inicio                         shift and go to state 19
    dec_func                       shift and go to state 20

state 8

    (4) programa -> PROGRAMA ID punto_programa COLON dec_func . inicio
    (8) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON

    INICIO          shift and go to state 9

    inicio                         shift and go to state 21

state 9

    (8) inicio -> INICIO . LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON

    LPAREN          shift and go to state 22


state 10

    (5) dec_var_cycle -> dec_var . dec_var_cycle
    (5) dec_var_cycle -> . dec_var dec_var_cycle
    (6) dec_var_cycle -> . empty
    (9) dec_var -> . simple_var
    (10) dec_var -> . array
    (11) dec_var -> . matrix
    (86) empty -> .
    (12) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (19) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON
    (22) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    INICIO          reduce using rule 86 (empty -> .)
    FUNCION         reduce using rule 86 (empty -> .)
    VARIABLE        shift and go to state 16
    RENGLON         shift and go to state 17
    TABLA           shift and go to state 18

    dec_var                        shift and go to state 10
    dec_var_cycle                  shift and go to state 23
    empty                          shift and go to state 11
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 11

    (6) dec_var_cycle -> empty .

    INICIO          reduce using rule 6 (dec_var_cycle -> empty .)
    FUNCION         reduce using rule 6 (dec_var_cycle -> empty .)


state 12

    (25) dec_func -> FUNCION . dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
    (26) dec_func_return -> . type
    (27) dec_func_return -> . SINREGRESAR
    (16) type -> . ENTERO
    (17) type -> . DECIMAL
    (18) type -> . LETRA

    SINREGRESAR     shift and go to state 26
    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    LETRA           shift and go to state 29

    dec_func_return                shift and go to state 24
    type                           shift and go to state 25

state 13

    (9) dec_var -> simple_var .

    VARIABLE        reduce using rule 9 (dec_var -> simple_var .)
    RENGLON         reduce using rule 9 (dec_var -> simple_var .)
    TABLA           reduce using rule 9 (dec_var -> simple_var .)
    INICIO          reduce using rule 9 (dec_var -> simple_var .)
    FUNCION         reduce using rule 9 (dec_var -> simple_var .)
    ID              reduce using rule 9 (dec_var -> simple_var .)
    PORCADA         reduce using rule 9 (dec_var -> simple_var .)
    MIENTRAS        reduce using rule 9 (dec_var -> simple_var .)
    SI              reduce using rule 9 (dec_var -> simple_var .)
    IMPRIMIR        reduce using rule 9 (dec_var -> simple_var .)
    LEER            reduce using rule 9 (dec_var -> simple_var .)
    REGRESAR        reduce using rule 9 (dec_var -> simple_var .)


state 14

    (10) dec_var -> array .

    VARIABLE        reduce using rule 10 (dec_var -> array .)
    RENGLON         reduce using rule 10 (dec_var -> array .)
    TABLA           reduce using rule 10 (dec_var -> array .)
    INICIO          reduce using rule 10 (dec_var -> array .)
    FUNCION         reduce using rule 10 (dec_var -> array .)
    ID              reduce using rule 10 (dec_var -> array .)
    PORCADA         reduce using rule 10 (dec_var -> array .)
    MIENTRAS        reduce using rule 10 (dec_var -> array .)
    SI              reduce using rule 10 (dec_var -> array .)
    IMPRIMIR        reduce using rule 10 (dec_var -> array .)
    LEER            reduce using rule 10 (dec_var -> array .)
    REGRESAR        reduce using rule 10 (dec_var -> array .)


state 15

    (11) dec_var -> matrix .

    VARIABLE        reduce using rule 11 (dec_var -> matrix .)
    RENGLON         reduce using rule 11 (dec_var -> matrix .)
    TABLA           reduce using rule 11 (dec_var -> matrix .)
    INICIO          reduce using rule 11 (dec_var -> matrix .)
    FUNCION         reduce using rule 11 (dec_var -> matrix .)
    ID              reduce using rule 11 (dec_var -> matrix .)
    PORCADA         reduce using rule 11 (dec_var -> matrix .)
    MIENTRAS        reduce using rule 11 (dec_var -> matrix .)
    SI              reduce using rule 11 (dec_var -> matrix .)
    IMPRIMIR        reduce using rule 11 (dec_var -> matrix .)
    LEER            reduce using rule 11 (dec_var -> matrix .)
    REGRESAR        reduce using rule 11 (dec_var -> matrix .)


state 16

    (12) simple_var -> VARIABLE . type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (16) type -> . ENTERO
    (17) type -> . DECIMAL
    (18) type -> . LETRA

    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    LETRA           shift and go to state 29

    type                           shift and go to state 30

state 17

    (19) array -> RENGLON . type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON
    (16) type -> . ENTERO
    (17) type -> . DECIMAL
    (18) type -> . LETRA

    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    LETRA           shift and go to state 29

    type                           shift and go to state 31

state 18

    (22) matrix -> TABLA . type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON
    (16) type -> . ENTERO
    (17) type -> . DECIMAL
    (18) type -> . LETRA

    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    LETRA           shift and go to state 29

    type                           shift and go to state 32

state 19

    (2) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio .

    $end            reduce using rule 2 (programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio .)


state 20

    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func . inicio
    (8) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON

    INICIO          shift and go to state 9

    inicio                         shift and go to state 33

state 21

    (4) programa -> PROGRAMA ID punto_programa COLON dec_func inicio .

    $end            reduce using rule 4 (programa -> PROGRAMA ID punto_programa COLON dec_func inicio .)


state 22

    (8) inicio -> INICIO LPAREN . RPAREN LBRACE estatutos RBRACE SEMICOLON

    RPAREN          shift and go to state 34


state 23

    (5) dec_var_cycle -> dec_var dec_var_cycle .

    INICIO          reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    FUNCION         reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)


state 24

    (25) dec_func -> FUNCION dec_func_return . ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON

    ID              shift and go to state 35


state 25

    (26) dec_func_return -> type .

    ID              reduce using rule 26 (dec_func_return -> type .)


state 26

    (27) dec_func_return -> SINREGRESAR .

    ID              reduce using rule 27 (dec_func_return -> SINREGRESAR .)


state 27

    (16) type -> ENTERO .

    ID              reduce using rule 16 (type -> ENTERO .)
    ARROW           reduce using rule 16 (type -> ENTERO .)


state 28

    (17) type -> DECIMAL .

    ID              reduce using rule 17 (type -> DECIMAL .)
    ARROW           reduce using rule 17 (type -> DECIMAL .)


state 29

    (18) type -> LETRA .

    ID              reduce using rule 18 (type -> LETRA .)
    ARROW           reduce using rule 18 (type -> LETRA .)


state 30

    (12) simple_var -> VARIABLE type . ARROW ID punto_simple_var simpleVarCycle SEMICOLON

    ARROW           shift and go to state 36


state 31

    (19) array -> RENGLON type . ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON

    ARROW           shift and go to state 37


state 32

    (22) matrix -> TABLA type . ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    ARROW           shift and go to state 38


state 33

    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func inicio .

    $end            reduce using rule 3 (programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func inicio .)


state 34

    (8) inicio -> INICIO LPAREN RPAREN . LBRACE estatutos RBRACE SEMICOLON

    LBRACE          shift and go to state 39


state 35

    (25) dec_func -> FUNCION dec_func_return ID . LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON

    LPAREN          shift and go to state 40


state 36

    (12) simple_var -> VARIABLE type ARROW . ID punto_simple_var simpleVarCycle SEMICOLON

    ID              shift and go to state 41


state 37

    (19) array -> RENGLON type ARROW . ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON

    ID              shift and go to state 42


state 38

    (22) matrix -> TABLA type ARROW . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    ID              shift and go to state 43


state 39

    (8) inicio -> INICIO LPAREN RPAREN LBRACE . estatutos RBRACE SEMICOLON
    (33) estatutos -> . asignar
    (34) estatutos -> . llamada_func
    (35) estatutos -> . ciclo_for
    (36) estatutos -> . ciclo_while
    (37) estatutos -> . condicion
    (38) estatutos -> . escribe
    (39) estatutos -> . leer
    (40) estatutos -> . empty
    (41) asignar -> . variable ASSIGN exp SEMICOLON
    (76) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (50) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (47) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (53) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (81) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (46) leer -> . LEER variable SEMICOLON
    (86) empty -> .
    (42) variable -> . ID variable_aux

    ID              shift and go to state 54
    PORCADA         shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57
    IMPRIMIR        shift and go to state 58
    LEER            shift and go to state 59
    RBRACE          reduce using rule 86 (empty -> .)

    estatutos                      shift and go to state 44
    asignar                        shift and go to state 45
    llamada_func                   shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    condicion                      shift and go to state 49
    escribe                        shift and go to state 50
    leer                           shift and go to state 51
    empty                          shift and go to state 52
    variable                       shift and go to state 53

state 40

    (25) dec_func -> FUNCION dec_func_return ID LPAREN . parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
    (30) parameter -> . type ID parameterCycle
    (16) type -> . ENTERO
    (17) type -> . DECIMAL
    (18) type -> . LETRA

    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    LETRA           shift and go to state 29

    parameter                      shift and go to state 60
    type                           shift and go to state 61

state 41

    (12) simple_var -> VARIABLE type ARROW ID . punto_simple_var simpleVarCycle SEMICOLON
    (15) punto_simple_var -> .

    COMMA           reduce using rule 15 (punto_simple_var -> .)
    SEMICOLON       reduce using rule 15 (punto_simple_var -> .)

    punto_simple_var               shift and go to state 62

state 42

    (19) array -> RENGLON type ARROW ID . LBRACKET CTEI RBRACKET arrayCycle SEMICOLON

    LBRACKET        shift and go to state 63


state 43

    (22) matrix -> TABLA type ARROW ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    LBRACKET        shift and go to state 64


state 44

    (8) inicio -> INICIO LPAREN RPAREN LBRACE estatutos . RBRACE SEMICOLON

    RBRACE          shift and go to state 65


state 45

    (33) estatutos -> asignar .

    RBRACE          reduce using rule 33 (estatutos -> asignar .)
    ID              reduce using rule 33 (estatutos -> asignar .)
    PORCADA         reduce using rule 33 (estatutos -> asignar .)
    MIENTRAS        reduce using rule 33 (estatutos -> asignar .)
    SI              reduce using rule 33 (estatutos -> asignar .)
    IMPRIMIR        reduce using rule 33 (estatutos -> asignar .)
    LEER            reduce using rule 33 (estatutos -> asignar .)
    REGRESAR        reduce using rule 33 (estatutos -> asignar .)


state 46

    (34) estatutos -> llamada_func .

    RBRACE          reduce using rule 34 (estatutos -> llamada_func .)
    ID              reduce using rule 34 (estatutos -> llamada_func .)
    PORCADA         reduce using rule 34 (estatutos -> llamada_func .)
    MIENTRAS        reduce using rule 34 (estatutos -> llamada_func .)
    SI              reduce using rule 34 (estatutos -> llamada_func .)
    IMPRIMIR        reduce using rule 34 (estatutos -> llamada_func .)
    LEER            reduce using rule 34 (estatutos -> llamada_func .)
    REGRESAR        reduce using rule 34 (estatutos -> llamada_func .)


state 47

    (35) estatutos -> ciclo_for .

    RBRACE          reduce using rule 35 (estatutos -> ciclo_for .)
    ID              reduce using rule 35 (estatutos -> ciclo_for .)
    PORCADA         reduce using rule 35 (estatutos -> ciclo_for .)
    MIENTRAS        reduce using rule 35 (estatutos -> ciclo_for .)
    SI              reduce using rule 35 (estatutos -> ciclo_for .)
    IMPRIMIR        reduce using rule 35 (estatutos -> ciclo_for .)
    LEER            reduce using rule 35 (estatutos -> ciclo_for .)
    REGRESAR        reduce using rule 35 (estatutos -> ciclo_for .)


state 48

    (36) estatutos -> ciclo_while .

    RBRACE          reduce using rule 36 (estatutos -> ciclo_while .)
    ID              reduce using rule 36 (estatutos -> ciclo_while .)
    PORCADA         reduce using rule 36 (estatutos -> ciclo_while .)
    MIENTRAS        reduce using rule 36 (estatutos -> ciclo_while .)
    SI              reduce using rule 36 (estatutos -> ciclo_while .)
    IMPRIMIR        reduce using rule 36 (estatutos -> ciclo_while .)
    LEER            reduce using rule 36 (estatutos -> ciclo_while .)
    REGRESAR        reduce using rule 36 (estatutos -> ciclo_while .)


state 49

    (37) estatutos -> condicion .

    RBRACE          reduce using rule 37 (estatutos -> condicion .)
    ID              reduce using rule 37 (estatutos -> condicion .)
    PORCADA         reduce using rule 37 (estatutos -> condicion .)
    MIENTRAS        reduce using rule 37 (estatutos -> condicion .)
    SI              reduce using rule 37 (estatutos -> condicion .)
    IMPRIMIR        reduce using rule 37 (estatutos -> condicion .)
    LEER            reduce using rule 37 (estatutos -> condicion .)
    REGRESAR        reduce using rule 37 (estatutos -> condicion .)


state 50

    (38) estatutos -> escribe .

    RBRACE          reduce using rule 38 (estatutos -> escribe .)
    ID              reduce using rule 38 (estatutos -> escribe .)
    PORCADA         reduce using rule 38 (estatutos -> escribe .)
    MIENTRAS        reduce using rule 38 (estatutos -> escribe .)
    SI              reduce using rule 38 (estatutos -> escribe .)
    IMPRIMIR        reduce using rule 38 (estatutos -> escribe .)
    LEER            reduce using rule 38 (estatutos -> escribe .)
    REGRESAR        reduce using rule 38 (estatutos -> escribe .)


state 51

    (39) estatutos -> leer .

    RBRACE          reduce using rule 39 (estatutos -> leer .)
    ID              reduce using rule 39 (estatutos -> leer .)
    PORCADA         reduce using rule 39 (estatutos -> leer .)
    MIENTRAS        reduce using rule 39 (estatutos -> leer .)
    SI              reduce using rule 39 (estatutos -> leer .)
    IMPRIMIR        reduce using rule 39 (estatutos -> leer .)
    LEER            reduce using rule 39 (estatutos -> leer .)
    REGRESAR        reduce using rule 39 (estatutos -> leer .)


state 52

    (40) estatutos -> empty .

    RBRACE          reduce using rule 40 (estatutos -> empty .)
    ID              reduce using rule 40 (estatutos -> empty .)
    PORCADA         reduce using rule 40 (estatutos -> empty .)
    MIENTRAS        reduce using rule 40 (estatutos -> empty .)
    SI              reduce using rule 40 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 40 (estatutos -> empty .)
    LEER            reduce using rule 40 (estatutos -> empty .)
    REGRESAR        reduce using rule 40 (estatutos -> empty .)


state 53

    (41) asignar -> variable . ASSIGN exp SEMICOLON

    ASSIGN          shift and go to state 66


state 54

    (76) llamada_func -> ID . LPAREN llamadaCYCLE RPAREN SEMICOLON
    (42) variable -> ID . variable_aux
    (43) variable_aux -> . LBRACKET exp RBRACKET
    (44) variable_aux -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (45) variable_aux -> . empty
    (86) empty -> .

    LPAREN          shift and go to state 67
    LBRACKET        shift and go to state 69
    ASSIGN          reduce using rule 86 (empty -> .)

    variable_aux                   shift and go to state 68
    empty                          shift and go to state 70

state 55

    (50) ciclo_for -> PORCADA . exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (58) exp -> . term expT
    (62) term -> . factor termT
    (66) factor -> . factor_constante
    (67) factor -> . factor_variable
    (68) factor -> . factor_expresion
    (69) factor_constante -> . CTEI
    (70) factor_constante -> . CTEF
    (71) factor_variable -> . ID
    (72) factor_variable -> . ID LBRACKET exp RBRACKET
    (73) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> . ID llamada_func
    (75) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 79
    LPAREN          shift and go to state 80

    exp                            shift and go to state 71
    term                           shift and go to state 72
    factor                         shift and go to state 73
    factor_constante               shift and go to state 74
    factor_variable                shift and go to state 75
    factor_expresion               shift and go to state 76

state 56

    (47) ciclo_while -> MIENTRAS . LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON

    LPAREN          shift and go to state 81


state 57

    (53) condicion -> SI . LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON

    LPAREN          shift and go to state 82


state 58

    (81) escribe -> IMPRIMIR . LPAREN escribe_aux RPAREN SEMICOLON

    LPAREN          shift and go to state 83


state 59

    (46) leer -> LEER . variable SEMICOLON
    (42) variable -> . ID variable_aux

    ID              shift and go to state 85

    variable                       shift and go to state 84

state 60

    (25) dec_func -> FUNCION dec_func_return ID LPAREN parameter . RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON

    RPAREN          shift and go to state 86


state 61

    (30) parameter -> type . ID parameterCycle

    ID              shift and go to state 87


state 62

    (12) simple_var -> VARIABLE type ARROW ID punto_simple_var . simpleVarCycle SEMICOLON
    (13) simpleVarCycle -> . COMMA ID punto_simple_var simpleVarCycle
    (14) simpleVarCycle -> . empty
    (86) empty -> .

    COMMA           shift and go to state 89
    SEMICOLON       reduce using rule 86 (empty -> .)

    simpleVarCycle                 shift and go to state 88
    empty                          shift and go to state 90

state 63

    (19) array -> RENGLON type ARROW ID LBRACKET . CTEI RBRACKET arrayCycle SEMICOLON

    CTEI            shift and go to state 91


state 64

    (22) matrix -> TABLA type ARROW ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    CTEI            shift and go to state 92


state 65

    (8) inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 93


state 66

    (41) asignar -> variable ASSIGN . exp SEMICOLON
    (58) exp -> . term expT
    (62) term -> . factor termT
    (66) factor -> . factor_constante
    (67) factor -> . factor_variable
    (68) factor -> . factor_expresion
    (69) factor_constante -> . CTEI
    (70) factor_constante -> . CTEF
    (71) factor_variable -> . ID
    (72) factor_variable -> . ID LBRACKET exp RBRACKET
    (73) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> . ID llamada_func
    (75) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 79
    LPAREN          shift and go to state 80

    exp                            shift and go to state 94
    term                           shift and go to state 72
    factor                         shift and go to state 73
    factor_constante               shift and go to state 74
    factor_variable                shift and go to state 75
    factor_expresion               shift and go to state 76

state 67

    (76) llamada_func -> ID LPAREN . llamadaCYCLE RPAREN SEMICOLON
    (77) llamadaCYCLE -> . exp llamadaCYCLE_aux
    (78) llamadaCYCLE -> . empty
    (58) exp -> . term expT
    (86) empty -> .
    (62) term -> . factor termT
    (66) factor -> . factor_constante
    (67) factor -> . factor_variable
    (68) factor -> . factor_expresion
    (69) factor_constante -> . CTEI
    (70) factor_constante -> . CTEF
    (71) factor_variable -> . ID
    (72) factor_variable -> . ID LBRACKET exp RBRACKET
    (73) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> . ID llamada_func
    (75) factor_expresion -> . LPAREN exp RPAREN

    RPAREN          reduce using rule 86 (empty -> .)
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 79
    LPAREN          shift and go to state 80

    llamadaCYCLE                   shift and go to state 95
    exp                            shift and go to state 96
    empty                          shift and go to state 97
    term                           shift and go to state 72
    factor                         shift and go to state 73
    factor_constante               shift and go to state 74
    factor_variable                shift and go to state 75
    factor_expresion               shift and go to state 76

state 68

    (42) variable -> ID variable_aux .

    ASSIGN          reduce using rule 42 (variable -> ID variable_aux .)
    SEMICOLON       reduce using rule 42 (variable -> ID variable_aux .)


state 69

    (43) variable_aux -> LBRACKET . exp RBRACKET
    (44) variable_aux -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (58) exp -> . term expT
    (62) term -> . factor termT
    (66) factor -> . factor_constante
    (67) factor -> . factor_variable
    (68) factor -> . factor_expresion
    (69) factor_constante -> . CTEI
    (70) factor_constante -> . CTEF
    (71) factor_variable -> . ID
    (72) factor_variable -> . ID LBRACKET exp RBRACKET
    (73) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> . ID llamada_func
    (75) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 79
    LPAREN          shift and go to state 80

    exp                            shift and go to state 98
    term                           shift and go to state 72
    factor                         shift and go to state 73
    factor_constante               shift and go to state 74
    factor_variable                shift and go to state 75
    factor_expresion               shift and go to state 76

state 70

    (45) variable_aux -> empty .

    ASSIGN          reduce using rule 45 (variable_aux -> empty .)
    SEMICOLON       reduce using rule 45 (variable_aux -> empty .)


state 71

    (50) ciclo_for -> PORCADA exp . EN exp LBRACE estatutos forCycle RBRACE SEMICOLON

    EN              shift and go to state 99


state 72

    (58) exp -> term . expT
    (59) expT -> . PLUS exp
    (60) expT -> . MINUS exp
    (61) expT -> . empty
    (86) empty -> .

    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    EN              reduce using rule 86 (empty -> .)
    SEMICOLON       reduce using rule 86 (empty -> .)
    COMMA           reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    RBRACKET        reduce using rule 86 (empty -> .)
    LBRACE          reduce using rule 86 (empty -> .)

    expT                           shift and go to state 100
    empty                          shift and go to state 103

state 73

    (62) term -> factor . termT
    (63) termT -> . TIMES term
    (64) termT -> . DIVIDE term
    (65) termT -> . empty
    (86) empty -> .

    TIMES           shift and go to state 105
    DIVIDE          shift and go to state 106
    PLUS            reduce using rule 86 (empty -> .)
    MINUS           reduce using rule 86 (empty -> .)
    EN              reduce using rule 86 (empty -> .)
    SEMICOLON       reduce using rule 86 (empty -> .)
    COMMA           reduce using rule 86 (empty -> .)
    RPAREN          reduce using rule 86 (empty -> .)
    RBRACKET        reduce using rule 86 (empty -> .)
    LBRACE          reduce using rule 86 (empty -> .)

    termT                          shift and go to state 104
    empty                          shift and go to state 107

state 74

    (66) factor -> factor_constante .

    TIMES           reduce using rule 66 (factor -> factor_constante .)
    DIVIDE          reduce using rule 66 (factor -> factor_constante .)
    PLUS            reduce using rule 66 (factor -> factor_constante .)
    MINUS           reduce using rule 66 (factor -> factor_constante .)
    EN              reduce using rule 66 (factor -> factor_constante .)
    SEMICOLON       reduce using rule 66 (factor -> factor_constante .)
    COMMA           reduce using rule 66 (factor -> factor_constante .)
    RPAREN          reduce using rule 66 (factor -> factor_constante .)
    RBRACKET        reduce using rule 66 (factor -> factor_constante .)
    LBRACE          reduce using rule 66 (factor -> factor_constante .)


state 75

    (67) factor -> factor_variable .

    TIMES           reduce using rule 67 (factor -> factor_variable .)
    DIVIDE          reduce using rule 67 (factor -> factor_variable .)
    PLUS            reduce using rule 67 (factor -> factor_variable .)
    MINUS           reduce using rule 67 (factor -> factor_variable .)
    EN              reduce using rule 67 (factor -> factor_variable .)
    SEMICOLON       reduce using rule 67 (factor -> factor_variable .)
    COMMA           reduce using rule 67 (factor -> factor_variable .)
    RPAREN          reduce using rule 67 (factor -> factor_variable .)
    RBRACKET        reduce using rule 67 (factor -> factor_variable .)
    LBRACE          reduce using rule 67 (factor -> factor_variable .)


state 76

    (68) factor -> factor_expresion .

    TIMES           reduce using rule 68 (factor -> factor_expresion .)
    DIVIDE          reduce using rule 68 (factor -> factor_expresion .)
    PLUS            reduce using rule 68 (factor -> factor_expresion .)
    MINUS           reduce using rule 68 (factor -> factor_expresion .)
    EN              reduce using rule 68 (factor -> factor_expresion .)
    SEMICOLON       reduce using rule 68 (factor -> factor_expresion .)
    COMMA           reduce using rule 68 (factor -> factor_expresion .)
    RPAREN          reduce using rule 68 (factor -> factor_expresion .)
    RBRACKET        reduce using rule 68 (factor -> factor_expresion .)
    LBRACE          reduce using rule 68 (factor -> factor_expresion .)


state 77

    (69) factor_constante -> CTEI .

    TIMES           reduce using rule 69 (factor_constante -> CTEI .)
    DIVIDE          reduce using rule 69 (factor_constante -> CTEI .)
    PLUS            reduce using rule 69 (factor_constante -> CTEI .)
    MINUS           reduce using rule 69 (factor_constante -> CTEI .)
    EN              reduce using rule 69 (factor_constante -> CTEI .)
    SEMICOLON       reduce using rule 69 (factor_constante -> CTEI .)
    COMMA           reduce using rule 69 (factor_constante -> CTEI .)
    RPAREN          reduce using rule 69 (factor_constante -> CTEI .)
    RBRACKET        reduce using rule 69 (factor_constante -> CTEI .)
    LBRACE          reduce using rule 69 (factor_constante -> CTEI .)


state 78

    (70) factor_constante -> CTEF .

    TIMES           reduce using rule 70 (factor_constante -> CTEF .)
    DIVIDE          reduce using rule 70 (factor_constante -> CTEF .)
    PLUS            reduce using rule 70 (factor_constante -> CTEF .)
    MINUS           reduce using rule 70 (factor_constante -> CTEF .)
    EN              reduce using rule 70 (factor_constante -> CTEF .)
    SEMICOLON       reduce using rule 70 (factor_constante -> CTEF .)
    COMMA           reduce using rule 70 (factor_constante -> CTEF .)
    RPAREN          reduce using rule 70 (factor_constante -> CTEF .)
    RBRACKET        reduce using rule 70 (factor_constante -> CTEF .)
    LBRACE          reduce using rule 70 (factor_constante -> CTEF .)


state 79

    (71) factor_variable -> ID .
    (72) factor_variable -> ID . LBRACKET exp RBRACKET
    (73) factor_variable -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> ID . llamada_func
    (76) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON

    TIMES           reduce using rule 71 (factor_variable -> ID .)
    DIVIDE          reduce using rule 71 (factor_variable -> ID .)
    PLUS            reduce using rule 71 (factor_variable -> ID .)
    MINUS           reduce using rule 71 (factor_variable -> ID .)
    EN              reduce using rule 71 (factor_variable -> ID .)
    SEMICOLON       reduce using rule 71 (factor_variable -> ID .)
    COMMA           reduce using rule 71 (factor_variable -> ID .)
    RPAREN          reduce using rule 71 (factor_variable -> ID .)
    RBRACKET        reduce using rule 71 (factor_variable -> ID .)
    LBRACE          reduce using rule 71 (factor_variable -> ID .)
    LBRACKET        shift and go to state 109
    ID              shift and go to state 108

    llamada_func                   shift and go to state 110

state 80

    (75) factor_expresion -> LPAREN . exp RPAREN
    (58) exp -> . term expT
    (62) term -> . factor termT
    (66) factor -> . factor_constante
    (67) factor -> . factor_variable
    (68) factor -> . factor_expresion
    (69) factor_constante -> . CTEI
    (70) factor_constante -> . CTEF
    (71) factor_variable -> . ID
    (72) factor_variable -> . ID LBRACKET exp RBRACKET
    (73) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> . ID llamada_func
    (75) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 79
    LPAREN          shift and go to state 80

    exp                            shift and go to state 111
    term                           shift and go to state 72
    factor                         shift and go to state 73
    factor_constante               shift and go to state 74
    factor_variable                shift and go to state 75
    factor_expresion               shift and go to state 76

state 81

    (47) ciclo_while -> MIENTRAS LPAREN . exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (58) exp -> . term expT
    (62) term -> . factor termT
    (66) factor -> . factor_constante
    (67) factor -> . factor_variable
    (68) factor -> . factor_expresion
    (69) factor_constante -> . CTEI
    (70) factor_constante -> . CTEF
    (71) factor_variable -> . ID
    (72) factor_variable -> . ID LBRACKET exp RBRACKET
    (73) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> . ID llamada_func
    (75) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 79
    LPAREN          shift and go to state 80

    exp                            shift and go to state 112
    term                           shift and go to state 72
    factor                         shift and go to state 73
    factor_constante               shift and go to state 74
    factor_variable                shift and go to state 75
    factor_expresion               shift and go to state 76

state 82

    (53) condicion -> SI LPAREN . exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (58) exp -> . term expT
    (62) term -> . factor termT
    (66) factor -> . factor_constante
    (67) factor -> . factor_variable
    (68) factor -> . factor_expresion
    (69) factor_constante -> . CTEI
    (70) factor_constante -> . CTEF
    (71) factor_variable -> . ID
    (72) factor_variable -> . ID LBRACKET exp RBRACKET
    (73) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> . ID llamada_func
    (75) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 79
    LPAREN          shift and go to state 80

    exp                            shift and go to state 113
    term                           shift and go to state 72
    factor                         shift and go to state 73
    factor_constante               shift and go to state 74
    factor_variable                shift and go to state 75
    factor_expresion               shift and go to state 76

state 83

    (81) escribe -> IMPRIMIR LPAREN . escribe_aux RPAREN SEMICOLON
    (82) escribe_aux -> . exp escribeCycle
    (83) escribe_aux -> . CTESTRING escribeCycle
    (58) exp -> . term expT
    (62) term -> . factor termT
    (66) factor -> . factor_constante
    (67) factor -> . factor_variable
    (68) factor -> . factor_expresion
    (69) factor_constante -> . CTEI
    (70) factor_constante -> . CTEF
    (71) factor_variable -> . ID
    (72) factor_variable -> . ID LBRACKET exp RBRACKET
    (73) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> . ID llamada_func
    (75) factor_expresion -> . LPAREN exp RPAREN

    CTESTRING       shift and go to state 116
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 79
    LPAREN          shift and go to state 80

    escribe_aux                    shift and go to state 114
    exp                            shift and go to state 115
    term                           shift and go to state 72
    factor                         shift and go to state 73
    factor_constante               shift and go to state 74
    factor_variable                shift and go to state 75
    factor_expresion               shift and go to state 76

state 84

    (46) leer -> LEER variable . SEMICOLON

    SEMICOLON       shift and go to state 117


state 85

    (42) variable -> ID . variable_aux
    (43) variable_aux -> . LBRACKET exp RBRACKET
    (44) variable_aux -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (45) variable_aux -> . empty
    (86) empty -> .

    LBRACKET        shift and go to state 69
    SEMICOLON       reduce using rule 86 (empty -> .)

    variable_aux                   shift and go to state 68
    empty                          shift and go to state 70

state 86

    (25) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN . LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON

    LBRACE          shift and go to state 118


state 87

    (30) parameter -> type ID . parameterCycle
    (31) parameterCycle -> . COMMA type ID parameterCycle
    (32) parameterCycle -> . empty
    (86) empty -> .

    COMMA           shift and go to state 120
    RPAREN          reduce using rule 86 (empty -> .)

    parameterCycle                 shift and go to state 119
    empty                          shift and go to state 121

state 88

    (12) simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle . SEMICOLON

    SEMICOLON       shift and go to state 122


state 89

    (13) simpleVarCycle -> COMMA . ID punto_simple_var simpleVarCycle

    ID              shift and go to state 123


state 90

    (14) simpleVarCycle -> empty .

    SEMICOLON       reduce using rule 14 (simpleVarCycle -> empty .)


state 91

    (19) array -> RENGLON type ARROW ID LBRACKET CTEI . RBRACKET arrayCycle SEMICOLON

    RBRACKET        shift and go to state 124


state 92

    (22) matrix -> TABLA type ARROW ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    RBRACKET        shift and go to state 125


state 93

    (8) inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON .

    $end            reduce using rule 8 (inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON .)


state 94

    (41) asignar -> variable ASSIGN exp . SEMICOLON

    SEMICOLON       shift and go to state 126


state 95

    (76) llamada_func -> ID LPAREN llamadaCYCLE . RPAREN SEMICOLON

    RPAREN          shift and go to state 127


state 96

    (77) llamadaCYCLE -> exp . llamadaCYCLE_aux
    (79) llamadaCYCLE_aux -> . COMMA exp llamadaCYCLE_aux
    (80) llamadaCYCLE_aux -> . empty
    (86) empty -> .

    COMMA           shift and go to state 129
    RPAREN          reduce using rule 86 (empty -> .)

    llamadaCYCLE_aux               shift and go to state 128
    empty                          shift and go to state 130

state 97

    (78) llamadaCYCLE -> empty .

    RPAREN          reduce using rule 78 (llamadaCYCLE -> empty .)


state 98

    (43) variable_aux -> LBRACKET exp . RBRACKET
    (44) variable_aux -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET

    RBRACKET        shift and go to state 131


state 99

    (50) ciclo_for -> PORCADA exp EN . exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (58) exp -> . term expT
    (62) term -> . factor termT
    (66) factor -> . factor_constante
    (67) factor -> . factor_variable
    (68) factor -> . factor_expresion
    (69) factor_constante -> . CTEI
    (70) factor_constante -> . CTEF
    (71) factor_variable -> . ID
    (72) factor_variable -> . ID LBRACKET exp RBRACKET
    (73) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> . ID llamada_func
    (75) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 79
    LPAREN          shift and go to state 80

    exp                            shift and go to state 132
    term                           shift and go to state 72
    factor                         shift and go to state 73
    factor_constante               shift and go to state 74
    factor_variable                shift and go to state 75
    factor_expresion               shift and go to state 76

state 100

    (58) exp -> term expT .

    EN              reduce using rule 58 (exp -> term expT .)
    SEMICOLON       reduce using rule 58 (exp -> term expT .)
    COMMA           reduce using rule 58 (exp -> term expT .)
    RPAREN          reduce using rule 58 (exp -> term expT .)
    RBRACKET        reduce using rule 58 (exp -> term expT .)
    LBRACE          reduce using rule 58 (exp -> term expT .)


state 101

    (59) expT -> PLUS . exp
    (58) exp -> . term expT
    (62) term -> . factor termT
    (66) factor -> . factor_constante
    (67) factor -> . factor_variable
    (68) factor -> . factor_expresion
    (69) factor_constante -> . CTEI
    (70) factor_constante -> . CTEF
    (71) factor_variable -> . ID
    (72) factor_variable -> . ID LBRACKET exp RBRACKET
    (73) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> . ID llamada_func
    (75) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 79
    LPAREN          shift and go to state 80

    exp                            shift and go to state 133
    term                           shift and go to state 72
    factor                         shift and go to state 73
    factor_constante               shift and go to state 74
    factor_variable                shift and go to state 75
    factor_expresion               shift and go to state 76

state 102

    (60) expT -> MINUS . exp
    (58) exp -> . term expT
    (62) term -> . factor termT
    (66) factor -> . factor_constante
    (67) factor -> . factor_variable
    (68) factor -> . factor_expresion
    (69) factor_constante -> . CTEI
    (70) factor_constante -> . CTEF
    (71) factor_variable -> . ID
    (72) factor_variable -> . ID LBRACKET exp RBRACKET
    (73) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> . ID llamada_func
    (75) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 79
    LPAREN          shift and go to state 80

    exp                            shift and go to state 134
    term                           shift and go to state 72
    factor                         shift and go to state 73
    factor_constante               shift and go to state 74
    factor_variable                shift and go to state 75
    factor_expresion               shift and go to state 76

state 103

    (61) expT -> empty .

    EN              reduce using rule 61 (expT -> empty .)
    SEMICOLON       reduce using rule 61 (expT -> empty .)
    COMMA           reduce using rule 61 (expT -> empty .)
    RPAREN          reduce using rule 61 (expT -> empty .)
    RBRACKET        reduce using rule 61 (expT -> empty .)
    LBRACE          reduce using rule 61 (expT -> empty .)


state 104

    (62) term -> factor termT .

    PLUS            reduce using rule 62 (term -> factor termT .)
    MINUS           reduce using rule 62 (term -> factor termT .)
    EN              reduce using rule 62 (term -> factor termT .)
    SEMICOLON       reduce using rule 62 (term -> factor termT .)
    COMMA           reduce using rule 62 (term -> factor termT .)
    RPAREN          reduce using rule 62 (term -> factor termT .)
    RBRACKET        reduce using rule 62 (term -> factor termT .)
    LBRACE          reduce using rule 62 (term -> factor termT .)


state 105

    (63) termT -> TIMES . term
    (62) term -> . factor termT
    (66) factor -> . factor_constante
    (67) factor -> . factor_variable
    (68) factor -> . factor_expresion
    (69) factor_constante -> . CTEI
    (70) factor_constante -> . CTEF
    (71) factor_variable -> . ID
    (72) factor_variable -> . ID LBRACKET exp RBRACKET
    (73) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> . ID llamada_func
    (75) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 79
    LPAREN          shift and go to state 80

    term                           shift and go to state 135
    factor                         shift and go to state 73
    factor_constante               shift and go to state 74
    factor_variable                shift and go to state 75
    factor_expresion               shift and go to state 76

state 106

    (64) termT -> DIVIDE . term
    (62) term -> . factor termT
    (66) factor -> . factor_constante
    (67) factor -> . factor_variable
    (68) factor -> . factor_expresion
    (69) factor_constante -> . CTEI
    (70) factor_constante -> . CTEF
    (71) factor_variable -> . ID
    (72) factor_variable -> . ID LBRACKET exp RBRACKET
    (73) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> . ID llamada_func
    (75) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 79
    LPAREN          shift and go to state 80

    term                           shift and go to state 136
    factor                         shift and go to state 73
    factor_constante               shift and go to state 74
    factor_variable                shift and go to state 75
    factor_expresion               shift and go to state 76

state 107

    (65) termT -> empty .

    PLUS            reduce using rule 65 (termT -> empty .)
    MINUS           reduce using rule 65 (termT -> empty .)
    EN              reduce using rule 65 (termT -> empty .)
    SEMICOLON       reduce using rule 65 (termT -> empty .)
    COMMA           reduce using rule 65 (termT -> empty .)
    RPAREN          reduce using rule 65 (termT -> empty .)
    RBRACKET        reduce using rule 65 (termT -> empty .)
    LBRACE          reduce using rule 65 (termT -> empty .)


state 108

    (76) llamada_func -> ID . LPAREN llamadaCYCLE RPAREN SEMICOLON

    LPAREN          shift and go to state 67


state 109

    (72) factor_variable -> ID LBRACKET . exp RBRACKET
    (73) factor_variable -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (58) exp -> . term expT
    (62) term -> . factor termT
    (66) factor -> . factor_constante
    (67) factor -> . factor_variable
    (68) factor -> . factor_expresion
    (69) factor_constante -> . CTEI
    (70) factor_constante -> . CTEF
    (71) factor_variable -> . ID
    (72) factor_variable -> . ID LBRACKET exp RBRACKET
    (73) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> . ID llamada_func
    (75) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 79
    LPAREN          shift and go to state 80

    exp                            shift and go to state 137
    term                           shift and go to state 72
    factor                         shift and go to state 73
    factor_constante               shift and go to state 74
    factor_variable                shift and go to state 75
    factor_expresion               shift and go to state 76

state 110

    (74) factor_variable -> ID llamada_func .

    TIMES           reduce using rule 74 (factor_variable -> ID llamada_func .)
    DIVIDE          reduce using rule 74 (factor_variable -> ID llamada_func .)
    PLUS            reduce using rule 74 (factor_variable -> ID llamada_func .)
    MINUS           reduce using rule 74 (factor_variable -> ID llamada_func .)
    EN              reduce using rule 74 (factor_variable -> ID llamada_func .)
    SEMICOLON       reduce using rule 74 (factor_variable -> ID llamada_func .)
    COMMA           reduce using rule 74 (factor_variable -> ID llamada_func .)
    RPAREN          reduce using rule 74 (factor_variable -> ID llamada_func .)
    RBRACKET        reduce using rule 74 (factor_variable -> ID llamada_func .)
    LBRACE          reduce using rule 74 (factor_variable -> ID llamada_func .)


state 111

    (75) factor_expresion -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 138


state 112

    (47) ciclo_while -> MIENTRAS LPAREN exp . RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON

    RPAREN          shift and go to state 139


state 113

    (53) condicion -> SI LPAREN exp . RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON

    RPAREN          shift and go to state 140


state 114

    (81) escribe -> IMPRIMIR LPAREN escribe_aux . RPAREN SEMICOLON

    RPAREN          shift and go to state 141


state 115

    (82) escribe_aux -> exp . escribeCycle
    (84) escribeCycle -> . COMMA escribe_aux
    (85) escribeCycle -> . empty
    (86) empty -> .

    COMMA           shift and go to state 143
    RPAREN          reduce using rule 86 (empty -> .)

    escribeCycle                   shift and go to state 142
    empty                          shift and go to state 144

state 116

    (83) escribe_aux -> CTESTRING . escribeCycle
    (84) escribeCycle -> . COMMA escribe_aux
    (85) escribeCycle -> . empty
    (86) empty -> .

    COMMA           shift and go to state 143
    RPAREN          reduce using rule 86 (empty -> .)

    escribeCycle                   shift and go to state 145
    empty                          shift and go to state 144

state 117

    (46) leer -> LEER variable SEMICOLON .

    RBRACE          reduce using rule 46 (leer -> LEER variable SEMICOLON .)
    ID              reduce using rule 46 (leer -> LEER variable SEMICOLON .)
    PORCADA         reduce using rule 46 (leer -> LEER variable SEMICOLON .)
    MIENTRAS        reduce using rule 46 (leer -> LEER variable SEMICOLON .)
    SI              reduce using rule 46 (leer -> LEER variable SEMICOLON .)
    IMPRIMIR        reduce using rule 46 (leer -> LEER variable SEMICOLON .)
    LEER            reduce using rule 46 (leer -> LEER variable SEMICOLON .)
    REGRESAR        reduce using rule 46 (leer -> LEER variable SEMICOLON .)


state 118

    (25) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE . dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
    (9) dec_var -> . simple_var
    (10) dec_var -> . array
    (11) dec_var -> . matrix
    (12) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (19) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON
    (22) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    VARIABLE        shift and go to state 16
    RENGLON         shift and go to state 17
    TABLA           shift and go to state 18

    dec_var                        shift and go to state 146
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 119

    (30) parameter -> type ID parameterCycle .

    RPAREN          reduce using rule 30 (parameter -> type ID parameterCycle .)


state 120

    (31) parameterCycle -> COMMA . type ID parameterCycle
    (16) type -> . ENTERO
    (17) type -> . DECIMAL
    (18) type -> . LETRA

    ENTERO          shift and go to state 27
    DECIMAL         shift and go to state 28
    LETRA           shift and go to state 29

    type                           shift and go to state 147

state 121

    (32) parameterCycle -> empty .

    RPAREN          reduce using rule 32 (parameterCycle -> empty .)


state 122

    (12) simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .

    VARIABLE        reduce using rule 12 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    RENGLON         reduce using rule 12 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    TABLA           reduce using rule 12 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    INICIO          reduce using rule 12 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    FUNCION         reduce using rule 12 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    ID              reduce using rule 12 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    PORCADA         reduce using rule 12 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    MIENTRAS        reduce using rule 12 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    SI              reduce using rule 12 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 12 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    LEER            reduce using rule 12 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    REGRESAR        reduce using rule 12 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)


state 123

    (13) simpleVarCycle -> COMMA ID . punto_simple_var simpleVarCycle
    (15) punto_simple_var -> .

    COMMA           reduce using rule 15 (punto_simple_var -> .)
    SEMICOLON       reduce using rule 15 (punto_simple_var -> .)

    punto_simple_var               shift and go to state 148

state 124

    (19) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET . arrayCycle SEMICOLON
    (20) arrayCycle -> . COMMA ID LBRACKET CTEI RBRACKET arrayCycle
    (21) arrayCycle -> . empty
    (86) empty -> .

    COMMA           shift and go to state 150
    SEMICOLON       reduce using rule 86 (empty -> .)

    arrayCycle                     shift and go to state 149
    empty                          shift and go to state 151

state 125

    (22) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    LBRACKET        shift and go to state 152


state 126

    (41) asignar -> variable ASSIGN exp SEMICOLON .

    RBRACE          reduce using rule 41 (asignar -> variable ASSIGN exp SEMICOLON .)
    ID              reduce using rule 41 (asignar -> variable ASSIGN exp SEMICOLON .)
    PORCADA         reduce using rule 41 (asignar -> variable ASSIGN exp SEMICOLON .)
    MIENTRAS        reduce using rule 41 (asignar -> variable ASSIGN exp SEMICOLON .)
    SI              reduce using rule 41 (asignar -> variable ASSIGN exp SEMICOLON .)
    IMPRIMIR        reduce using rule 41 (asignar -> variable ASSIGN exp SEMICOLON .)
    LEER            reduce using rule 41 (asignar -> variable ASSIGN exp SEMICOLON .)
    REGRESAR        reduce using rule 41 (asignar -> variable ASSIGN exp SEMICOLON .)


state 127

    (76) llamada_func -> ID LPAREN llamadaCYCLE RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 153


state 128

    (77) llamadaCYCLE -> exp llamadaCYCLE_aux .

    RPAREN          reduce using rule 77 (llamadaCYCLE -> exp llamadaCYCLE_aux .)


state 129

    (79) llamadaCYCLE_aux -> COMMA . exp llamadaCYCLE_aux
    (58) exp -> . term expT
    (62) term -> . factor termT
    (66) factor -> . factor_constante
    (67) factor -> . factor_variable
    (68) factor -> . factor_expresion
    (69) factor_constante -> . CTEI
    (70) factor_constante -> . CTEF
    (71) factor_variable -> . ID
    (72) factor_variable -> . ID LBRACKET exp RBRACKET
    (73) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> . ID llamada_func
    (75) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 79
    LPAREN          shift and go to state 80

    exp                            shift and go to state 154
    term                           shift and go to state 72
    factor                         shift and go to state 73
    factor_constante               shift and go to state 74
    factor_variable                shift and go to state 75
    factor_expresion               shift and go to state 76

state 130

    (80) llamadaCYCLE_aux -> empty .

    RPAREN          reduce using rule 80 (llamadaCYCLE_aux -> empty .)


state 131

    (43) variable_aux -> LBRACKET exp RBRACKET .
    (44) variable_aux -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    ASSIGN          reduce using rule 43 (variable_aux -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 43 (variable_aux -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 155


state 132

    (50) ciclo_for -> PORCADA exp EN exp . LBRACE estatutos forCycle RBRACE SEMICOLON

    LBRACE          shift and go to state 156


state 133

    (59) expT -> PLUS exp .

    EN              reduce using rule 59 (expT -> PLUS exp .)
    SEMICOLON       reduce using rule 59 (expT -> PLUS exp .)
    COMMA           reduce using rule 59 (expT -> PLUS exp .)
    RPAREN          reduce using rule 59 (expT -> PLUS exp .)
    RBRACKET        reduce using rule 59 (expT -> PLUS exp .)
    LBRACE          reduce using rule 59 (expT -> PLUS exp .)


state 134

    (60) expT -> MINUS exp .

    EN              reduce using rule 60 (expT -> MINUS exp .)
    SEMICOLON       reduce using rule 60 (expT -> MINUS exp .)
    COMMA           reduce using rule 60 (expT -> MINUS exp .)
    RPAREN          reduce using rule 60 (expT -> MINUS exp .)
    RBRACKET        reduce using rule 60 (expT -> MINUS exp .)
    LBRACE          reduce using rule 60 (expT -> MINUS exp .)


state 135

    (63) termT -> TIMES term .

    PLUS            reduce using rule 63 (termT -> TIMES term .)
    MINUS           reduce using rule 63 (termT -> TIMES term .)
    EN              reduce using rule 63 (termT -> TIMES term .)
    SEMICOLON       reduce using rule 63 (termT -> TIMES term .)
    COMMA           reduce using rule 63 (termT -> TIMES term .)
    RPAREN          reduce using rule 63 (termT -> TIMES term .)
    RBRACKET        reduce using rule 63 (termT -> TIMES term .)
    LBRACE          reduce using rule 63 (termT -> TIMES term .)


state 136

    (64) termT -> DIVIDE term .

    PLUS            reduce using rule 64 (termT -> DIVIDE term .)
    MINUS           reduce using rule 64 (termT -> DIVIDE term .)
    EN              reduce using rule 64 (termT -> DIVIDE term .)
    SEMICOLON       reduce using rule 64 (termT -> DIVIDE term .)
    COMMA           reduce using rule 64 (termT -> DIVIDE term .)
    RPAREN          reduce using rule 64 (termT -> DIVIDE term .)
    RBRACKET        reduce using rule 64 (termT -> DIVIDE term .)
    LBRACE          reduce using rule 64 (termT -> DIVIDE term .)


state 137

    (72) factor_variable -> ID LBRACKET exp . RBRACKET
    (73) factor_variable -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET

    RBRACKET        shift and go to state 157


state 138

    (75) factor_expresion -> LPAREN exp RPAREN .

    TIMES           reduce using rule 75 (factor_expresion -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 75 (factor_expresion -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 75 (factor_expresion -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 75 (factor_expresion -> LPAREN exp RPAREN .)
    EN              reduce using rule 75 (factor_expresion -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 75 (factor_expresion -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 75 (factor_expresion -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 75 (factor_expresion -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 75 (factor_expresion -> LPAREN exp RPAREN .)
    LBRACE          reduce using rule 75 (factor_expresion -> LPAREN exp RPAREN .)


state 139

    (47) ciclo_while -> MIENTRAS LPAREN exp RPAREN . LBRACE estatutos whileCycle RBRACE SEMICOLON

    LBRACE          shift and go to state 158


state 140

    (53) condicion -> SI LPAREN exp RPAREN . LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON

    LBRACE          shift and go to state 159


state 141

    (81) escribe -> IMPRIMIR LPAREN escribe_aux RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 160


state 142

    (82) escribe_aux -> exp escribeCycle .

    RPAREN          reduce using rule 82 (escribe_aux -> exp escribeCycle .)


state 143

    (84) escribeCycle -> COMMA . escribe_aux
    (82) escribe_aux -> . exp escribeCycle
    (83) escribe_aux -> . CTESTRING escribeCycle
    (58) exp -> . term expT
    (62) term -> . factor termT
    (66) factor -> . factor_constante
    (67) factor -> . factor_variable
    (68) factor -> . factor_expresion
    (69) factor_constante -> . CTEI
    (70) factor_constante -> . CTEF
    (71) factor_variable -> . ID
    (72) factor_variable -> . ID LBRACKET exp RBRACKET
    (73) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> . ID llamada_func
    (75) factor_expresion -> . LPAREN exp RPAREN

    CTESTRING       shift and go to state 116
    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 79
    LPAREN          shift and go to state 80

    escribe_aux                    shift and go to state 161
    exp                            shift and go to state 115
    term                           shift and go to state 72
    factor                         shift and go to state 73
    factor_constante               shift and go to state 74
    factor_variable                shift and go to state 75
    factor_expresion               shift and go to state 76

state 144

    (85) escribeCycle -> empty .

    RPAREN          reduce using rule 85 (escribeCycle -> empty .)


state 145

    (83) escribe_aux -> CTESTRING escribeCycle .

    RPAREN          reduce using rule 83 (escribe_aux -> CTESTRING escribeCycle .)


state 146

    (25) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var . estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
    (33) estatutos -> . asignar
    (34) estatutos -> . llamada_func
    (35) estatutos -> . ciclo_for
    (36) estatutos -> . ciclo_while
    (37) estatutos -> . condicion
    (38) estatutos -> . escribe
    (39) estatutos -> . leer
    (40) estatutos -> . empty
    (41) asignar -> . variable ASSIGN exp SEMICOLON
    (76) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (50) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (47) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (53) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (81) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (46) leer -> . LEER variable SEMICOLON
    (86) empty -> .
    (42) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 54
    PORCADA         shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57
    IMPRIMIR        shift and go to state 58
    LEER            shift and go to state 59
    REGRESAR        reduce using rule 86 (empty -> .)

  ! ID              [ reduce using rule 86 (empty -> .) ]
  ! PORCADA         [ reduce using rule 86 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 86 (empty -> .) ]
  ! SI              [ reduce using rule 86 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 86 (empty -> .) ]
  ! LEER            [ reduce using rule 86 (empty -> .) ]

    estatutos                      shift and go to state 162
    variable                       shift and go to state 53
    asignar                        shift and go to state 45
    llamada_func                   shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    condicion                      shift and go to state 49
    escribe                        shift and go to state 50
    leer                           shift and go to state 51
    empty                          shift and go to state 52

state 147

    (31) parameterCycle -> COMMA type . ID parameterCycle

    ID              shift and go to state 163


state 148

    (13) simpleVarCycle -> COMMA ID punto_simple_var . simpleVarCycle
    (13) simpleVarCycle -> . COMMA ID punto_simple_var simpleVarCycle
    (14) simpleVarCycle -> . empty
    (86) empty -> .

    COMMA           shift and go to state 89
    SEMICOLON       reduce using rule 86 (empty -> .)

    simpleVarCycle                 shift and go to state 164
    empty                          shift and go to state 90

state 149

    (19) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle . SEMICOLON

    SEMICOLON       shift and go to state 165


state 150

    (20) arrayCycle -> COMMA . ID LBRACKET CTEI RBRACKET arrayCycle

    ID              shift and go to state 166


state 151

    (21) arrayCycle -> empty .

    SEMICOLON       reduce using rule 21 (arrayCycle -> empty .)


state 152

    (22) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET matrixCycle SEMICOLON

    CTEI            shift and go to state 167


state 153

    (76) llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .

    RBRACE          reduce using rule 76 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    TIMES           reduce using rule 76 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 76 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    PLUS            reduce using rule 76 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    MINUS           reduce using rule 76 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    EN              reduce using rule 76 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 76 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    COMMA           reduce using rule 76 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    RPAREN          reduce using rule 76 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 76 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LBRACE          reduce using rule 76 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    ID              reduce using rule 76 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    PORCADA         reduce using rule 76 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 76 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    SI              reduce using rule 76 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 76 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LEER            reduce using rule 76 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    REGRESAR        reduce using rule 76 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)


state 154

    (79) llamadaCYCLE_aux -> COMMA exp . llamadaCYCLE_aux
    (79) llamadaCYCLE_aux -> . COMMA exp llamadaCYCLE_aux
    (80) llamadaCYCLE_aux -> . empty
    (86) empty -> .

    COMMA           shift and go to state 129
    RPAREN          reduce using rule 86 (empty -> .)

    llamadaCYCLE_aux               shift and go to state 168
    empty                          shift and go to state 130

state 155

    (44) variable_aux -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (58) exp -> . term expT
    (62) term -> . factor termT
    (66) factor -> . factor_constante
    (67) factor -> . factor_variable
    (68) factor -> . factor_expresion
    (69) factor_constante -> . CTEI
    (70) factor_constante -> . CTEF
    (71) factor_variable -> . ID
    (72) factor_variable -> . ID LBRACKET exp RBRACKET
    (73) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> . ID llamada_func
    (75) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 79
    LPAREN          shift and go to state 80

    exp                            shift and go to state 169
    term                           shift and go to state 72
    factor                         shift and go to state 73
    factor_constante               shift and go to state 74
    factor_variable                shift and go to state 75
    factor_expresion               shift and go to state 76

state 156

    (50) ciclo_for -> PORCADA exp EN exp LBRACE . estatutos forCycle RBRACE SEMICOLON
    (33) estatutos -> . asignar
    (34) estatutos -> . llamada_func
    (35) estatutos -> . ciclo_for
    (36) estatutos -> . ciclo_while
    (37) estatutos -> . condicion
    (38) estatutos -> . escribe
    (39) estatutos -> . leer
    (40) estatutos -> . empty
    (41) asignar -> . variable ASSIGN exp SEMICOLON
    (76) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (50) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (47) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (53) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (81) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (46) leer -> . LEER variable SEMICOLON
    (86) empty -> .
    (42) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 54
    PORCADA         shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57
    IMPRIMIR        shift and go to state 58
    LEER            shift and go to state 59
    RBRACE          reduce using rule 86 (empty -> .)

  ! ID              [ reduce using rule 86 (empty -> .) ]
  ! PORCADA         [ reduce using rule 86 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 86 (empty -> .) ]
  ! SI              [ reduce using rule 86 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 86 (empty -> .) ]
  ! LEER            [ reduce using rule 86 (empty -> .) ]

    estatutos                      shift and go to state 170
    asignar                        shift and go to state 45
    llamada_func                   shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    condicion                      shift and go to state 49
    escribe                        shift and go to state 50
    leer                           shift and go to state 51
    empty                          shift and go to state 52
    variable                       shift and go to state 53

state 157

    (72) factor_variable -> ID LBRACKET exp RBRACKET .
    (73) factor_variable -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    TIMES           reduce using rule 72 (factor_variable -> ID LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 72 (factor_variable -> ID LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 72 (factor_variable -> ID LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 72 (factor_variable -> ID LBRACKET exp RBRACKET .)
    EN              reduce using rule 72 (factor_variable -> ID LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 72 (factor_variable -> ID LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 72 (factor_variable -> ID LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 72 (factor_variable -> ID LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 72 (factor_variable -> ID LBRACKET exp RBRACKET .)
    LBRACE          reduce using rule 72 (factor_variable -> ID LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 171


state 158

    (47) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE . estatutos whileCycle RBRACE SEMICOLON
    (33) estatutos -> . asignar
    (34) estatutos -> . llamada_func
    (35) estatutos -> . ciclo_for
    (36) estatutos -> . ciclo_while
    (37) estatutos -> . condicion
    (38) estatutos -> . escribe
    (39) estatutos -> . leer
    (40) estatutos -> . empty
    (41) asignar -> . variable ASSIGN exp SEMICOLON
    (76) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (50) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (47) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (53) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (81) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (46) leer -> . LEER variable SEMICOLON
    (86) empty -> .
    (42) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 54
    PORCADA         shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57
    IMPRIMIR        shift and go to state 58
    LEER            shift and go to state 59
    RBRACE          reduce using rule 86 (empty -> .)

  ! ID              [ reduce using rule 86 (empty -> .) ]
  ! PORCADA         [ reduce using rule 86 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 86 (empty -> .) ]
  ! SI              [ reduce using rule 86 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 86 (empty -> .) ]
  ! LEER            [ reduce using rule 86 (empty -> .) ]

    estatutos                      shift and go to state 172
    asignar                        shift and go to state 45
    llamada_func                   shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    condicion                      shift and go to state 49
    escribe                        shift and go to state 50
    leer                           shift and go to state 51
    empty                          shift and go to state 52
    variable                       shift and go to state 53

state 159

    (53) condicion -> SI LPAREN exp RPAREN LBRACE . estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (33) estatutos -> . asignar
    (34) estatutos -> . llamada_func
    (35) estatutos -> . ciclo_for
    (36) estatutos -> . ciclo_while
    (37) estatutos -> . condicion
    (38) estatutos -> . escribe
    (39) estatutos -> . leer
    (40) estatutos -> . empty
    (41) asignar -> . variable ASSIGN exp SEMICOLON
    (76) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (50) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (47) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (53) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (81) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (46) leer -> . LEER variable SEMICOLON
    (86) empty -> .
    (42) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 54
    PORCADA         shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57
    IMPRIMIR        shift and go to state 58
    LEER            shift and go to state 59
    RBRACE          reduce using rule 86 (empty -> .)

  ! ID              [ reduce using rule 86 (empty -> .) ]
  ! PORCADA         [ reduce using rule 86 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 86 (empty -> .) ]
  ! SI              [ reduce using rule 86 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 86 (empty -> .) ]
  ! LEER            [ reduce using rule 86 (empty -> .) ]

    estatutos                      shift and go to state 173
    asignar                        shift and go to state 45
    llamada_func                   shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    condicion                      shift and go to state 49
    escribe                        shift and go to state 50
    leer                           shift and go to state 51
    empty                          shift and go to state 52
    variable                       shift and go to state 53

state 160

    (81) escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .

    RBRACE          reduce using rule 81 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    ID              reduce using rule 81 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    PORCADA         reduce using rule 81 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 81 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    SI              reduce using rule 81 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 81 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    LEER            reduce using rule 81 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    REGRESAR        reduce using rule 81 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)


state 161

    (84) escribeCycle -> COMMA escribe_aux .

    RPAREN          reduce using rule 84 (escribeCycle -> COMMA escribe_aux .)


state 162

    (25) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos . decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
    (28) decFuncCycle -> . estatutos decFuncCycle
    (29) decFuncCycle -> . empty
    (33) estatutos -> . asignar
    (34) estatutos -> . llamada_func
    (35) estatutos -> . ciclo_for
    (36) estatutos -> . ciclo_while
    (37) estatutos -> . condicion
    (38) estatutos -> . escribe
    (39) estatutos -> . leer
    (40) estatutos -> . empty
    (86) empty -> .
    (41) asignar -> . variable ASSIGN exp SEMICOLON
    (76) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (50) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (47) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (53) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (81) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (46) leer -> . LEER variable SEMICOLON
    (42) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    REGRESAR        reduce using rule 86 (empty -> .)
    ID              shift and go to state 54
    PORCADA         shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57
    IMPRIMIR        shift and go to state 58
    LEER            shift and go to state 59

  ! ID              [ reduce using rule 86 (empty -> .) ]
  ! PORCADA         [ reduce using rule 86 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 86 (empty -> .) ]
  ! SI              [ reduce using rule 86 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 86 (empty -> .) ]
  ! LEER            [ reduce using rule 86 (empty -> .) ]

    estatutos                      shift and go to state 174
    decFuncCycle                   shift and go to state 175
    variable                       shift and go to state 53
    empty                          shift and go to state 176
    asignar                        shift and go to state 45
    llamada_func                   shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    condicion                      shift and go to state 49
    escribe                        shift and go to state 50
    leer                           shift and go to state 51

state 163

    (31) parameterCycle -> COMMA type ID . parameterCycle
    (31) parameterCycle -> . COMMA type ID parameterCycle
    (32) parameterCycle -> . empty
    (86) empty -> .

    COMMA           shift and go to state 120
    RPAREN          reduce using rule 86 (empty -> .)

    parameterCycle                 shift and go to state 177
    empty                          shift and go to state 121

state 164

    (13) simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle .

    SEMICOLON       reduce using rule 13 (simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle .)


state 165

    (19) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .

    VARIABLE        reduce using rule 19 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    RENGLON         reduce using rule 19 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    TABLA           reduce using rule 19 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    INICIO          reduce using rule 19 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    FUNCION         reduce using rule 19 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    ID              reduce using rule 19 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    PORCADA         reduce using rule 19 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    MIENTRAS        reduce using rule 19 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    SI              reduce using rule 19 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 19 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    LEER            reduce using rule 19 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    REGRESAR        reduce using rule 19 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)


state 166

    (20) arrayCycle -> COMMA ID . LBRACKET CTEI RBRACKET arrayCycle

    LBRACKET        shift and go to state 178


state 167

    (22) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET matrixCycle SEMICOLON

    RBRACKET        shift and go to state 179


state 168

    (79) llamadaCYCLE_aux -> COMMA exp llamadaCYCLE_aux .

    RPAREN          reduce using rule 79 (llamadaCYCLE_aux -> COMMA exp llamadaCYCLE_aux .)


state 169

    (44) variable_aux -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 180


state 170

    (50) ciclo_for -> PORCADA exp EN exp LBRACE estatutos . forCycle RBRACE SEMICOLON
    (51) forCycle -> . estatutos forCycle
    (52) forCycle -> . empty
    (33) estatutos -> . asignar
    (34) estatutos -> . llamada_func
    (35) estatutos -> . ciclo_for
    (36) estatutos -> . ciclo_while
    (37) estatutos -> . condicion
    (38) estatutos -> . escribe
    (39) estatutos -> . leer
    (40) estatutos -> . empty
    (86) empty -> .
    (41) asignar -> . variable ASSIGN exp SEMICOLON
    (76) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (50) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (47) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (53) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (81) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (46) leer -> . LEER variable SEMICOLON
    (42) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 86 (empty -> .)
    ID              shift and go to state 54
    PORCADA         shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57
    IMPRIMIR        shift and go to state 58
    LEER            shift and go to state 59

  ! ID              [ reduce using rule 86 (empty -> .) ]
  ! PORCADA         [ reduce using rule 86 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 86 (empty -> .) ]
  ! SI              [ reduce using rule 86 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 86 (empty -> .) ]
  ! LEER            [ reduce using rule 86 (empty -> .) ]

    estatutos                      shift and go to state 181
    forCycle                       shift and go to state 182
    empty                          shift and go to state 183
    asignar                        shift and go to state 45
    llamada_func                   shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    condicion                      shift and go to state 49
    escribe                        shift and go to state 50
    leer                           shift and go to state 51
    variable                       shift and go to state 53

state 171

    (73) factor_variable -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (58) exp -> . term expT
    (62) term -> . factor termT
    (66) factor -> . factor_constante
    (67) factor -> . factor_variable
    (68) factor -> . factor_expresion
    (69) factor_constante -> . CTEI
    (70) factor_constante -> . CTEF
    (71) factor_variable -> . ID
    (72) factor_variable -> . ID LBRACKET exp RBRACKET
    (73) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (74) factor_variable -> . ID llamada_func
    (75) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 77
    CTEF            shift and go to state 78
    ID              shift and go to state 79
    LPAREN          shift and go to state 80

    exp                            shift and go to state 184
    term                           shift and go to state 72
    factor                         shift and go to state 73
    factor_constante               shift and go to state 74
    factor_variable                shift and go to state 75
    factor_expresion               shift and go to state 76

state 172

    (47) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos . whileCycle RBRACE SEMICOLON
    (48) whileCycle -> . estatutos whileCycle
    (49) whileCycle -> . empty
    (33) estatutos -> . asignar
    (34) estatutos -> . llamada_func
    (35) estatutos -> . ciclo_for
    (36) estatutos -> . ciclo_while
    (37) estatutos -> . condicion
    (38) estatutos -> . escribe
    (39) estatutos -> . leer
    (40) estatutos -> . empty
    (86) empty -> .
    (41) asignar -> . variable ASSIGN exp SEMICOLON
    (76) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (50) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (47) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (53) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (81) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (46) leer -> . LEER variable SEMICOLON
    (42) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 86 (empty -> .)
    ID              shift and go to state 54
    PORCADA         shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57
    IMPRIMIR        shift and go to state 58
    LEER            shift and go to state 59

  ! ID              [ reduce using rule 86 (empty -> .) ]
  ! PORCADA         [ reduce using rule 86 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 86 (empty -> .) ]
  ! SI              [ reduce using rule 86 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 86 (empty -> .) ]
  ! LEER            [ reduce using rule 86 (empty -> .) ]

    estatutos                      shift and go to state 185
    whileCycle                     shift and go to state 186
    empty                          shift and go to state 187
    asignar                        shift and go to state 45
    llamada_func                   shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    condicion                      shift and go to state 49
    escribe                        shift and go to state 50
    leer                           shift and go to state 51
    variable                       shift and go to state 53

state 173

    (53) condicion -> SI LPAREN exp RPAREN LBRACE estatutos . condicionCycle RBRACE sinoCondicion SEMICOLON
    (54) condicionCycle -> . estatutos condicionCycle
    (55) condicionCycle -> . empty
    (33) estatutos -> . asignar
    (34) estatutos -> . llamada_func
    (35) estatutos -> . ciclo_for
    (36) estatutos -> . ciclo_while
    (37) estatutos -> . condicion
    (38) estatutos -> . escribe
    (39) estatutos -> . leer
    (40) estatutos -> . empty
    (86) empty -> .
    (41) asignar -> . variable ASSIGN exp SEMICOLON
    (76) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (50) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (47) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (53) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (81) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (46) leer -> . LEER variable SEMICOLON
    (42) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 86 (empty -> .)
    ID              shift and go to state 54
    PORCADA         shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57
    IMPRIMIR        shift and go to state 58
    LEER            shift and go to state 59

  ! ID              [ reduce using rule 86 (empty -> .) ]
  ! PORCADA         [ reduce using rule 86 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 86 (empty -> .) ]
  ! SI              [ reduce using rule 86 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 86 (empty -> .) ]
  ! LEER            [ reduce using rule 86 (empty -> .) ]

    estatutos                      shift and go to state 188
    condicionCycle                 shift and go to state 189
    empty                          shift and go to state 190
    asignar                        shift and go to state 45
    llamada_func                   shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    condicion                      shift and go to state 49
    escribe                        shift and go to state 50
    leer                           shift and go to state 51
    variable                       shift and go to state 53

state 174

    (28) decFuncCycle -> estatutos . decFuncCycle
    (28) decFuncCycle -> . estatutos decFuncCycle
    (29) decFuncCycle -> . empty
    (33) estatutos -> . asignar
    (34) estatutos -> . llamada_func
    (35) estatutos -> . ciclo_for
    (36) estatutos -> . ciclo_while
    (37) estatutos -> . condicion
    (38) estatutos -> . escribe
    (39) estatutos -> . leer
    (40) estatutos -> . empty
    (86) empty -> .
    (41) asignar -> . variable ASSIGN exp SEMICOLON
    (76) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (50) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (47) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (53) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (81) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (46) leer -> . LEER variable SEMICOLON
    (42) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    REGRESAR        reduce using rule 86 (empty -> .)
    ID              shift and go to state 54
    PORCADA         shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57
    IMPRIMIR        shift and go to state 58
    LEER            shift and go to state 59

  ! ID              [ reduce using rule 86 (empty -> .) ]
  ! PORCADA         [ reduce using rule 86 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 86 (empty -> .) ]
  ! SI              [ reduce using rule 86 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 86 (empty -> .) ]
  ! LEER            [ reduce using rule 86 (empty -> .) ]

    estatutos                      shift and go to state 174
    decFuncCycle                   shift and go to state 191
    empty                          shift and go to state 176
    asignar                        shift and go to state 45
    llamada_func                   shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    condicion                      shift and go to state 49
    escribe                        shift and go to state 50
    leer                           shift and go to state 51
    variable                       shift and go to state 53

state 175

    (25) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle . REGRESAR variable SEMICOLON RBRACE SEMICOLON

    REGRESAR        shift and go to state 192


state 176

    (29) decFuncCycle -> empty .
    (40) estatutos -> empty .

  ! reduce/reduce conflict for REGRESAR resolved using rule 29 (decFuncCycle -> empty .)
    REGRESAR        reduce using rule 29 (decFuncCycle -> empty .)
    ID              reduce using rule 40 (estatutos -> empty .)
    PORCADA         reduce using rule 40 (estatutos -> empty .)
    MIENTRAS        reduce using rule 40 (estatutos -> empty .)
    SI              reduce using rule 40 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 40 (estatutos -> empty .)
    LEER            reduce using rule 40 (estatutos -> empty .)

  ! REGRESAR        [ reduce using rule 40 (estatutos -> empty .) ]


state 177

    (31) parameterCycle -> COMMA type ID parameterCycle .

    RPAREN          reduce using rule 31 (parameterCycle -> COMMA type ID parameterCycle .)


state 178

    (20) arrayCycle -> COMMA ID LBRACKET . CTEI RBRACKET arrayCycle

    CTEI            shift and go to state 193


state 179

    (22) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . matrixCycle SEMICOLON
    (23) matrixCycle -> . COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle
    (24) matrixCycle -> . empty
    (86) empty -> .

    COMMA           shift and go to state 195
    SEMICOLON       reduce using rule 86 (empty -> .)

    matrixCycle                    shift and go to state 194
    empty                          shift and go to state 196

state 180

    (44) variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    ASSIGN          reduce using rule 44 (variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 44 (variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 181

    (51) forCycle -> estatutos . forCycle
    (51) forCycle -> . estatutos forCycle
    (52) forCycle -> . empty
    (33) estatutos -> . asignar
    (34) estatutos -> . llamada_func
    (35) estatutos -> . ciclo_for
    (36) estatutos -> . ciclo_while
    (37) estatutos -> . condicion
    (38) estatutos -> . escribe
    (39) estatutos -> . leer
    (40) estatutos -> . empty
    (86) empty -> .
    (41) asignar -> . variable ASSIGN exp SEMICOLON
    (76) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (50) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (47) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (53) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (81) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (46) leer -> . LEER variable SEMICOLON
    (42) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 86 (empty -> .)
    ID              shift and go to state 54
    PORCADA         shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57
    IMPRIMIR        shift and go to state 58
    LEER            shift and go to state 59

  ! ID              [ reduce using rule 86 (empty -> .) ]
  ! PORCADA         [ reduce using rule 86 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 86 (empty -> .) ]
  ! SI              [ reduce using rule 86 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 86 (empty -> .) ]
  ! LEER            [ reduce using rule 86 (empty -> .) ]

    estatutos                      shift and go to state 181
    forCycle                       shift and go to state 197
    empty                          shift and go to state 183
    asignar                        shift and go to state 45
    llamada_func                   shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    condicion                      shift and go to state 49
    escribe                        shift and go to state 50
    leer                           shift and go to state 51
    variable                       shift and go to state 53

state 182

    (50) ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle . RBRACE SEMICOLON

    RBRACE          shift and go to state 198


state 183

    (52) forCycle -> empty .
    (40) estatutos -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 40 (estatutos -> empty .)
    ID              reduce using rule 40 (estatutos -> empty .)
    PORCADA         reduce using rule 40 (estatutos -> empty .)
    MIENTRAS        reduce using rule 40 (estatutos -> empty .)
    SI              reduce using rule 40 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 40 (estatutos -> empty .)
    LEER            reduce using rule 40 (estatutos -> empty .)
    RBRACE          reduce using rule 40 (estatutos -> empty .)

  ! RBRACE          [ reduce using rule 52 (forCycle -> empty .) ]


state 184

    (73) factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 199


state 185

    (48) whileCycle -> estatutos . whileCycle
    (48) whileCycle -> . estatutos whileCycle
    (49) whileCycle -> . empty
    (33) estatutos -> . asignar
    (34) estatutos -> . llamada_func
    (35) estatutos -> . ciclo_for
    (36) estatutos -> . ciclo_while
    (37) estatutos -> . condicion
    (38) estatutos -> . escribe
    (39) estatutos -> . leer
    (40) estatutos -> . empty
    (86) empty -> .
    (41) asignar -> . variable ASSIGN exp SEMICOLON
    (76) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (50) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (47) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (53) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (81) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (46) leer -> . LEER variable SEMICOLON
    (42) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 86 (empty -> .)
    ID              shift and go to state 54
    PORCADA         shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57
    IMPRIMIR        shift and go to state 58
    LEER            shift and go to state 59

  ! ID              [ reduce using rule 86 (empty -> .) ]
  ! PORCADA         [ reduce using rule 86 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 86 (empty -> .) ]
  ! SI              [ reduce using rule 86 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 86 (empty -> .) ]
  ! LEER            [ reduce using rule 86 (empty -> .) ]

    estatutos                      shift and go to state 185
    whileCycle                     shift and go to state 200
    empty                          shift and go to state 187
    asignar                        shift and go to state 45
    llamada_func                   shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    condicion                      shift and go to state 49
    escribe                        shift and go to state 50
    leer                           shift and go to state 51
    variable                       shift and go to state 53

state 186

    (47) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle . RBRACE SEMICOLON

    RBRACE          shift and go to state 201


state 187

    (49) whileCycle -> empty .
    (40) estatutos -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 40 (estatutos -> empty .)
    ID              reduce using rule 40 (estatutos -> empty .)
    PORCADA         reduce using rule 40 (estatutos -> empty .)
    MIENTRAS        reduce using rule 40 (estatutos -> empty .)
    SI              reduce using rule 40 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 40 (estatutos -> empty .)
    LEER            reduce using rule 40 (estatutos -> empty .)
    RBRACE          reduce using rule 40 (estatutos -> empty .)

  ! RBRACE          [ reduce using rule 49 (whileCycle -> empty .) ]


state 188

    (54) condicionCycle -> estatutos . condicionCycle
    (54) condicionCycle -> . estatutos condicionCycle
    (55) condicionCycle -> . empty
    (33) estatutos -> . asignar
    (34) estatutos -> . llamada_func
    (35) estatutos -> . ciclo_for
    (36) estatutos -> . ciclo_while
    (37) estatutos -> . condicion
    (38) estatutos -> . escribe
    (39) estatutos -> . leer
    (40) estatutos -> . empty
    (86) empty -> .
    (41) asignar -> . variable ASSIGN exp SEMICOLON
    (76) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (50) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (47) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (53) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (81) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (46) leer -> . LEER variable SEMICOLON
    (42) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 86 (empty -> .)
    ID              shift and go to state 54
    PORCADA         shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57
    IMPRIMIR        shift and go to state 58
    LEER            shift and go to state 59

  ! ID              [ reduce using rule 86 (empty -> .) ]
  ! PORCADA         [ reduce using rule 86 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 86 (empty -> .) ]
  ! SI              [ reduce using rule 86 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 86 (empty -> .) ]
  ! LEER            [ reduce using rule 86 (empty -> .) ]

    estatutos                      shift and go to state 188
    condicionCycle                 shift and go to state 202
    empty                          shift and go to state 190
    asignar                        shift and go to state 45
    llamada_func                   shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    condicion                      shift and go to state 49
    escribe                        shift and go to state 50
    leer                           shift and go to state 51
    variable                       shift and go to state 53

state 189

    (53) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle . RBRACE sinoCondicion SEMICOLON

    RBRACE          shift and go to state 203


state 190

    (55) condicionCycle -> empty .
    (40) estatutos -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 40 (estatutos -> empty .)
    ID              reduce using rule 40 (estatutos -> empty .)
    PORCADA         reduce using rule 40 (estatutos -> empty .)
    MIENTRAS        reduce using rule 40 (estatutos -> empty .)
    SI              reduce using rule 40 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 40 (estatutos -> empty .)
    LEER            reduce using rule 40 (estatutos -> empty .)
    RBRACE          reduce using rule 40 (estatutos -> empty .)

  ! RBRACE          [ reduce using rule 55 (condicionCycle -> empty .) ]


state 191

    (28) decFuncCycle -> estatutos decFuncCycle .

    REGRESAR        reduce using rule 28 (decFuncCycle -> estatutos decFuncCycle .)


state 192

    (25) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR . variable SEMICOLON RBRACE SEMICOLON
    (42) variable -> . ID variable_aux

    ID              shift and go to state 85

    variable                       shift and go to state 204

state 193

    (20) arrayCycle -> COMMA ID LBRACKET CTEI . RBRACKET arrayCycle

    RBRACKET        shift and go to state 205


state 194

    (22) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle . SEMICOLON

    SEMICOLON       shift and go to state 206


state 195

    (23) matrixCycle -> COMMA . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle

    ID              shift and go to state 207


state 196

    (24) matrixCycle -> empty .

    SEMICOLON       reduce using rule 24 (matrixCycle -> empty .)


state 197

    (51) forCycle -> estatutos forCycle .

    RBRACE          reduce using rule 51 (forCycle -> estatutos forCycle .)


state 198

    (50) ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 208


state 199

    (73) factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    TIMES           reduce using rule 73 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 73 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 73 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 73 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    EN              reduce using rule 73 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 73 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 73 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 73 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 73 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LBRACE          reduce using rule 73 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 200

    (48) whileCycle -> estatutos whileCycle .

    RBRACE          reduce using rule 48 (whileCycle -> estatutos whileCycle .)


state 201

    (47) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 209


state 202

    (54) condicionCycle -> estatutos condicionCycle .

    RBRACE          reduce using rule 54 (condicionCycle -> estatutos condicionCycle .)


state 203

    (53) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE . sinoCondicion SEMICOLON
    (56) sinoCondicion -> . SINO LBRACE estatutos condicionCycle RBRACE
    (57) sinoCondicion -> . empty
    (86) empty -> .

    SINO            shift and go to state 211
    SEMICOLON       reduce using rule 86 (empty -> .)

    sinoCondicion                  shift and go to state 210
    empty                          shift and go to state 212

state 204

    (25) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable . SEMICOLON RBRACE SEMICOLON

    SEMICOLON       shift and go to state 213


state 205

    (20) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET . arrayCycle
    (20) arrayCycle -> . COMMA ID LBRACKET CTEI RBRACKET arrayCycle
    (21) arrayCycle -> . empty
    (86) empty -> .

    COMMA           shift and go to state 150
    SEMICOLON       reduce using rule 86 (empty -> .)

    arrayCycle                     shift and go to state 214
    empty                          shift and go to state 151

state 206

    (22) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .

    VARIABLE        reduce using rule 22 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    RENGLON         reduce using rule 22 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    TABLA           reduce using rule 22 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    INICIO          reduce using rule 22 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    FUNCION         reduce using rule 22 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    ID              reduce using rule 22 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    PORCADA         reduce using rule 22 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    MIENTRAS        reduce using rule 22 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    SI              reduce using rule 22 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 22 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    LEER            reduce using rule 22 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    REGRESAR        reduce using rule 22 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)


state 207

    (23) matrixCycle -> COMMA ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle

    LBRACKET        shift and go to state 215


state 208

    (50) ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .

    RBRACE          reduce using rule 50 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    ID              reduce using rule 50 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    PORCADA         reduce using rule 50 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    MIENTRAS        reduce using rule 50 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    SI              reduce using rule 50 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    IMPRIMIR        reduce using rule 50 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    LEER            reduce using rule 50 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    REGRESAR        reduce using rule 50 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)


state 209

    (47) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .

    RBRACE          reduce using rule 47 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    ID              reduce using rule 47 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    PORCADA         reduce using rule 47 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    MIENTRAS        reduce using rule 47 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    SI              reduce using rule 47 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    IMPRIMIR        reduce using rule 47 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    LEER            reduce using rule 47 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    REGRESAR        reduce using rule 47 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)


state 210

    (53) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion . SEMICOLON

    SEMICOLON       shift and go to state 216


state 211

    (56) sinoCondicion -> SINO . LBRACE estatutos condicionCycle RBRACE

    LBRACE          shift and go to state 217


state 212

    (57) sinoCondicion -> empty .

    SEMICOLON       reduce using rule 57 (sinoCondicion -> empty .)


state 213

    (25) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON . RBRACE SEMICOLON

    RBRACE          shift and go to state 218


state 214

    (20) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET arrayCycle .

    SEMICOLON       reduce using rule 20 (arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET arrayCycle .)


state 215

    (23) matrixCycle -> COMMA ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle

    CTEI            shift and go to state 219


state 216

    (53) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .

    RBRACE          reduce using rule 53 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    ID              reduce using rule 53 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    PORCADA         reduce using rule 53 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    MIENTRAS        reduce using rule 53 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    SI              reduce using rule 53 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    IMPRIMIR        reduce using rule 53 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    LEER            reduce using rule 53 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    REGRESAR        reduce using rule 53 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)


state 217

    (56) sinoCondicion -> SINO LBRACE . estatutos condicionCycle RBRACE
    (33) estatutos -> . asignar
    (34) estatutos -> . llamada_func
    (35) estatutos -> . ciclo_for
    (36) estatutos -> . ciclo_while
    (37) estatutos -> . condicion
    (38) estatutos -> . escribe
    (39) estatutos -> . leer
    (40) estatutos -> . empty
    (41) asignar -> . variable ASSIGN exp SEMICOLON
    (76) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (50) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (47) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (53) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (81) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (46) leer -> . LEER variable SEMICOLON
    (86) empty -> .
    (42) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 54
    PORCADA         shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57
    IMPRIMIR        shift and go to state 58
    LEER            shift and go to state 59
    RBRACE          reduce using rule 86 (empty -> .)

  ! ID              [ reduce using rule 86 (empty -> .) ]
  ! PORCADA         [ reduce using rule 86 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 86 (empty -> .) ]
  ! SI              [ reduce using rule 86 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 86 (empty -> .) ]
  ! LEER            [ reduce using rule 86 (empty -> .) ]

    estatutos                      shift and go to state 220
    asignar                        shift and go to state 45
    llamada_func                   shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    condicion                      shift and go to state 49
    escribe                        shift and go to state 50
    leer                           shift and go to state 51
    empty                          shift and go to state 52
    variable                       shift and go to state 53

state 218

    (25) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 221


state 219

    (23) matrixCycle -> COMMA ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET matrixCycle

    RBRACKET        shift and go to state 222


state 220

    (56) sinoCondicion -> SINO LBRACE estatutos . condicionCycle RBRACE
    (54) condicionCycle -> . estatutos condicionCycle
    (55) condicionCycle -> . empty
    (33) estatutos -> . asignar
    (34) estatutos -> . llamada_func
    (35) estatutos -> . ciclo_for
    (36) estatutos -> . ciclo_while
    (37) estatutos -> . condicion
    (38) estatutos -> . escribe
    (39) estatutos -> . leer
    (40) estatutos -> . empty
    (86) empty -> .
    (41) asignar -> . variable ASSIGN exp SEMICOLON
    (76) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (50) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (47) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (53) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (81) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (46) leer -> . LEER variable SEMICOLON
    (42) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 86 (empty -> .)
    ID              shift and go to state 54
    PORCADA         shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57
    IMPRIMIR        shift and go to state 58
    LEER            shift and go to state 59

  ! ID              [ reduce using rule 86 (empty -> .) ]
  ! PORCADA         [ reduce using rule 86 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 86 (empty -> .) ]
  ! SI              [ reduce using rule 86 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 86 (empty -> .) ]
  ! LEER            [ reduce using rule 86 (empty -> .) ]

    estatutos                      shift and go to state 188
    condicionCycle                 shift and go to state 223
    empty                          shift and go to state 190
    asignar                        shift and go to state 45
    llamada_func                   shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    condicion                      shift and go to state 49
    escribe                        shift and go to state 50
    leer                           shift and go to state 51
    variable                       shift and go to state 53

state 221

    (25) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON .

    INICIO          reduce using rule 25 (dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON .)


state 222

    (23) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET matrixCycle

    LBRACKET        shift and go to state 224


state 223

    (56) sinoCondicion -> SINO LBRACE estatutos condicionCycle . RBRACE

    RBRACE          shift and go to state 225


state 224

    (23) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET matrixCycle

    CTEI            shift and go to state 226


state 225

    (56) sinoCondicion -> SINO LBRACE estatutos condicionCycle RBRACE .

    SEMICOLON       reduce using rule 56 (sinoCondicion -> SINO LBRACE estatutos condicionCycle RBRACE .)


state 226

    (23) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET matrixCycle

    RBRACKET        shift and go to state 227


state 227

    (23) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . matrixCycle
    (23) matrixCycle -> . COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle
    (24) matrixCycle -> . empty
    (86) empty -> .

    COMMA           shift and go to state 195
    SEMICOLON       reduce using rule 86 (empty -> .)

    matrixCycle                    shift and go to state 228
    empty                          shift and go to state 196

state 228

    (23) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle .

    SEMICOLON       reduce using rule 23 (matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INICIO in state 5 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 5 resolved as shift
WARNING: shift/reduce conflict for ID in state 146 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 146 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 146 resolved as shift
WARNING: shift/reduce conflict for SI in state 146 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 146 resolved as shift
WARNING: shift/reduce conflict for LEER in state 146 resolved as shift
WARNING: shift/reduce conflict for ID in state 156 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 156 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 156 resolved as shift
WARNING: shift/reduce conflict for SI in state 156 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 156 resolved as shift
WARNING: shift/reduce conflict for LEER in state 156 resolved as shift
WARNING: shift/reduce conflict for ID in state 158 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 158 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 158 resolved as shift
WARNING: shift/reduce conflict for SI in state 158 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 158 resolved as shift
WARNING: shift/reduce conflict for LEER in state 158 resolved as shift
WARNING: shift/reduce conflict for ID in state 159 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 159 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 159 resolved as shift
WARNING: shift/reduce conflict for SI in state 159 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 159 resolved as shift
WARNING: shift/reduce conflict for LEER in state 159 resolved as shift
WARNING: shift/reduce conflict for ID in state 162 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 162 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 162 resolved as shift
WARNING: shift/reduce conflict for SI in state 162 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 162 resolved as shift
WARNING: shift/reduce conflict for LEER in state 162 resolved as shift
WARNING: shift/reduce conflict for ID in state 170 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 170 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 170 resolved as shift
WARNING: shift/reduce conflict for SI in state 170 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 170 resolved as shift
WARNING: shift/reduce conflict for LEER in state 170 resolved as shift
WARNING: shift/reduce conflict for ID in state 172 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 172 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 172 resolved as shift
WARNING: shift/reduce conflict for SI in state 172 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 172 resolved as shift
WARNING: shift/reduce conflict for LEER in state 172 resolved as shift
WARNING: shift/reduce conflict for ID in state 173 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 173 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 173 resolved as shift
WARNING: shift/reduce conflict for SI in state 173 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 173 resolved as shift
WARNING: shift/reduce conflict for LEER in state 173 resolved as shift
WARNING: shift/reduce conflict for ID in state 174 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 174 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 174 resolved as shift
WARNING: shift/reduce conflict for SI in state 174 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 174 resolved as shift
WARNING: shift/reduce conflict for LEER in state 174 resolved as shift
WARNING: shift/reduce conflict for ID in state 181 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 181 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 181 resolved as shift
WARNING: shift/reduce conflict for SI in state 181 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 181 resolved as shift
WARNING: shift/reduce conflict for LEER in state 181 resolved as shift
WARNING: shift/reduce conflict for ID in state 185 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 185 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 185 resolved as shift
WARNING: shift/reduce conflict for SI in state 185 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 185 resolved as shift
WARNING: shift/reduce conflict for LEER in state 185 resolved as shift
WARNING: shift/reduce conflict for ID in state 188 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 188 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 188 resolved as shift
WARNING: shift/reduce conflict for SI in state 188 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 188 resolved as shift
WARNING: shift/reduce conflict for LEER in state 188 resolved as shift
WARNING: shift/reduce conflict for ID in state 217 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 217 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 217 resolved as shift
WARNING: shift/reduce conflict for SI in state 217 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 217 resolved as shift
WARNING: shift/reduce conflict for LEER in state 217 resolved as shift
WARNING: shift/reduce conflict for ID in state 220 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 220 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 220 resolved as shift
WARNING: shift/reduce conflict for SI in state 220 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 220 resolved as shift
WARNING: shift/reduce conflict for LEER in state 220 resolved as shift
WARNING: reduce/reduce conflict in state 176 resolved using rule (decFuncCycle -> empty)
WARNING: rejected rule (estatutos -> empty) in state 176
WARNING: reduce/reduce conflict in state 183 resolved using rule (estatutos -> empty)
WARNING: rejected rule (forCycle -> empty) in state 183
WARNING: reduce/reduce conflict in state 187 resolved using rule (estatutos -> empty)
WARNING: rejected rule (whileCycle -> empty) in state 187
WARNING: reduce/reduce conflict in state 190 resolved using rule (estatutos -> empty)
WARNING: rejected rule (condicionCycle -> empty) in state 190
WARNING: Rule (forCycle -> empty) is never reduced
WARNING: Rule (whileCycle -> empty) is never reduced
WARNING: Rule (condicionCycle -> empty) is never reduced
