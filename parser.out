Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTECHAR
    EQUAL
    GREATER
    GREATEREQ
    LESS
    LESSEQ
    NOTEQUAL
    o
    y

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID punto_programa COLON inicio
Rule 2     programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio
Rule 3     programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio
Rule 4     programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio
Rule 5     dec_var_cycle -> dec_var dec_var_cycle
Rule 6     dec_var_cycle -> empty
Rule 7     dec_func_cycle -> dec_func dec_func_cycle
Rule 8     dec_func_cycle -> empty
Rule 9     punto_programa -> <empty>
Rule 10    inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON
Rule 11    dec_var -> simple_var
Rule 12    dec_var -> array
Rule 13    dec_var -> matrix
Rule 14    simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
Rule 15    simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle
Rule 16    simpleVarCycle -> empty
Rule 17    punto_simple_var -> <empty>
Rule 18    type -> ENTERO
Rule 19    type -> DECIMAL
Rule 20    type -> LETRA
Rule 21    array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
Rule 22    arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle
Rule 23    arrayCycle -> empty
Rule 24    punto_array -> <empty>
Rule 25    matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON
Rule 26    matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle
Rule 27    matrixCycle -> empty
Rule 28    punto_matrix -> <empty>
Rule 29    dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON
Rule 30    decFuncCycle -> estatutos decFuncCycle
Rule 31    decFuncCycle -> empty
Rule 32    dec_func_regresar -> REGRESAR variable SEMICOLON
Rule 33    dec_func_regresar -> empty
Rule 34    dec_func_type -> type
Rule 35    dec_func_type -> SINREGRESAR
Rule 36    punto_add_func -> <empty>
Rule 37    parameter -> type ID punto_parameter parameterCycle
Rule 38    parameter -> empty
Rule 39    parameterCycle -> COMMA type ID punto_parameter parameterCycle
Rule 40    parameterCycle -> empty
Rule 41    punto_parameter -> <empty>
Rule 42    estatutos -> asignar
Rule 43    estatutos -> llamada_func
Rule 44    estatutos -> ciclo_for
Rule 45    estatutos -> ciclo_while
Rule 46    estatutos -> condicion
Rule 47    estatutos -> escribe
Rule 48    estatutos -> leer
Rule 49    estatutos -> empty
Rule 50    asignar -> variable ASSIGN exp SEMICOLON
Rule 51    variable -> ID variable_aux
Rule 52    variable_aux -> LBRACKET exp RBRACKET
Rule 53    variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 54    variable_aux -> empty
Rule 55    leer -> LEER variable SEMICOLON
Rule 56    ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
Rule 57    whileCycle -> estatutos whileCycle
Rule 58    whileCycle -> empty
Rule 59    ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
Rule 60    forCycle -> estatutos forCycle
Rule 61    forCycle -> empty
Rule 62    condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
Rule 63    condicionCycle -> estatutos condicionCycle
Rule 64    condicionCycle -> empty
Rule 65    sinoCondicion -> SINO LBRACE estatutos condicionCycle RBRACE
Rule 66    sinoCondicion -> empty
Rule 67    exp -> term expT
Rule 68    expT -> PLUS exp
Rule 69    expT -> MINUS exp
Rule 70    expT -> empty
Rule 71    term -> factor termT
Rule 72    termT -> TIMES term
Rule 73    termT -> DIVIDE term
Rule 74    termT -> empty
Rule 75    factor -> factor_constante
Rule 76    factor -> factor_variable
Rule 77    factor -> factor_expresion
Rule 78    factor_constante -> CTEI
Rule 79    factor_constante -> CTEF
Rule 80    factor_variable -> ID
Rule 81    factor_variable -> ID LBRACKET exp RBRACKET
Rule 82    factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 83    factor_variable -> ID llamada_func
Rule 84    factor_expresion -> LPAREN exp RPAREN
Rule 85    llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON
Rule 86    llamadaCYCLE -> exp llamadaCYCLE_aux
Rule 87    llamadaCYCLE -> empty
Rule 88    llamadaCYCLE_aux -> COMMA exp llamadaCYCLE_aux
Rule 89    llamadaCYCLE_aux -> empty
Rule 90    escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
Rule 91    escribe_aux -> exp escribeCycle
Rule 92    escribe_aux -> CTESTRING escribeCycle
Rule 93    escribeCycle -> COMMA escribe_aux
Rule 94    escribeCycle -> empty
Rule 95    empty -> <empty>

Terminals, with rules where they appear

ARROW                : 14 21 25
ASSIGN               : 50
COLON                : 1 2 3 4
COMMA                : 15 22 26 39 88 93
CTECHAR              : 
CTEF                 : 79
CTEI                 : 21 22 25 25 26 26 78
CTESTRING            : 92
DECIMAL              : 19
DIVIDE               : 73
EN                   : 59
ENTERO               : 18
EQUAL                : 
FUNCION              : 29
GREATER              : 
GREATEREQ            : 
ID                   : 1 2 3 4 14 15 21 22 25 26 29 37 39 51 80 81 82 83 85
IMPRIMIR             : 90
INICIO               : 10
LBRACE               : 10 29 56 59 62 65
LBRACKET             : 21 22 25 25 26 26 52 53 53 81 82 82
LEER                 : 55
LESS                 : 
LESSEQ               : 
LETRA                : 20
LPAREN               : 10 29 56 62 84 85 90
MIENTRAS             : 56
MINUS                : 69
NOTEQUAL             : 
PLUS                 : 68
PORCADA              : 59
PROGRAMA             : 1 2 3 4
RBRACE               : 10 29 56 59 62 65
RBRACKET             : 21 22 25 25 26 26 52 53 53 81 82 82
REGRESAR             : 32
RENGLON              : 21
RPAREN               : 10 29 56 62 84 85 90
SEMICOLON            : 10 14 21 25 29 32 50 55 56 59 62 85 90
SI                   : 62
SINO                 : 65
SINREGRESAR          : 35
TABLA                : 25
TIMES                : 72
VARIABLE             : 14
error                : 
o                    : 
y                    : 

Nonterminals, with rules where they appear

array                : 12
arrayCycle           : 21 22
asignar              : 42
ciclo_for            : 44
ciclo_while          : 45
condicion            : 46
condicionCycle       : 62 63 65
decFuncCycle         : 29 30
dec_func             : 7
dec_func_cycle       : 3 4 7
dec_func_regresar    : 29
dec_func_type        : 29
dec_var              : 5
dec_var_cycle        : 2 3 5 29
empty                : 6 8 16 23 27 31 33 38 40 49 54 58 61 64 66 70 74 87 89 94
escribe              : 47
escribeCycle         : 91 92
escribe_aux          : 90 93
estatutos            : 10 29 30 56 57 59 60 62 63 65
exp                  : 50 52 53 53 56 59 59 62 68 69 81 82 82 84 86 88 91
expT                 : 67
factor               : 71
factor_constante     : 75
factor_expresion     : 77
factor_variable      : 76
forCycle             : 59 60
inicio               : 1 2 3 4
leer                 : 48
llamadaCYCLE         : 85
llamadaCYCLE_aux     : 86 88
llamada_func         : 43 83
matrix               : 13
matrixCycle          : 25 26
parameter            : 29
parameterCycle       : 37 39
programa             : 0
punto_add_func       : 29
punto_array          : 21 22
punto_matrix         : 25 26
punto_parameter      : 37 39
punto_programa       : 1 2 3 4
punto_simple_var     : 14 15
simpleVarCycle       : 14 15
simple_var           : 11
sinoCondicion        : 62
term                 : 67 72 73
termT                : 71
type                 : 14 21 25 34 37 39
variable             : 32 50 55
variable_aux         : 51
whileCycle           : 56 57

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID punto_programa COLON inicio
    (2) programa -> . PROGRAMA ID punto_programa COLON dec_var_cycle inicio
    (3) programa -> . PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> . PROGRAMA ID punto_programa COLON dec_func_cycle inicio

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID punto_programa COLON inicio
    (2) programa -> PROGRAMA . ID punto_programa COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA . ID punto_programa COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA . ID punto_programa COLON dec_func_cycle inicio

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . punto_programa COLON inicio
    (2) programa -> PROGRAMA ID . punto_programa COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA ID . punto_programa COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA ID . punto_programa COLON dec_func_cycle inicio
    (9) punto_programa -> .

    COLON           reduce using rule 9 (punto_programa -> .)

    punto_programa                 shift and go to state 4

state 4

    (1) programa -> PROGRAMA ID punto_programa . COLON inicio
    (2) programa -> PROGRAMA ID punto_programa . COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA ID punto_programa . COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA ID punto_programa . COLON dec_func_cycle inicio

    COLON           shift and go to state 5


state 5

    (1) programa -> PROGRAMA ID punto_programa COLON . inicio
    (2) programa -> PROGRAMA ID punto_programa COLON . dec_var_cycle inicio
    (3) programa -> PROGRAMA ID punto_programa COLON . dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA ID punto_programa COLON . dec_func_cycle inicio
    (10) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON
    (5) dec_var_cycle -> . dec_var dec_var_cycle
    (6) dec_var_cycle -> . empty
    (7) dec_func_cycle -> . dec_func dec_func_cycle
    (8) dec_func_cycle -> . empty
    (11) dec_var -> . simple_var
    (12) dec_var -> . array
    (13) dec_var -> . matrix
    (95) empty -> .
    (29) dec_func -> . FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON
    (14) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (21) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (25) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

  ! shift/reduce conflict for INICIO resolved as shift
  ! shift/reduce conflict for FUNCION resolved as shift
    INICIO          shift and go to state 9
    FUNCION         shift and go to state 16
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

  ! INICIO          [ reduce using rule 95 (empty -> .) ]
  ! FUNCION         [ reduce using rule 95 (empty -> .) ]

    inicio                         shift and go to state 6
    dec_var_cycle                  shift and go to state 7
    dec_func_cycle                 shift and go to state 8
    dec_var                        shift and go to state 10
    empty                          shift and go to state 11
    dec_func                       shift and go to state 12
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 6

    (1) programa -> PROGRAMA ID punto_programa COLON inicio .

    $end            reduce using rule 1 (programa -> PROGRAMA ID punto_programa COLON inicio .)


state 7

    (2) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle . inicio
    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle . dec_func_cycle inicio
    (10) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON
    (7) dec_func_cycle -> . dec_func dec_func_cycle
    (8) dec_func_cycle -> . empty
    (29) dec_func -> . FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON
    (95) empty -> .

  ! shift/reduce conflict for INICIO resolved as shift
    INICIO          shift and go to state 9
    FUNCION         shift and go to state 16

  ! INICIO          [ reduce using rule 95 (empty -> .) ]

    inicio                         shift and go to state 20
    dec_func_cycle                 shift and go to state 21
    dec_func                       shift and go to state 12
    empty                          shift and go to state 22

state 8

    (4) programa -> PROGRAMA ID punto_programa COLON dec_func_cycle . inicio
    (10) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON

    INICIO          shift and go to state 9

    inicio                         shift and go to state 23

state 9

    (10) inicio -> INICIO . LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON

    LPAREN          shift and go to state 24


state 10

    (5) dec_var_cycle -> dec_var . dec_var_cycle
    (5) dec_var_cycle -> . dec_var dec_var_cycle
    (6) dec_var_cycle -> . empty
    (11) dec_var -> . simple_var
    (12) dec_var -> . array
    (13) dec_var -> . matrix
    (95) empty -> .
    (14) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (21) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (25) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    INICIO          reduce using rule 95 (empty -> .)
    FUNCION         reduce using rule 95 (empty -> .)
    ID              reduce using rule 95 (empty -> .)
    PORCADA         reduce using rule 95 (empty -> .)
    MIENTRAS        reduce using rule 95 (empty -> .)
    SI              reduce using rule 95 (empty -> .)
    IMPRIMIR        reduce using rule 95 (empty -> .)
    LEER            reduce using rule 95 (empty -> .)
    REGRESAR        reduce using rule 95 (empty -> .)
    RBRACE          reduce using rule 95 (empty -> .)
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

    dec_var                        shift and go to state 10
    dec_var_cycle                  shift and go to state 25
    empty                          shift and go to state 26
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 11

    (6) dec_var_cycle -> empty .
    (8) dec_func_cycle -> empty .

  ! reduce/reduce conflict for INICIO resolved using rule 6 (dec_var_cycle -> empty .)
    INICIO          reduce using rule 6 (dec_var_cycle -> empty .)
    FUNCION         reduce using rule 6 (dec_var_cycle -> empty .)

  ! INICIO          [ reduce using rule 8 (dec_func_cycle -> empty .) ]


state 12

    (7) dec_func_cycle -> dec_func . dec_func_cycle
    (7) dec_func_cycle -> . dec_func dec_func_cycle
    (8) dec_func_cycle -> . empty
    (29) dec_func -> . FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON
    (95) empty -> .

    FUNCION         shift and go to state 16
    INICIO          reduce using rule 95 (empty -> .)

    dec_func                       shift and go to state 12
    dec_func_cycle                 shift and go to state 27
    empty                          shift and go to state 22

state 13

    (11) dec_var -> simple_var .

    VARIABLE        reduce using rule 11 (dec_var -> simple_var .)
    RENGLON         reduce using rule 11 (dec_var -> simple_var .)
    TABLA           reduce using rule 11 (dec_var -> simple_var .)
    INICIO          reduce using rule 11 (dec_var -> simple_var .)
    FUNCION         reduce using rule 11 (dec_var -> simple_var .)
    ID              reduce using rule 11 (dec_var -> simple_var .)
    PORCADA         reduce using rule 11 (dec_var -> simple_var .)
    MIENTRAS        reduce using rule 11 (dec_var -> simple_var .)
    SI              reduce using rule 11 (dec_var -> simple_var .)
    IMPRIMIR        reduce using rule 11 (dec_var -> simple_var .)
    LEER            reduce using rule 11 (dec_var -> simple_var .)
    REGRESAR        reduce using rule 11 (dec_var -> simple_var .)
    RBRACE          reduce using rule 11 (dec_var -> simple_var .)


state 14

    (12) dec_var -> array .

    VARIABLE        reduce using rule 12 (dec_var -> array .)
    RENGLON         reduce using rule 12 (dec_var -> array .)
    TABLA           reduce using rule 12 (dec_var -> array .)
    INICIO          reduce using rule 12 (dec_var -> array .)
    FUNCION         reduce using rule 12 (dec_var -> array .)
    ID              reduce using rule 12 (dec_var -> array .)
    PORCADA         reduce using rule 12 (dec_var -> array .)
    MIENTRAS        reduce using rule 12 (dec_var -> array .)
    SI              reduce using rule 12 (dec_var -> array .)
    IMPRIMIR        reduce using rule 12 (dec_var -> array .)
    LEER            reduce using rule 12 (dec_var -> array .)
    REGRESAR        reduce using rule 12 (dec_var -> array .)
    RBRACE          reduce using rule 12 (dec_var -> array .)


state 15

    (13) dec_var -> matrix .

    VARIABLE        reduce using rule 13 (dec_var -> matrix .)
    RENGLON         reduce using rule 13 (dec_var -> matrix .)
    TABLA           reduce using rule 13 (dec_var -> matrix .)
    INICIO          reduce using rule 13 (dec_var -> matrix .)
    FUNCION         reduce using rule 13 (dec_var -> matrix .)
    ID              reduce using rule 13 (dec_var -> matrix .)
    PORCADA         reduce using rule 13 (dec_var -> matrix .)
    MIENTRAS        reduce using rule 13 (dec_var -> matrix .)
    SI              reduce using rule 13 (dec_var -> matrix .)
    IMPRIMIR        reduce using rule 13 (dec_var -> matrix .)
    LEER            reduce using rule 13 (dec_var -> matrix .)
    REGRESAR        reduce using rule 13 (dec_var -> matrix .)
    RBRACE          reduce using rule 13 (dec_var -> matrix .)


state 16

    (29) dec_func -> FUNCION . dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON
    (34) dec_func_type -> . type
    (35) dec_func_type -> . SINREGRESAR
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    SINREGRESAR     shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    LETRA           shift and go to state 33

    dec_func_type                  shift and go to state 28
    type                           shift and go to state 29

state 17

    (14) simple_var -> VARIABLE . type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    LETRA           shift and go to state 33

    type                           shift and go to state 34

state 18

    (21) array -> RENGLON . type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    LETRA           shift and go to state 33

    type                           shift and go to state 35

state 19

    (25) matrix -> TABLA . type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    LETRA           shift and go to state 33

    type                           shift and go to state 36

state 20

    (2) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio .

    $end            reduce using rule 2 (programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio .)


state 21

    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle . inicio
    (10) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON

    INICIO          shift and go to state 9

    inicio                         shift and go to state 37

state 22

    (8) dec_func_cycle -> empty .

    INICIO          reduce using rule 8 (dec_func_cycle -> empty .)


state 23

    (4) programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio .

    $end            reduce using rule 4 (programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio .)


state 24

    (10) inicio -> INICIO LPAREN . RPAREN LBRACE estatutos RBRACE SEMICOLON

    RPAREN          shift and go to state 38


state 25

    (5) dec_var_cycle -> dec_var dec_var_cycle .

    INICIO          reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    FUNCION         reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    ID              reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    PORCADA         reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    MIENTRAS        reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    SI              reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    IMPRIMIR        reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    LEER            reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    REGRESAR        reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    RBRACE          reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)


state 26

    (6) dec_var_cycle -> empty .

    INICIO          reduce using rule 6 (dec_var_cycle -> empty .)
    FUNCION         reduce using rule 6 (dec_var_cycle -> empty .)
    ID              reduce using rule 6 (dec_var_cycle -> empty .)
    PORCADA         reduce using rule 6 (dec_var_cycle -> empty .)
    MIENTRAS        reduce using rule 6 (dec_var_cycle -> empty .)
    SI              reduce using rule 6 (dec_var_cycle -> empty .)
    IMPRIMIR        reduce using rule 6 (dec_var_cycle -> empty .)
    LEER            reduce using rule 6 (dec_var_cycle -> empty .)
    REGRESAR        reduce using rule 6 (dec_var_cycle -> empty .)
    RBRACE          reduce using rule 6 (dec_var_cycle -> empty .)


state 27

    (7) dec_func_cycle -> dec_func dec_func_cycle .

    INICIO          reduce using rule 7 (dec_func_cycle -> dec_func dec_func_cycle .)


state 28

    (29) dec_func -> FUNCION dec_func_type . ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON

    ID              shift and go to state 39


state 29

    (34) dec_func_type -> type .

    ID              reduce using rule 34 (dec_func_type -> type .)


state 30

    (35) dec_func_type -> SINREGRESAR .

    ID              reduce using rule 35 (dec_func_type -> SINREGRESAR .)


state 31

    (18) type -> ENTERO .

    ID              reduce using rule 18 (type -> ENTERO .)
    ARROW           reduce using rule 18 (type -> ENTERO .)


state 32

    (19) type -> DECIMAL .

    ID              reduce using rule 19 (type -> DECIMAL .)
    ARROW           reduce using rule 19 (type -> DECIMAL .)


state 33

    (20) type -> LETRA .

    ID              reduce using rule 20 (type -> LETRA .)
    ARROW           reduce using rule 20 (type -> LETRA .)


state 34

    (14) simple_var -> VARIABLE type . ARROW ID punto_simple_var simpleVarCycle SEMICOLON

    ARROW           shift and go to state 40


state 35

    (21) array -> RENGLON type . ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON

    ARROW           shift and go to state 41


state 36

    (25) matrix -> TABLA type . ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    ARROW           shift and go to state 42


state 37

    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio .

    $end            reduce using rule 3 (programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio .)


state 38

    (10) inicio -> INICIO LPAREN RPAREN . LBRACE estatutos RBRACE SEMICOLON

    LBRACE          shift and go to state 43


state 39

    (29) dec_func -> FUNCION dec_func_type ID . punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON
    (36) punto_add_func -> .

    LPAREN          reduce using rule 36 (punto_add_func -> .)

    punto_add_func                 shift and go to state 44

state 40

    (14) simple_var -> VARIABLE type ARROW . ID punto_simple_var simpleVarCycle SEMICOLON

    ID              shift and go to state 45


state 41

    (21) array -> RENGLON type ARROW . ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON

    ID              shift and go to state 46


state 42

    (25) matrix -> TABLA type ARROW . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    ID              shift and go to state 47


state 43

    (10) inicio -> INICIO LPAREN RPAREN LBRACE . estatutos RBRACE SEMICOLON
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (50) asignar -> . variable ASSIGN exp SEMICOLON
    (85) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (59) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (56) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (62) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (90) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (55) leer -> . LEER variable SEMICOLON
    (95) empty -> .
    (51) variable -> . ID variable_aux

    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63
    RBRACE          reduce using rule 95 (empty -> .)

    estatutos                      shift and go to state 48
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    empty                          shift and go to state 56
    variable                       shift and go to state 57

state 44

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func . LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON

    LPAREN          shift and go to state 64


state 45

    (14) simple_var -> VARIABLE type ARROW ID . punto_simple_var simpleVarCycle SEMICOLON
    (17) punto_simple_var -> .

    COMMA           reduce using rule 17 (punto_simple_var -> .)
    SEMICOLON       reduce using rule 17 (punto_simple_var -> .)

    punto_simple_var               shift and go to state 65

state 46

    (21) array -> RENGLON type ARROW ID . LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON

    LBRACKET        shift and go to state 66


state 47

    (25) matrix -> TABLA type ARROW ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    LBRACKET        shift and go to state 67


state 48

    (10) inicio -> INICIO LPAREN RPAREN LBRACE estatutos . RBRACE SEMICOLON

    RBRACE          shift and go to state 68


state 49

    (42) estatutos -> asignar .

    RBRACE          reduce using rule 42 (estatutos -> asignar .)
    ID              reduce using rule 42 (estatutos -> asignar .)
    PORCADA         reduce using rule 42 (estatutos -> asignar .)
    MIENTRAS        reduce using rule 42 (estatutos -> asignar .)
    SI              reduce using rule 42 (estatutos -> asignar .)
    IMPRIMIR        reduce using rule 42 (estatutos -> asignar .)
    LEER            reduce using rule 42 (estatutos -> asignar .)
    REGRESAR        reduce using rule 42 (estatutos -> asignar .)


state 50

    (43) estatutos -> llamada_func .

    RBRACE          reduce using rule 43 (estatutos -> llamada_func .)
    ID              reduce using rule 43 (estatutos -> llamada_func .)
    PORCADA         reduce using rule 43 (estatutos -> llamada_func .)
    MIENTRAS        reduce using rule 43 (estatutos -> llamada_func .)
    SI              reduce using rule 43 (estatutos -> llamada_func .)
    IMPRIMIR        reduce using rule 43 (estatutos -> llamada_func .)
    LEER            reduce using rule 43 (estatutos -> llamada_func .)
    REGRESAR        reduce using rule 43 (estatutos -> llamada_func .)


state 51

    (44) estatutos -> ciclo_for .

    RBRACE          reduce using rule 44 (estatutos -> ciclo_for .)
    ID              reduce using rule 44 (estatutos -> ciclo_for .)
    PORCADA         reduce using rule 44 (estatutos -> ciclo_for .)
    MIENTRAS        reduce using rule 44 (estatutos -> ciclo_for .)
    SI              reduce using rule 44 (estatutos -> ciclo_for .)
    IMPRIMIR        reduce using rule 44 (estatutos -> ciclo_for .)
    LEER            reduce using rule 44 (estatutos -> ciclo_for .)
    REGRESAR        reduce using rule 44 (estatutos -> ciclo_for .)


state 52

    (45) estatutos -> ciclo_while .

    RBRACE          reduce using rule 45 (estatutos -> ciclo_while .)
    ID              reduce using rule 45 (estatutos -> ciclo_while .)
    PORCADA         reduce using rule 45 (estatutos -> ciclo_while .)
    MIENTRAS        reduce using rule 45 (estatutos -> ciclo_while .)
    SI              reduce using rule 45 (estatutos -> ciclo_while .)
    IMPRIMIR        reduce using rule 45 (estatutos -> ciclo_while .)
    LEER            reduce using rule 45 (estatutos -> ciclo_while .)
    REGRESAR        reduce using rule 45 (estatutos -> ciclo_while .)


state 53

    (46) estatutos -> condicion .

    RBRACE          reduce using rule 46 (estatutos -> condicion .)
    ID              reduce using rule 46 (estatutos -> condicion .)
    PORCADA         reduce using rule 46 (estatutos -> condicion .)
    MIENTRAS        reduce using rule 46 (estatutos -> condicion .)
    SI              reduce using rule 46 (estatutos -> condicion .)
    IMPRIMIR        reduce using rule 46 (estatutos -> condicion .)
    LEER            reduce using rule 46 (estatutos -> condicion .)
    REGRESAR        reduce using rule 46 (estatutos -> condicion .)


state 54

    (47) estatutos -> escribe .

    RBRACE          reduce using rule 47 (estatutos -> escribe .)
    ID              reduce using rule 47 (estatutos -> escribe .)
    PORCADA         reduce using rule 47 (estatutos -> escribe .)
    MIENTRAS        reduce using rule 47 (estatutos -> escribe .)
    SI              reduce using rule 47 (estatutos -> escribe .)
    IMPRIMIR        reduce using rule 47 (estatutos -> escribe .)
    LEER            reduce using rule 47 (estatutos -> escribe .)
    REGRESAR        reduce using rule 47 (estatutos -> escribe .)


state 55

    (48) estatutos -> leer .

    RBRACE          reduce using rule 48 (estatutos -> leer .)
    ID              reduce using rule 48 (estatutos -> leer .)
    PORCADA         reduce using rule 48 (estatutos -> leer .)
    MIENTRAS        reduce using rule 48 (estatutos -> leer .)
    SI              reduce using rule 48 (estatutos -> leer .)
    IMPRIMIR        reduce using rule 48 (estatutos -> leer .)
    LEER            reduce using rule 48 (estatutos -> leer .)
    REGRESAR        reduce using rule 48 (estatutos -> leer .)


state 56

    (49) estatutos -> empty .

    RBRACE          reduce using rule 49 (estatutos -> empty .)
    ID              reduce using rule 49 (estatutos -> empty .)
    PORCADA         reduce using rule 49 (estatutos -> empty .)
    MIENTRAS        reduce using rule 49 (estatutos -> empty .)
    SI              reduce using rule 49 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 49 (estatutos -> empty .)
    LEER            reduce using rule 49 (estatutos -> empty .)
    REGRESAR        reduce using rule 49 (estatutos -> empty .)


state 57

    (50) asignar -> variable . ASSIGN exp SEMICOLON

    ASSIGN          shift and go to state 69


state 58

    (85) llamada_func -> ID . LPAREN llamadaCYCLE RPAREN SEMICOLON
    (51) variable -> ID . variable_aux
    (52) variable_aux -> . LBRACKET exp RBRACKET
    (53) variable_aux -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (54) variable_aux -> . empty
    (95) empty -> .

    LPAREN          shift and go to state 70
    LBRACKET        shift and go to state 72
    ASSIGN          reduce using rule 95 (empty -> .)

    variable_aux                   shift and go to state 71
    empty                          shift and go to state 73

state 59

    (59) ciclo_for -> PORCADA . exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (67) exp -> . term expT
    (71) term -> . factor termT
    (75) factor -> . factor_constante
    (76) factor -> . factor_variable
    (77) factor -> . factor_expresion
    (78) factor_constante -> . CTEI
    (79) factor_constante -> . CTEF
    (80) factor_variable -> . ID
    (81) factor_variable -> . ID LBRACKET exp RBRACKET
    (82) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> . ID llamada_func
    (84) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 74
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 60

    (56) ciclo_while -> MIENTRAS . LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON

    LPAREN          shift and go to state 84


state 61

    (62) condicion -> SI . LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON

    LPAREN          shift and go to state 85


state 62

    (90) escribe -> IMPRIMIR . LPAREN escribe_aux RPAREN SEMICOLON

    LPAREN          shift and go to state 86


state 63

    (55) leer -> LEER . variable SEMICOLON
    (51) variable -> . ID variable_aux

    ID              shift and go to state 88

    variable                       shift and go to state 87

state 64

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN . parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON
    (37) parameter -> . type ID punto_parameter parameterCycle
    (38) parameter -> . empty
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA
    (95) empty -> .

    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    LETRA           shift and go to state 33
    RPAREN          reduce using rule 95 (empty -> .)

    parameter                      shift and go to state 89
    type                           shift and go to state 90
    empty                          shift and go to state 91

state 65

    (14) simple_var -> VARIABLE type ARROW ID punto_simple_var . simpleVarCycle SEMICOLON
    (15) simpleVarCycle -> . COMMA ID punto_simple_var simpleVarCycle
    (16) simpleVarCycle -> . empty
    (95) empty -> .

    COMMA           shift and go to state 93
    SEMICOLON       reduce using rule 95 (empty -> .)

    simpleVarCycle                 shift and go to state 92
    empty                          shift and go to state 94

state 66

    (21) array -> RENGLON type ARROW ID LBRACKET . CTEI RBRACKET punto_array arrayCycle SEMICOLON

    CTEI            shift and go to state 95


state 67

    (25) matrix -> TABLA type ARROW ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    CTEI            shift and go to state 96


state 68

    (10) inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 97


state 69

    (50) asignar -> variable ASSIGN . exp SEMICOLON
    (67) exp -> . term expT
    (71) term -> . factor termT
    (75) factor -> . factor_constante
    (76) factor -> . factor_variable
    (77) factor -> . factor_expresion
    (78) factor_constante -> . CTEI
    (79) factor_constante -> . CTEF
    (80) factor_variable -> . ID
    (81) factor_variable -> . ID LBRACKET exp RBRACKET
    (82) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> . ID llamada_func
    (84) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 98
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 70

    (85) llamada_func -> ID LPAREN . llamadaCYCLE RPAREN SEMICOLON
    (86) llamadaCYCLE -> . exp llamadaCYCLE_aux
    (87) llamadaCYCLE -> . empty
    (67) exp -> . term expT
    (95) empty -> .
    (71) term -> . factor termT
    (75) factor -> . factor_constante
    (76) factor -> . factor_variable
    (77) factor -> . factor_expresion
    (78) factor_constante -> . CTEI
    (79) factor_constante -> . CTEF
    (80) factor_variable -> . ID
    (81) factor_variable -> . ID LBRACKET exp RBRACKET
    (82) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> . ID llamada_func
    (84) factor_expresion -> . LPAREN exp RPAREN

    RPAREN          reduce using rule 95 (empty -> .)
    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    llamadaCYCLE                   shift and go to state 99
    exp                            shift and go to state 100
    empty                          shift and go to state 101
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 71

    (51) variable -> ID variable_aux .

    ASSIGN          reduce using rule 51 (variable -> ID variable_aux .)
    SEMICOLON       reduce using rule 51 (variable -> ID variable_aux .)


state 72

    (52) variable_aux -> LBRACKET . exp RBRACKET
    (53) variable_aux -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (67) exp -> . term expT
    (71) term -> . factor termT
    (75) factor -> . factor_constante
    (76) factor -> . factor_variable
    (77) factor -> . factor_expresion
    (78) factor_constante -> . CTEI
    (79) factor_constante -> . CTEF
    (80) factor_variable -> . ID
    (81) factor_variable -> . ID LBRACKET exp RBRACKET
    (82) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> . ID llamada_func
    (84) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 102
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 73

    (54) variable_aux -> empty .

    ASSIGN          reduce using rule 54 (variable_aux -> empty .)
    SEMICOLON       reduce using rule 54 (variable_aux -> empty .)


state 74

    (59) ciclo_for -> PORCADA exp . EN exp LBRACE estatutos forCycle RBRACE SEMICOLON

    EN              shift and go to state 103


state 75

    (67) exp -> term . expT
    (68) expT -> . PLUS exp
    (69) expT -> . MINUS exp
    (70) expT -> . empty
    (95) empty -> .

    PLUS            shift and go to state 105
    MINUS           shift and go to state 106
    EN              reduce using rule 95 (empty -> .)
    SEMICOLON       reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    RPAREN          reduce using rule 95 (empty -> .)
    RBRACKET        reduce using rule 95 (empty -> .)
    LBRACE          reduce using rule 95 (empty -> .)

    expT                           shift and go to state 104
    empty                          shift and go to state 107

state 76

    (71) term -> factor . termT
    (72) termT -> . TIMES term
    (73) termT -> . DIVIDE term
    (74) termT -> . empty
    (95) empty -> .

    TIMES           shift and go to state 109
    DIVIDE          shift and go to state 110
    PLUS            reduce using rule 95 (empty -> .)
    MINUS           reduce using rule 95 (empty -> .)
    EN              reduce using rule 95 (empty -> .)
    SEMICOLON       reduce using rule 95 (empty -> .)
    COMMA           reduce using rule 95 (empty -> .)
    RPAREN          reduce using rule 95 (empty -> .)
    RBRACKET        reduce using rule 95 (empty -> .)
    LBRACE          reduce using rule 95 (empty -> .)

    termT                          shift and go to state 108
    empty                          shift and go to state 111

state 77

    (75) factor -> factor_constante .

    TIMES           reduce using rule 75 (factor -> factor_constante .)
    DIVIDE          reduce using rule 75 (factor -> factor_constante .)
    PLUS            reduce using rule 75 (factor -> factor_constante .)
    MINUS           reduce using rule 75 (factor -> factor_constante .)
    EN              reduce using rule 75 (factor -> factor_constante .)
    SEMICOLON       reduce using rule 75 (factor -> factor_constante .)
    COMMA           reduce using rule 75 (factor -> factor_constante .)
    RPAREN          reduce using rule 75 (factor -> factor_constante .)
    RBRACKET        reduce using rule 75 (factor -> factor_constante .)
    LBRACE          reduce using rule 75 (factor -> factor_constante .)


state 78

    (76) factor -> factor_variable .

    TIMES           reduce using rule 76 (factor -> factor_variable .)
    DIVIDE          reduce using rule 76 (factor -> factor_variable .)
    PLUS            reduce using rule 76 (factor -> factor_variable .)
    MINUS           reduce using rule 76 (factor -> factor_variable .)
    EN              reduce using rule 76 (factor -> factor_variable .)
    SEMICOLON       reduce using rule 76 (factor -> factor_variable .)
    COMMA           reduce using rule 76 (factor -> factor_variable .)
    RPAREN          reduce using rule 76 (factor -> factor_variable .)
    RBRACKET        reduce using rule 76 (factor -> factor_variable .)
    LBRACE          reduce using rule 76 (factor -> factor_variable .)


state 79

    (77) factor -> factor_expresion .

    TIMES           reduce using rule 77 (factor -> factor_expresion .)
    DIVIDE          reduce using rule 77 (factor -> factor_expresion .)
    PLUS            reduce using rule 77 (factor -> factor_expresion .)
    MINUS           reduce using rule 77 (factor -> factor_expresion .)
    EN              reduce using rule 77 (factor -> factor_expresion .)
    SEMICOLON       reduce using rule 77 (factor -> factor_expresion .)
    COMMA           reduce using rule 77 (factor -> factor_expresion .)
    RPAREN          reduce using rule 77 (factor -> factor_expresion .)
    RBRACKET        reduce using rule 77 (factor -> factor_expresion .)
    LBRACE          reduce using rule 77 (factor -> factor_expresion .)


state 80

    (78) factor_constante -> CTEI .

    TIMES           reduce using rule 78 (factor_constante -> CTEI .)
    DIVIDE          reduce using rule 78 (factor_constante -> CTEI .)
    PLUS            reduce using rule 78 (factor_constante -> CTEI .)
    MINUS           reduce using rule 78 (factor_constante -> CTEI .)
    EN              reduce using rule 78 (factor_constante -> CTEI .)
    SEMICOLON       reduce using rule 78 (factor_constante -> CTEI .)
    COMMA           reduce using rule 78 (factor_constante -> CTEI .)
    RPAREN          reduce using rule 78 (factor_constante -> CTEI .)
    RBRACKET        reduce using rule 78 (factor_constante -> CTEI .)
    LBRACE          reduce using rule 78 (factor_constante -> CTEI .)


state 81

    (79) factor_constante -> CTEF .

    TIMES           reduce using rule 79 (factor_constante -> CTEF .)
    DIVIDE          reduce using rule 79 (factor_constante -> CTEF .)
    PLUS            reduce using rule 79 (factor_constante -> CTEF .)
    MINUS           reduce using rule 79 (factor_constante -> CTEF .)
    EN              reduce using rule 79 (factor_constante -> CTEF .)
    SEMICOLON       reduce using rule 79 (factor_constante -> CTEF .)
    COMMA           reduce using rule 79 (factor_constante -> CTEF .)
    RPAREN          reduce using rule 79 (factor_constante -> CTEF .)
    RBRACKET        reduce using rule 79 (factor_constante -> CTEF .)
    LBRACE          reduce using rule 79 (factor_constante -> CTEF .)


state 82

    (80) factor_variable -> ID .
    (81) factor_variable -> ID . LBRACKET exp RBRACKET
    (82) factor_variable -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> ID . llamada_func
    (85) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON

    TIMES           reduce using rule 80 (factor_variable -> ID .)
    DIVIDE          reduce using rule 80 (factor_variable -> ID .)
    PLUS            reduce using rule 80 (factor_variable -> ID .)
    MINUS           reduce using rule 80 (factor_variable -> ID .)
    EN              reduce using rule 80 (factor_variable -> ID .)
    SEMICOLON       reduce using rule 80 (factor_variable -> ID .)
    COMMA           reduce using rule 80 (factor_variable -> ID .)
    RPAREN          reduce using rule 80 (factor_variable -> ID .)
    RBRACKET        reduce using rule 80 (factor_variable -> ID .)
    LBRACE          reduce using rule 80 (factor_variable -> ID .)
    LBRACKET        shift and go to state 113
    ID              shift and go to state 112

    llamada_func                   shift and go to state 114

state 83

    (84) factor_expresion -> LPAREN . exp RPAREN
    (67) exp -> . term expT
    (71) term -> . factor termT
    (75) factor -> . factor_constante
    (76) factor -> . factor_variable
    (77) factor -> . factor_expresion
    (78) factor_constante -> . CTEI
    (79) factor_constante -> . CTEF
    (80) factor_variable -> . ID
    (81) factor_variable -> . ID LBRACKET exp RBRACKET
    (82) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> . ID llamada_func
    (84) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 115
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 84

    (56) ciclo_while -> MIENTRAS LPAREN . exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (67) exp -> . term expT
    (71) term -> . factor termT
    (75) factor -> . factor_constante
    (76) factor -> . factor_variable
    (77) factor -> . factor_expresion
    (78) factor_constante -> . CTEI
    (79) factor_constante -> . CTEF
    (80) factor_variable -> . ID
    (81) factor_variable -> . ID LBRACKET exp RBRACKET
    (82) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> . ID llamada_func
    (84) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 116
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 85

    (62) condicion -> SI LPAREN . exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (67) exp -> . term expT
    (71) term -> . factor termT
    (75) factor -> . factor_constante
    (76) factor -> . factor_variable
    (77) factor -> . factor_expresion
    (78) factor_constante -> . CTEI
    (79) factor_constante -> . CTEF
    (80) factor_variable -> . ID
    (81) factor_variable -> . ID LBRACKET exp RBRACKET
    (82) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> . ID llamada_func
    (84) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 117
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 86

    (90) escribe -> IMPRIMIR LPAREN . escribe_aux RPAREN SEMICOLON
    (91) escribe_aux -> . exp escribeCycle
    (92) escribe_aux -> . CTESTRING escribeCycle
    (67) exp -> . term expT
    (71) term -> . factor termT
    (75) factor -> . factor_constante
    (76) factor -> . factor_variable
    (77) factor -> . factor_expresion
    (78) factor_constante -> . CTEI
    (79) factor_constante -> . CTEF
    (80) factor_variable -> . ID
    (81) factor_variable -> . ID LBRACKET exp RBRACKET
    (82) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> . ID llamada_func
    (84) factor_expresion -> . LPAREN exp RPAREN

    CTESTRING       shift and go to state 120
    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    escribe_aux                    shift and go to state 118
    exp                            shift and go to state 119
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 87

    (55) leer -> LEER variable . SEMICOLON

    SEMICOLON       shift and go to state 121


state 88

    (51) variable -> ID . variable_aux
    (52) variable_aux -> . LBRACKET exp RBRACKET
    (53) variable_aux -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (54) variable_aux -> . empty
    (95) empty -> .

    LBRACKET        shift and go to state 72
    SEMICOLON       reduce using rule 95 (empty -> .)

    variable_aux                   shift and go to state 71
    empty                          shift and go to state 73

state 89

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter . RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON

    RPAREN          shift and go to state 122


state 90

    (37) parameter -> type . ID punto_parameter parameterCycle

    ID              shift and go to state 123


state 91

    (38) parameter -> empty .

    RPAREN          reduce using rule 38 (parameter -> empty .)


state 92

    (14) simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle . SEMICOLON

    SEMICOLON       shift and go to state 124


state 93

    (15) simpleVarCycle -> COMMA . ID punto_simple_var simpleVarCycle

    ID              shift and go to state 125


state 94

    (16) simpleVarCycle -> empty .

    SEMICOLON       reduce using rule 16 (simpleVarCycle -> empty .)


state 95

    (21) array -> RENGLON type ARROW ID LBRACKET CTEI . RBRACKET punto_array arrayCycle SEMICOLON

    RBRACKET        shift and go to state 126


state 96

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    RBRACKET        shift and go to state 127


state 97

    (10) inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON .

    $end            reduce using rule 10 (inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON .)


state 98

    (50) asignar -> variable ASSIGN exp . SEMICOLON

    SEMICOLON       shift and go to state 128


state 99

    (85) llamada_func -> ID LPAREN llamadaCYCLE . RPAREN SEMICOLON

    RPAREN          shift and go to state 129


state 100

    (86) llamadaCYCLE -> exp . llamadaCYCLE_aux
    (88) llamadaCYCLE_aux -> . COMMA exp llamadaCYCLE_aux
    (89) llamadaCYCLE_aux -> . empty
    (95) empty -> .

    COMMA           shift and go to state 131
    RPAREN          reduce using rule 95 (empty -> .)

    llamadaCYCLE_aux               shift and go to state 130
    empty                          shift and go to state 132

state 101

    (87) llamadaCYCLE -> empty .

    RPAREN          reduce using rule 87 (llamadaCYCLE -> empty .)


state 102

    (52) variable_aux -> LBRACKET exp . RBRACKET
    (53) variable_aux -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET

    RBRACKET        shift and go to state 133


state 103

    (59) ciclo_for -> PORCADA exp EN . exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (67) exp -> . term expT
    (71) term -> . factor termT
    (75) factor -> . factor_constante
    (76) factor -> . factor_variable
    (77) factor -> . factor_expresion
    (78) factor_constante -> . CTEI
    (79) factor_constante -> . CTEF
    (80) factor_variable -> . ID
    (81) factor_variable -> . ID LBRACKET exp RBRACKET
    (82) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> . ID llamada_func
    (84) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 134
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 104

    (67) exp -> term expT .

    EN              reduce using rule 67 (exp -> term expT .)
    SEMICOLON       reduce using rule 67 (exp -> term expT .)
    COMMA           reduce using rule 67 (exp -> term expT .)
    RPAREN          reduce using rule 67 (exp -> term expT .)
    RBRACKET        reduce using rule 67 (exp -> term expT .)
    LBRACE          reduce using rule 67 (exp -> term expT .)


state 105

    (68) expT -> PLUS . exp
    (67) exp -> . term expT
    (71) term -> . factor termT
    (75) factor -> . factor_constante
    (76) factor -> . factor_variable
    (77) factor -> . factor_expresion
    (78) factor_constante -> . CTEI
    (79) factor_constante -> . CTEF
    (80) factor_variable -> . ID
    (81) factor_variable -> . ID LBRACKET exp RBRACKET
    (82) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> . ID llamada_func
    (84) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 135
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 106

    (69) expT -> MINUS . exp
    (67) exp -> . term expT
    (71) term -> . factor termT
    (75) factor -> . factor_constante
    (76) factor -> . factor_variable
    (77) factor -> . factor_expresion
    (78) factor_constante -> . CTEI
    (79) factor_constante -> . CTEF
    (80) factor_variable -> . ID
    (81) factor_variable -> . ID LBRACKET exp RBRACKET
    (82) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> . ID llamada_func
    (84) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 136
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 107

    (70) expT -> empty .

    EN              reduce using rule 70 (expT -> empty .)
    SEMICOLON       reduce using rule 70 (expT -> empty .)
    COMMA           reduce using rule 70 (expT -> empty .)
    RPAREN          reduce using rule 70 (expT -> empty .)
    RBRACKET        reduce using rule 70 (expT -> empty .)
    LBRACE          reduce using rule 70 (expT -> empty .)


state 108

    (71) term -> factor termT .

    PLUS            reduce using rule 71 (term -> factor termT .)
    MINUS           reduce using rule 71 (term -> factor termT .)
    EN              reduce using rule 71 (term -> factor termT .)
    SEMICOLON       reduce using rule 71 (term -> factor termT .)
    COMMA           reduce using rule 71 (term -> factor termT .)
    RPAREN          reduce using rule 71 (term -> factor termT .)
    RBRACKET        reduce using rule 71 (term -> factor termT .)
    LBRACE          reduce using rule 71 (term -> factor termT .)


state 109

    (72) termT -> TIMES . term
    (71) term -> . factor termT
    (75) factor -> . factor_constante
    (76) factor -> . factor_variable
    (77) factor -> . factor_expresion
    (78) factor_constante -> . CTEI
    (79) factor_constante -> . CTEF
    (80) factor_variable -> . ID
    (81) factor_variable -> . ID LBRACKET exp RBRACKET
    (82) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> . ID llamada_func
    (84) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    term                           shift and go to state 137
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 110

    (73) termT -> DIVIDE . term
    (71) term -> . factor termT
    (75) factor -> . factor_constante
    (76) factor -> . factor_variable
    (77) factor -> . factor_expresion
    (78) factor_constante -> . CTEI
    (79) factor_constante -> . CTEF
    (80) factor_variable -> . ID
    (81) factor_variable -> . ID LBRACKET exp RBRACKET
    (82) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> . ID llamada_func
    (84) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    term                           shift and go to state 138
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 111

    (74) termT -> empty .

    PLUS            reduce using rule 74 (termT -> empty .)
    MINUS           reduce using rule 74 (termT -> empty .)
    EN              reduce using rule 74 (termT -> empty .)
    SEMICOLON       reduce using rule 74 (termT -> empty .)
    COMMA           reduce using rule 74 (termT -> empty .)
    RPAREN          reduce using rule 74 (termT -> empty .)
    RBRACKET        reduce using rule 74 (termT -> empty .)
    LBRACE          reduce using rule 74 (termT -> empty .)


state 112

    (85) llamada_func -> ID . LPAREN llamadaCYCLE RPAREN SEMICOLON

    LPAREN          shift and go to state 70


state 113

    (81) factor_variable -> ID LBRACKET . exp RBRACKET
    (82) factor_variable -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (67) exp -> . term expT
    (71) term -> . factor termT
    (75) factor -> . factor_constante
    (76) factor -> . factor_variable
    (77) factor -> . factor_expresion
    (78) factor_constante -> . CTEI
    (79) factor_constante -> . CTEF
    (80) factor_variable -> . ID
    (81) factor_variable -> . ID LBRACKET exp RBRACKET
    (82) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> . ID llamada_func
    (84) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 139
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 114

    (83) factor_variable -> ID llamada_func .

    TIMES           reduce using rule 83 (factor_variable -> ID llamada_func .)
    DIVIDE          reduce using rule 83 (factor_variable -> ID llamada_func .)
    PLUS            reduce using rule 83 (factor_variable -> ID llamada_func .)
    MINUS           reduce using rule 83 (factor_variable -> ID llamada_func .)
    EN              reduce using rule 83 (factor_variable -> ID llamada_func .)
    SEMICOLON       reduce using rule 83 (factor_variable -> ID llamada_func .)
    COMMA           reduce using rule 83 (factor_variable -> ID llamada_func .)
    RPAREN          reduce using rule 83 (factor_variable -> ID llamada_func .)
    RBRACKET        reduce using rule 83 (factor_variable -> ID llamada_func .)
    LBRACE          reduce using rule 83 (factor_variable -> ID llamada_func .)


state 115

    (84) factor_expresion -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 140


state 116

    (56) ciclo_while -> MIENTRAS LPAREN exp . RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON

    RPAREN          shift and go to state 141


state 117

    (62) condicion -> SI LPAREN exp . RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON

    RPAREN          shift and go to state 142


state 118

    (90) escribe -> IMPRIMIR LPAREN escribe_aux . RPAREN SEMICOLON

    RPAREN          shift and go to state 143


state 119

    (91) escribe_aux -> exp . escribeCycle
    (93) escribeCycle -> . COMMA escribe_aux
    (94) escribeCycle -> . empty
    (95) empty -> .

    COMMA           shift and go to state 145
    RPAREN          reduce using rule 95 (empty -> .)

    escribeCycle                   shift and go to state 144
    empty                          shift and go to state 146

state 120

    (92) escribe_aux -> CTESTRING . escribeCycle
    (93) escribeCycle -> . COMMA escribe_aux
    (94) escribeCycle -> . empty
    (95) empty -> .

    COMMA           shift and go to state 145
    RPAREN          reduce using rule 95 (empty -> .)

    escribeCycle                   shift and go to state 147
    empty                          shift and go to state 146

state 121

    (55) leer -> LEER variable SEMICOLON .

    RBRACE          reduce using rule 55 (leer -> LEER variable SEMICOLON .)
    ID              reduce using rule 55 (leer -> LEER variable SEMICOLON .)
    PORCADA         reduce using rule 55 (leer -> LEER variable SEMICOLON .)
    MIENTRAS        reduce using rule 55 (leer -> LEER variable SEMICOLON .)
    SI              reduce using rule 55 (leer -> LEER variable SEMICOLON .)
    IMPRIMIR        reduce using rule 55 (leer -> LEER variable SEMICOLON .)
    LEER            reduce using rule 55 (leer -> LEER variable SEMICOLON .)
    REGRESAR        reduce using rule 55 (leer -> LEER variable SEMICOLON .)


state 122

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN . LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON

    LBRACE          shift and go to state 148


state 123

    (37) parameter -> type ID . punto_parameter parameterCycle
    (41) punto_parameter -> .

    COMMA           reduce using rule 41 (punto_parameter -> .)
    RPAREN          reduce using rule 41 (punto_parameter -> .)

    punto_parameter                shift and go to state 149

state 124

    (14) simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .

    VARIABLE        reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    RENGLON         reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    TABLA           reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    INICIO          reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    FUNCION         reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    ID              reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    PORCADA         reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    MIENTRAS        reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    SI              reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    LEER            reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    REGRESAR        reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    RBRACE          reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)


state 125

    (15) simpleVarCycle -> COMMA ID . punto_simple_var simpleVarCycle
    (17) punto_simple_var -> .

    COMMA           reduce using rule 17 (punto_simple_var -> .)
    SEMICOLON       reduce using rule 17 (punto_simple_var -> .)

    punto_simple_var               shift and go to state 150

state 126

    (21) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET . punto_array arrayCycle SEMICOLON
    (24) punto_array -> .

    COMMA           reduce using rule 24 (punto_array -> .)
    SEMICOLON       reduce using rule 24 (punto_array -> .)

    punto_array                    shift and go to state 151

state 127

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    LBRACKET        shift and go to state 152


state 128

    (50) asignar -> variable ASSIGN exp SEMICOLON .

    RBRACE          reduce using rule 50 (asignar -> variable ASSIGN exp SEMICOLON .)
    ID              reduce using rule 50 (asignar -> variable ASSIGN exp SEMICOLON .)
    PORCADA         reduce using rule 50 (asignar -> variable ASSIGN exp SEMICOLON .)
    MIENTRAS        reduce using rule 50 (asignar -> variable ASSIGN exp SEMICOLON .)
    SI              reduce using rule 50 (asignar -> variable ASSIGN exp SEMICOLON .)
    IMPRIMIR        reduce using rule 50 (asignar -> variable ASSIGN exp SEMICOLON .)
    LEER            reduce using rule 50 (asignar -> variable ASSIGN exp SEMICOLON .)
    REGRESAR        reduce using rule 50 (asignar -> variable ASSIGN exp SEMICOLON .)


state 129

    (85) llamada_func -> ID LPAREN llamadaCYCLE RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 153


state 130

    (86) llamadaCYCLE -> exp llamadaCYCLE_aux .

    RPAREN          reduce using rule 86 (llamadaCYCLE -> exp llamadaCYCLE_aux .)


state 131

    (88) llamadaCYCLE_aux -> COMMA . exp llamadaCYCLE_aux
    (67) exp -> . term expT
    (71) term -> . factor termT
    (75) factor -> . factor_constante
    (76) factor -> . factor_variable
    (77) factor -> . factor_expresion
    (78) factor_constante -> . CTEI
    (79) factor_constante -> . CTEF
    (80) factor_variable -> . ID
    (81) factor_variable -> . ID LBRACKET exp RBRACKET
    (82) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> . ID llamada_func
    (84) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 154
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 132

    (89) llamadaCYCLE_aux -> empty .

    RPAREN          reduce using rule 89 (llamadaCYCLE_aux -> empty .)


state 133

    (52) variable_aux -> LBRACKET exp RBRACKET .
    (53) variable_aux -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    ASSIGN          reduce using rule 52 (variable_aux -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 52 (variable_aux -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 155


state 134

    (59) ciclo_for -> PORCADA exp EN exp . LBRACE estatutos forCycle RBRACE SEMICOLON

    LBRACE          shift and go to state 156


state 135

    (68) expT -> PLUS exp .

    EN              reduce using rule 68 (expT -> PLUS exp .)
    SEMICOLON       reduce using rule 68 (expT -> PLUS exp .)
    COMMA           reduce using rule 68 (expT -> PLUS exp .)
    RPAREN          reduce using rule 68 (expT -> PLUS exp .)
    RBRACKET        reduce using rule 68 (expT -> PLUS exp .)
    LBRACE          reduce using rule 68 (expT -> PLUS exp .)


state 136

    (69) expT -> MINUS exp .

    EN              reduce using rule 69 (expT -> MINUS exp .)
    SEMICOLON       reduce using rule 69 (expT -> MINUS exp .)
    COMMA           reduce using rule 69 (expT -> MINUS exp .)
    RPAREN          reduce using rule 69 (expT -> MINUS exp .)
    RBRACKET        reduce using rule 69 (expT -> MINUS exp .)
    LBRACE          reduce using rule 69 (expT -> MINUS exp .)


state 137

    (72) termT -> TIMES term .

    PLUS            reduce using rule 72 (termT -> TIMES term .)
    MINUS           reduce using rule 72 (termT -> TIMES term .)
    EN              reduce using rule 72 (termT -> TIMES term .)
    SEMICOLON       reduce using rule 72 (termT -> TIMES term .)
    COMMA           reduce using rule 72 (termT -> TIMES term .)
    RPAREN          reduce using rule 72 (termT -> TIMES term .)
    RBRACKET        reduce using rule 72 (termT -> TIMES term .)
    LBRACE          reduce using rule 72 (termT -> TIMES term .)


state 138

    (73) termT -> DIVIDE term .

    PLUS            reduce using rule 73 (termT -> DIVIDE term .)
    MINUS           reduce using rule 73 (termT -> DIVIDE term .)
    EN              reduce using rule 73 (termT -> DIVIDE term .)
    SEMICOLON       reduce using rule 73 (termT -> DIVIDE term .)
    COMMA           reduce using rule 73 (termT -> DIVIDE term .)
    RPAREN          reduce using rule 73 (termT -> DIVIDE term .)
    RBRACKET        reduce using rule 73 (termT -> DIVIDE term .)
    LBRACE          reduce using rule 73 (termT -> DIVIDE term .)


state 139

    (81) factor_variable -> ID LBRACKET exp . RBRACKET
    (82) factor_variable -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET

    RBRACKET        shift and go to state 157


state 140

    (84) factor_expresion -> LPAREN exp RPAREN .

    TIMES           reduce using rule 84 (factor_expresion -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 84 (factor_expresion -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 84 (factor_expresion -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 84 (factor_expresion -> LPAREN exp RPAREN .)
    EN              reduce using rule 84 (factor_expresion -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 84 (factor_expresion -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 84 (factor_expresion -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 84 (factor_expresion -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 84 (factor_expresion -> LPAREN exp RPAREN .)
    LBRACE          reduce using rule 84 (factor_expresion -> LPAREN exp RPAREN .)


state 141

    (56) ciclo_while -> MIENTRAS LPAREN exp RPAREN . LBRACE estatutos whileCycle RBRACE SEMICOLON

    LBRACE          shift and go to state 158


state 142

    (62) condicion -> SI LPAREN exp RPAREN . LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON

    LBRACE          shift and go to state 159


state 143

    (90) escribe -> IMPRIMIR LPAREN escribe_aux RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 160


state 144

    (91) escribe_aux -> exp escribeCycle .

    RPAREN          reduce using rule 91 (escribe_aux -> exp escribeCycle .)


state 145

    (93) escribeCycle -> COMMA . escribe_aux
    (91) escribe_aux -> . exp escribeCycle
    (92) escribe_aux -> . CTESTRING escribeCycle
    (67) exp -> . term expT
    (71) term -> . factor termT
    (75) factor -> . factor_constante
    (76) factor -> . factor_variable
    (77) factor -> . factor_expresion
    (78) factor_constante -> . CTEI
    (79) factor_constante -> . CTEF
    (80) factor_variable -> . ID
    (81) factor_variable -> . ID LBRACKET exp RBRACKET
    (82) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> . ID llamada_func
    (84) factor_expresion -> . LPAREN exp RPAREN

    CTESTRING       shift and go to state 120
    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    escribe_aux                    shift and go to state 161
    exp                            shift and go to state 119
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 146

    (94) escribeCycle -> empty .

    RPAREN          reduce using rule 94 (escribeCycle -> empty .)


state 147

    (92) escribe_aux -> CTESTRING escribeCycle .

    RPAREN          reduce using rule 92 (escribe_aux -> CTESTRING escribeCycle .)


state 148

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE . dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON
    (5) dec_var_cycle -> . dec_var dec_var_cycle
    (6) dec_var_cycle -> . empty
    (11) dec_var -> . simple_var
    (12) dec_var -> . array
    (13) dec_var -> . matrix
    (95) empty -> .
    (14) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (21) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (25) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    ID              reduce using rule 95 (empty -> .)
    PORCADA         reduce using rule 95 (empty -> .)
    MIENTRAS        reduce using rule 95 (empty -> .)
    SI              reduce using rule 95 (empty -> .)
    IMPRIMIR        reduce using rule 95 (empty -> .)
    LEER            reduce using rule 95 (empty -> .)
    REGRESAR        reduce using rule 95 (empty -> .)
    RBRACE          reduce using rule 95 (empty -> .)
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

    dec_var_cycle                  shift and go to state 162
    dec_var                        shift and go to state 10
    empty                          shift and go to state 26
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 149

    (37) parameter -> type ID punto_parameter . parameterCycle
    (39) parameterCycle -> . COMMA type ID punto_parameter parameterCycle
    (40) parameterCycle -> . empty
    (95) empty -> .

    COMMA           shift and go to state 164
    RPAREN          reduce using rule 95 (empty -> .)

    parameterCycle                 shift and go to state 163
    empty                          shift and go to state 165

state 150

    (15) simpleVarCycle -> COMMA ID punto_simple_var . simpleVarCycle
    (15) simpleVarCycle -> . COMMA ID punto_simple_var simpleVarCycle
    (16) simpleVarCycle -> . empty
    (95) empty -> .

    COMMA           shift and go to state 93
    SEMICOLON       reduce using rule 95 (empty -> .)

    simpleVarCycle                 shift and go to state 166
    empty                          shift and go to state 94

state 151

    (21) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array . arrayCycle SEMICOLON
    (22) arrayCycle -> . COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle
    (23) arrayCycle -> . empty
    (95) empty -> .

    COMMA           shift and go to state 168
    SEMICOLON       reduce using rule 95 (empty -> .)

    arrayCycle                     shift and go to state 167
    empty                          shift and go to state 169

state 152

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    CTEI            shift and go to state 170


state 153

    (85) llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .

    RBRACE          reduce using rule 85 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    TIMES           reduce using rule 85 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 85 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    PLUS            reduce using rule 85 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    MINUS           reduce using rule 85 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    EN              reduce using rule 85 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 85 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    COMMA           reduce using rule 85 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    RPAREN          reduce using rule 85 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 85 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LBRACE          reduce using rule 85 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    ID              reduce using rule 85 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    PORCADA         reduce using rule 85 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 85 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    SI              reduce using rule 85 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 85 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LEER            reduce using rule 85 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    REGRESAR        reduce using rule 85 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)


state 154

    (88) llamadaCYCLE_aux -> COMMA exp . llamadaCYCLE_aux
    (88) llamadaCYCLE_aux -> . COMMA exp llamadaCYCLE_aux
    (89) llamadaCYCLE_aux -> . empty
    (95) empty -> .

    COMMA           shift and go to state 131
    RPAREN          reduce using rule 95 (empty -> .)

    llamadaCYCLE_aux               shift and go to state 171
    empty                          shift and go to state 132

state 155

    (53) variable_aux -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (67) exp -> . term expT
    (71) term -> . factor termT
    (75) factor -> . factor_constante
    (76) factor -> . factor_variable
    (77) factor -> . factor_expresion
    (78) factor_constante -> . CTEI
    (79) factor_constante -> . CTEF
    (80) factor_variable -> . ID
    (81) factor_variable -> . ID LBRACKET exp RBRACKET
    (82) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> . ID llamada_func
    (84) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 172
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 156

    (59) ciclo_for -> PORCADA exp EN exp LBRACE . estatutos forCycle RBRACE SEMICOLON
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (50) asignar -> . variable ASSIGN exp SEMICOLON
    (85) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (59) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (56) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (62) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (90) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (55) leer -> . LEER variable SEMICOLON
    (95) empty -> .
    (51) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63
    RBRACE          reduce using rule 95 (empty -> .)

  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! PORCADA         [ reduce using rule 95 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 95 (empty -> .) ]
  ! SI              [ reduce using rule 95 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 95 (empty -> .) ]
  ! LEER            [ reduce using rule 95 (empty -> .) ]

    estatutos                      shift and go to state 173
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    empty                          shift and go to state 56
    variable                       shift and go to state 57

state 157

    (81) factor_variable -> ID LBRACKET exp RBRACKET .
    (82) factor_variable -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    TIMES           reduce using rule 81 (factor_variable -> ID LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 81 (factor_variable -> ID LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 81 (factor_variable -> ID LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 81 (factor_variable -> ID LBRACKET exp RBRACKET .)
    EN              reduce using rule 81 (factor_variable -> ID LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 81 (factor_variable -> ID LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 81 (factor_variable -> ID LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 81 (factor_variable -> ID LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 81 (factor_variable -> ID LBRACKET exp RBRACKET .)
    LBRACE          reduce using rule 81 (factor_variable -> ID LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 174


state 158

    (56) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE . estatutos whileCycle RBRACE SEMICOLON
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (50) asignar -> . variable ASSIGN exp SEMICOLON
    (85) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (59) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (56) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (62) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (90) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (55) leer -> . LEER variable SEMICOLON
    (95) empty -> .
    (51) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63
    RBRACE          reduce using rule 95 (empty -> .)

  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! PORCADA         [ reduce using rule 95 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 95 (empty -> .) ]
  ! SI              [ reduce using rule 95 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 95 (empty -> .) ]
  ! LEER            [ reduce using rule 95 (empty -> .) ]

    estatutos                      shift and go to state 175
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    empty                          shift and go to state 56
    variable                       shift and go to state 57

state 159

    (62) condicion -> SI LPAREN exp RPAREN LBRACE . estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (50) asignar -> . variable ASSIGN exp SEMICOLON
    (85) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (59) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (56) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (62) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (90) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (55) leer -> . LEER variable SEMICOLON
    (95) empty -> .
    (51) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63
    RBRACE          reduce using rule 95 (empty -> .)

  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! PORCADA         [ reduce using rule 95 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 95 (empty -> .) ]
  ! SI              [ reduce using rule 95 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 95 (empty -> .) ]
  ! LEER            [ reduce using rule 95 (empty -> .) ]

    estatutos                      shift and go to state 176
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    empty                          shift and go to state 56
    variable                       shift and go to state 57

state 160

    (90) escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .

    RBRACE          reduce using rule 90 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    ID              reduce using rule 90 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    PORCADA         reduce using rule 90 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 90 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    SI              reduce using rule 90 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 90 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    LEER            reduce using rule 90 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    REGRESAR        reduce using rule 90 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)


state 161

    (93) escribeCycle -> COMMA escribe_aux .

    RPAREN          reduce using rule 93 (escribeCycle -> COMMA escribe_aux .)


state 162

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle . estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (50) asignar -> . variable ASSIGN exp SEMICOLON
    (85) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (59) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (56) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (62) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (90) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (55) leer -> . LEER variable SEMICOLON
    (95) empty -> .
    (51) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63
    REGRESAR        reduce using rule 95 (empty -> .)
    RBRACE          reduce using rule 95 (empty -> .)

  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! PORCADA         [ reduce using rule 95 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 95 (empty -> .) ]
  ! SI              [ reduce using rule 95 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 95 (empty -> .) ]
  ! LEER            [ reduce using rule 95 (empty -> .) ]

    estatutos                      shift and go to state 177
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    empty                          shift and go to state 56
    variable                       shift and go to state 57

state 163

    (37) parameter -> type ID punto_parameter parameterCycle .

    RPAREN          reduce using rule 37 (parameter -> type ID punto_parameter parameterCycle .)


state 164

    (39) parameterCycle -> COMMA . type ID punto_parameter parameterCycle
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    LETRA           shift and go to state 33

    type                           shift and go to state 178

state 165

    (40) parameterCycle -> empty .

    RPAREN          reduce using rule 40 (parameterCycle -> empty .)


state 166

    (15) simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle .

    SEMICOLON       reduce using rule 15 (simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle .)


state 167

    (21) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle . SEMICOLON

    SEMICOLON       shift and go to state 179


state 168

    (22) arrayCycle -> COMMA . ID LBRACKET CTEI RBRACKET punto_array arrayCycle

    ID              shift and go to state 180


state 169

    (23) arrayCycle -> empty .

    SEMICOLON       reduce using rule 23 (arrayCycle -> empty .)


state 170

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET punto_matrix matrixCycle SEMICOLON

    RBRACKET        shift and go to state 181


state 171

    (88) llamadaCYCLE_aux -> COMMA exp llamadaCYCLE_aux .

    RPAREN          reduce using rule 88 (llamadaCYCLE_aux -> COMMA exp llamadaCYCLE_aux .)


state 172

    (53) variable_aux -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 182


state 173

    (59) ciclo_for -> PORCADA exp EN exp LBRACE estatutos . forCycle RBRACE SEMICOLON
    (60) forCycle -> . estatutos forCycle
    (61) forCycle -> . empty
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (95) empty -> .
    (50) asignar -> . variable ASSIGN exp SEMICOLON
    (85) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (59) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (56) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (62) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (90) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (55) leer -> . LEER variable SEMICOLON
    (51) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 95 (empty -> .)
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63

  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! PORCADA         [ reduce using rule 95 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 95 (empty -> .) ]
  ! SI              [ reduce using rule 95 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 95 (empty -> .) ]
  ! LEER            [ reduce using rule 95 (empty -> .) ]

    estatutos                      shift and go to state 183
    forCycle                       shift and go to state 184
    empty                          shift and go to state 185
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    variable                       shift and go to state 57

state 174

    (82) factor_variable -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (67) exp -> . term expT
    (71) term -> . factor termT
    (75) factor -> . factor_constante
    (76) factor -> . factor_variable
    (77) factor -> . factor_expresion
    (78) factor_constante -> . CTEI
    (79) factor_constante -> . CTEF
    (80) factor_variable -> . ID
    (81) factor_variable -> . ID LBRACKET exp RBRACKET
    (82) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (83) factor_variable -> . ID llamada_func
    (84) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 80
    CTEF            shift and go to state 81
    ID              shift and go to state 82
    LPAREN          shift and go to state 83

    exp                            shift and go to state 186
    term                           shift and go to state 75
    factor                         shift and go to state 76
    factor_constante               shift and go to state 77
    factor_variable                shift and go to state 78
    factor_expresion               shift and go to state 79

state 175

    (56) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos . whileCycle RBRACE SEMICOLON
    (57) whileCycle -> . estatutos whileCycle
    (58) whileCycle -> . empty
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (95) empty -> .
    (50) asignar -> . variable ASSIGN exp SEMICOLON
    (85) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (59) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (56) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (62) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (90) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (55) leer -> . LEER variable SEMICOLON
    (51) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 95 (empty -> .)
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63

  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! PORCADA         [ reduce using rule 95 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 95 (empty -> .) ]
  ! SI              [ reduce using rule 95 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 95 (empty -> .) ]
  ! LEER            [ reduce using rule 95 (empty -> .) ]

    estatutos                      shift and go to state 187
    whileCycle                     shift and go to state 188
    empty                          shift and go to state 189
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    variable                       shift and go to state 57

state 176

    (62) condicion -> SI LPAREN exp RPAREN LBRACE estatutos . condicionCycle RBRACE sinoCondicion SEMICOLON
    (63) condicionCycle -> . estatutos condicionCycle
    (64) condicionCycle -> . empty
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (95) empty -> .
    (50) asignar -> . variable ASSIGN exp SEMICOLON
    (85) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (59) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (56) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (62) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (90) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (55) leer -> . LEER variable SEMICOLON
    (51) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 95 (empty -> .)
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63

  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! PORCADA         [ reduce using rule 95 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 95 (empty -> .) ]
  ! SI              [ reduce using rule 95 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 95 (empty -> .) ]
  ! LEER            [ reduce using rule 95 (empty -> .) ]

    estatutos                      shift and go to state 190
    condicionCycle                 shift and go to state 191
    empty                          shift and go to state 192
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    variable                       shift and go to state 57

state 177

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos . decFuncCycle dec_func_regresar RBRACE SEMICOLON
    (30) decFuncCycle -> . estatutos decFuncCycle
    (31) decFuncCycle -> . empty
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (95) empty -> .
    (50) asignar -> . variable ASSIGN exp SEMICOLON
    (85) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (59) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (56) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (62) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (90) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (55) leer -> . LEER variable SEMICOLON
    (51) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    REGRESAR        reduce using rule 95 (empty -> .)
    RBRACE          reduce using rule 95 (empty -> .)
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63

  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! PORCADA         [ reduce using rule 95 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 95 (empty -> .) ]
  ! SI              [ reduce using rule 95 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 95 (empty -> .) ]
  ! LEER            [ reduce using rule 95 (empty -> .) ]

    estatutos                      shift and go to state 193
    decFuncCycle                   shift and go to state 194
    empty                          shift and go to state 195
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    variable                       shift and go to state 57

state 178

    (39) parameterCycle -> COMMA type . ID punto_parameter parameterCycle

    ID              shift and go to state 196


state 179

    (21) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .

    VARIABLE        reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    RENGLON         reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    TABLA           reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    INICIO          reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    FUNCION         reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    ID              reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    PORCADA         reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    MIENTRAS        reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    SI              reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    LEER            reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    REGRESAR        reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    RBRACE          reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)


state 180

    (22) arrayCycle -> COMMA ID . LBRACKET CTEI RBRACKET punto_array arrayCycle

    LBRACKET        shift and go to state 197


state 181

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . punto_matrix matrixCycle SEMICOLON
    (28) punto_matrix -> .

    COMMA           reduce using rule 28 (punto_matrix -> .)
    SEMICOLON       reduce using rule 28 (punto_matrix -> .)

    punto_matrix                   shift and go to state 198

state 182

    (53) variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    ASSIGN          reduce using rule 53 (variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 53 (variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 183

    (60) forCycle -> estatutos . forCycle
    (60) forCycle -> . estatutos forCycle
    (61) forCycle -> . empty
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (95) empty -> .
    (50) asignar -> . variable ASSIGN exp SEMICOLON
    (85) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (59) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (56) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (62) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (90) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (55) leer -> . LEER variable SEMICOLON
    (51) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 95 (empty -> .)
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63

  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! PORCADA         [ reduce using rule 95 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 95 (empty -> .) ]
  ! SI              [ reduce using rule 95 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 95 (empty -> .) ]
  ! LEER            [ reduce using rule 95 (empty -> .) ]

    estatutos                      shift and go to state 183
    forCycle                       shift and go to state 199
    empty                          shift and go to state 185
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    variable                       shift and go to state 57

state 184

    (59) ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle . RBRACE SEMICOLON

    RBRACE          shift and go to state 200


state 185

    (61) forCycle -> empty .
    (49) estatutos -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 49 (estatutos -> empty .)
    ID              reduce using rule 49 (estatutos -> empty .)
    PORCADA         reduce using rule 49 (estatutos -> empty .)
    MIENTRAS        reduce using rule 49 (estatutos -> empty .)
    SI              reduce using rule 49 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 49 (estatutos -> empty .)
    LEER            reduce using rule 49 (estatutos -> empty .)
    RBRACE          reduce using rule 49 (estatutos -> empty .)

  ! RBRACE          [ reduce using rule 61 (forCycle -> empty .) ]


state 186

    (82) factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 201


state 187

    (57) whileCycle -> estatutos . whileCycle
    (57) whileCycle -> . estatutos whileCycle
    (58) whileCycle -> . empty
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (95) empty -> .
    (50) asignar -> . variable ASSIGN exp SEMICOLON
    (85) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (59) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (56) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (62) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (90) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (55) leer -> . LEER variable SEMICOLON
    (51) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 95 (empty -> .)
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63

  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! PORCADA         [ reduce using rule 95 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 95 (empty -> .) ]
  ! SI              [ reduce using rule 95 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 95 (empty -> .) ]
  ! LEER            [ reduce using rule 95 (empty -> .) ]

    estatutos                      shift and go to state 187
    whileCycle                     shift and go to state 202
    empty                          shift and go to state 189
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    variable                       shift and go to state 57

state 188

    (56) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle . RBRACE SEMICOLON

    RBRACE          shift and go to state 203


state 189

    (58) whileCycle -> empty .
    (49) estatutos -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 49 (estatutos -> empty .)
    ID              reduce using rule 49 (estatutos -> empty .)
    PORCADA         reduce using rule 49 (estatutos -> empty .)
    MIENTRAS        reduce using rule 49 (estatutos -> empty .)
    SI              reduce using rule 49 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 49 (estatutos -> empty .)
    LEER            reduce using rule 49 (estatutos -> empty .)
    RBRACE          reduce using rule 49 (estatutos -> empty .)

  ! RBRACE          [ reduce using rule 58 (whileCycle -> empty .) ]


state 190

    (63) condicionCycle -> estatutos . condicionCycle
    (63) condicionCycle -> . estatutos condicionCycle
    (64) condicionCycle -> . empty
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (95) empty -> .
    (50) asignar -> . variable ASSIGN exp SEMICOLON
    (85) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (59) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (56) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (62) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (90) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (55) leer -> . LEER variable SEMICOLON
    (51) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 95 (empty -> .)
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63

  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! PORCADA         [ reduce using rule 95 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 95 (empty -> .) ]
  ! SI              [ reduce using rule 95 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 95 (empty -> .) ]
  ! LEER            [ reduce using rule 95 (empty -> .) ]

    estatutos                      shift and go to state 190
    condicionCycle                 shift and go to state 204
    empty                          shift and go to state 192
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    variable                       shift and go to state 57

state 191

    (62) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle . RBRACE sinoCondicion SEMICOLON

    RBRACE          shift and go to state 205


state 192

    (64) condicionCycle -> empty .
    (49) estatutos -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 49 (estatutos -> empty .)
    ID              reduce using rule 49 (estatutos -> empty .)
    PORCADA         reduce using rule 49 (estatutos -> empty .)
    MIENTRAS        reduce using rule 49 (estatutos -> empty .)
    SI              reduce using rule 49 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 49 (estatutos -> empty .)
    LEER            reduce using rule 49 (estatutos -> empty .)
    RBRACE          reduce using rule 49 (estatutos -> empty .)

  ! RBRACE          [ reduce using rule 64 (condicionCycle -> empty .) ]


state 193

    (30) decFuncCycle -> estatutos . decFuncCycle
    (30) decFuncCycle -> . estatutos decFuncCycle
    (31) decFuncCycle -> . empty
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (95) empty -> .
    (50) asignar -> . variable ASSIGN exp SEMICOLON
    (85) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (59) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (56) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (62) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (90) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (55) leer -> . LEER variable SEMICOLON
    (51) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    REGRESAR        reduce using rule 95 (empty -> .)
    RBRACE          reduce using rule 95 (empty -> .)
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63

  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! PORCADA         [ reduce using rule 95 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 95 (empty -> .) ]
  ! SI              [ reduce using rule 95 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 95 (empty -> .) ]
  ! LEER            [ reduce using rule 95 (empty -> .) ]

    estatutos                      shift and go to state 193
    decFuncCycle                   shift and go to state 206
    empty                          shift and go to state 195
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    variable                       shift and go to state 57

state 194

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle . dec_func_regresar RBRACE SEMICOLON
    (32) dec_func_regresar -> . REGRESAR variable SEMICOLON
    (33) dec_func_regresar -> . empty
    (95) empty -> .

    REGRESAR        shift and go to state 208
    RBRACE          reduce using rule 95 (empty -> .)

    dec_func_regresar              shift and go to state 207
    empty                          shift and go to state 209

state 195

    (31) decFuncCycle -> empty .
    (49) estatutos -> empty .

  ! reduce/reduce conflict for REGRESAR resolved using rule 31 (decFuncCycle -> empty .)
  ! reduce/reduce conflict for RBRACE resolved using rule 31 (decFuncCycle -> empty .)
    REGRESAR        reduce using rule 31 (decFuncCycle -> empty .)
    RBRACE          reduce using rule 31 (decFuncCycle -> empty .)
    ID              reduce using rule 49 (estatutos -> empty .)
    PORCADA         reduce using rule 49 (estatutos -> empty .)
    MIENTRAS        reduce using rule 49 (estatutos -> empty .)
    SI              reduce using rule 49 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 49 (estatutos -> empty .)
    LEER            reduce using rule 49 (estatutos -> empty .)

  ! REGRESAR        [ reduce using rule 49 (estatutos -> empty .) ]
  ! RBRACE          [ reduce using rule 49 (estatutos -> empty .) ]


state 196

    (39) parameterCycle -> COMMA type ID . punto_parameter parameterCycle
    (41) punto_parameter -> .

    COMMA           reduce using rule 41 (punto_parameter -> .)
    RPAREN          reduce using rule 41 (punto_parameter -> .)

    punto_parameter                shift and go to state 210

state 197

    (22) arrayCycle -> COMMA ID LBRACKET . CTEI RBRACKET punto_array arrayCycle

    CTEI            shift and go to state 211


state 198

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix . matrixCycle SEMICOLON
    (26) matrixCycle -> . COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle
    (27) matrixCycle -> . empty
    (95) empty -> .

    COMMA           shift and go to state 213
    SEMICOLON       reduce using rule 95 (empty -> .)

    matrixCycle                    shift and go to state 212
    empty                          shift and go to state 214

state 199

    (60) forCycle -> estatutos forCycle .

    RBRACE          reduce using rule 60 (forCycle -> estatutos forCycle .)


state 200

    (59) ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 215


state 201

    (82) factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    TIMES           reduce using rule 82 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 82 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 82 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 82 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    EN              reduce using rule 82 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 82 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 82 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 82 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 82 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LBRACE          reduce using rule 82 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 202

    (57) whileCycle -> estatutos whileCycle .

    RBRACE          reduce using rule 57 (whileCycle -> estatutos whileCycle .)


state 203

    (56) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 216


state 204

    (63) condicionCycle -> estatutos condicionCycle .

    RBRACE          reduce using rule 63 (condicionCycle -> estatutos condicionCycle .)


state 205

    (62) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE . sinoCondicion SEMICOLON
    (65) sinoCondicion -> . SINO LBRACE estatutos condicionCycle RBRACE
    (66) sinoCondicion -> . empty
    (95) empty -> .

    SINO            shift and go to state 218
    SEMICOLON       reduce using rule 95 (empty -> .)

    sinoCondicion                  shift and go to state 217
    empty                          shift and go to state 219

state 206

    (30) decFuncCycle -> estatutos decFuncCycle .

    REGRESAR        reduce using rule 30 (decFuncCycle -> estatutos decFuncCycle .)
    RBRACE          reduce using rule 30 (decFuncCycle -> estatutos decFuncCycle .)


state 207

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar . RBRACE SEMICOLON

    RBRACE          shift and go to state 220


state 208

    (32) dec_func_regresar -> REGRESAR . variable SEMICOLON
    (51) variable -> . ID variable_aux

    ID              shift and go to state 88

    variable                       shift and go to state 221

state 209

    (33) dec_func_regresar -> empty .

    RBRACE          reduce using rule 33 (dec_func_regresar -> empty .)


state 210

    (39) parameterCycle -> COMMA type ID punto_parameter . parameterCycle
    (39) parameterCycle -> . COMMA type ID punto_parameter parameterCycle
    (40) parameterCycle -> . empty
    (95) empty -> .

    COMMA           shift and go to state 164
    RPAREN          reduce using rule 95 (empty -> .)

    parameterCycle                 shift and go to state 222
    empty                          shift and go to state 165

state 211

    (22) arrayCycle -> COMMA ID LBRACKET CTEI . RBRACKET punto_array arrayCycle

    RBRACKET        shift and go to state 223


state 212

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle . SEMICOLON

    SEMICOLON       shift and go to state 224


state 213

    (26) matrixCycle -> COMMA . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    ID              shift and go to state 225


state 214

    (27) matrixCycle -> empty .

    SEMICOLON       reduce using rule 27 (matrixCycle -> empty .)


state 215

    (59) ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .

    RBRACE          reduce using rule 59 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    ID              reduce using rule 59 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    PORCADA         reduce using rule 59 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    MIENTRAS        reduce using rule 59 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    SI              reduce using rule 59 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    IMPRIMIR        reduce using rule 59 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    LEER            reduce using rule 59 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    REGRESAR        reduce using rule 59 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)


state 216

    (56) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .

    RBRACE          reduce using rule 56 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    ID              reduce using rule 56 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    PORCADA         reduce using rule 56 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    MIENTRAS        reduce using rule 56 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    SI              reduce using rule 56 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    IMPRIMIR        reduce using rule 56 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    LEER            reduce using rule 56 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    REGRESAR        reduce using rule 56 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)


state 217

    (62) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion . SEMICOLON

    SEMICOLON       shift and go to state 226


state 218

    (65) sinoCondicion -> SINO . LBRACE estatutos condicionCycle RBRACE

    LBRACE          shift and go to state 227


state 219

    (66) sinoCondicion -> empty .

    SEMICOLON       reduce using rule 66 (sinoCondicion -> empty .)


state 220

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 228


state 221

    (32) dec_func_regresar -> REGRESAR variable . SEMICOLON

    SEMICOLON       shift and go to state 229


state 222

    (39) parameterCycle -> COMMA type ID punto_parameter parameterCycle .

    RPAREN          reduce using rule 39 (parameterCycle -> COMMA type ID punto_parameter parameterCycle .)


state 223

    (22) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET . punto_array arrayCycle
    (24) punto_array -> .

    COMMA           reduce using rule 24 (punto_array -> .)
    SEMICOLON       reduce using rule 24 (punto_array -> .)

    punto_array                    shift and go to state 230

state 224

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .

    VARIABLE        reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    RENGLON         reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    TABLA           reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    INICIO          reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    FUNCION         reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    ID              reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    PORCADA         reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    MIENTRAS        reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    SI              reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    LEER            reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    REGRESAR        reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    RBRACE          reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)


state 225

    (26) matrixCycle -> COMMA ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    LBRACKET        shift and go to state 231


state 226

    (62) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .

    RBRACE          reduce using rule 62 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    ID              reduce using rule 62 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    PORCADA         reduce using rule 62 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    MIENTRAS        reduce using rule 62 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    SI              reduce using rule 62 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    IMPRIMIR        reduce using rule 62 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    LEER            reduce using rule 62 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    REGRESAR        reduce using rule 62 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)


state 227

    (65) sinoCondicion -> SINO LBRACE . estatutos condicionCycle RBRACE
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (50) asignar -> . variable ASSIGN exp SEMICOLON
    (85) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (59) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (56) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (62) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (90) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (55) leer -> . LEER variable SEMICOLON
    (95) empty -> .
    (51) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63
    RBRACE          reduce using rule 95 (empty -> .)

  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! PORCADA         [ reduce using rule 95 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 95 (empty -> .) ]
  ! SI              [ reduce using rule 95 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 95 (empty -> .) ]
  ! LEER            [ reduce using rule 95 (empty -> .) ]

    estatutos                      shift and go to state 232
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    empty                          shift and go to state 56
    variable                       shift and go to state 57

state 228

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON .

    FUNCION         reduce using rule 29 (dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON .)
    INICIO          reduce using rule 29 (dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos decFuncCycle dec_func_regresar RBRACE SEMICOLON .)


state 229

    (32) dec_func_regresar -> REGRESAR variable SEMICOLON .

    RBRACE          reduce using rule 32 (dec_func_regresar -> REGRESAR variable SEMICOLON .)


state 230

    (22) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array . arrayCycle
    (22) arrayCycle -> . COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle
    (23) arrayCycle -> . empty
    (95) empty -> .

    COMMA           shift and go to state 168
    SEMICOLON       reduce using rule 95 (empty -> .)

    arrayCycle                     shift and go to state 233
    empty                          shift and go to state 169

state 231

    (26) matrixCycle -> COMMA ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    CTEI            shift and go to state 234


state 232

    (65) sinoCondicion -> SINO LBRACE estatutos . condicionCycle RBRACE
    (63) condicionCycle -> . estatutos condicionCycle
    (64) condicionCycle -> . empty
    (42) estatutos -> . asignar
    (43) estatutos -> . llamada_func
    (44) estatutos -> . ciclo_for
    (45) estatutos -> . ciclo_while
    (46) estatutos -> . condicion
    (47) estatutos -> . escribe
    (48) estatutos -> . leer
    (49) estatutos -> . empty
    (95) empty -> .
    (50) asignar -> . variable ASSIGN exp SEMICOLON
    (85) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (59) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (56) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (62) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (90) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (55) leer -> . LEER variable SEMICOLON
    (51) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 95 (empty -> .)
    ID              shift and go to state 58
    PORCADA         shift and go to state 59
    MIENTRAS        shift and go to state 60
    SI              shift and go to state 61
    IMPRIMIR        shift and go to state 62
    LEER            shift and go to state 63

  ! ID              [ reduce using rule 95 (empty -> .) ]
  ! PORCADA         [ reduce using rule 95 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 95 (empty -> .) ]
  ! SI              [ reduce using rule 95 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 95 (empty -> .) ]
  ! LEER            [ reduce using rule 95 (empty -> .) ]

    estatutos                      shift and go to state 190
    condicionCycle                 shift and go to state 235
    empty                          shift and go to state 192
    asignar                        shift and go to state 49
    llamada_func                   shift and go to state 50
    ciclo_for                      shift and go to state 51
    ciclo_while                    shift and go to state 52
    condicion                      shift and go to state 53
    escribe                        shift and go to state 54
    leer                           shift and go to state 55
    variable                       shift and go to state 57

state 233

    (22) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle .

    SEMICOLON       reduce using rule 22 (arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle .)


state 234

    (26) matrixCycle -> COMMA ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    RBRACKET        shift and go to state 236


state 235

    (65) sinoCondicion -> SINO LBRACE estatutos condicionCycle . RBRACE

    RBRACE          shift and go to state 237


state 236

    (26) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    LBRACKET        shift and go to state 238


state 237

    (65) sinoCondicion -> SINO LBRACE estatutos condicionCycle RBRACE .

    SEMICOLON       reduce using rule 65 (sinoCondicion -> SINO LBRACE estatutos condicionCycle RBRACE .)


state 238

    (26) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET punto_matrix matrixCycle

    CTEI            shift and go to state 239


state 239

    (26) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET punto_matrix matrixCycle

    RBRACKET        shift and go to state 240


state 240

    (26) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . punto_matrix matrixCycle
    (28) punto_matrix -> .

    COMMA           reduce using rule 28 (punto_matrix -> .)
    SEMICOLON       reduce using rule 28 (punto_matrix -> .)

    punto_matrix                   shift and go to state 241

state 241

    (26) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix . matrixCycle
    (26) matrixCycle -> . COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle
    (27) matrixCycle -> . empty
    (95) empty -> .

    COMMA           shift and go to state 213
    SEMICOLON       reduce using rule 95 (empty -> .)

    matrixCycle                    shift and go to state 242
    empty                          shift and go to state 214

state 242

    (26) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle .

    SEMICOLON       reduce using rule 26 (matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INICIO in state 5 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 5 resolved as shift
WARNING: shift/reduce conflict for INICIO in state 7 resolved as shift
WARNING: shift/reduce conflict for ID in state 156 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 156 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 156 resolved as shift
WARNING: shift/reduce conflict for SI in state 156 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 156 resolved as shift
WARNING: shift/reduce conflict for LEER in state 156 resolved as shift
WARNING: shift/reduce conflict for ID in state 158 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 158 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 158 resolved as shift
WARNING: shift/reduce conflict for SI in state 158 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 158 resolved as shift
WARNING: shift/reduce conflict for LEER in state 158 resolved as shift
WARNING: shift/reduce conflict for ID in state 159 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 159 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 159 resolved as shift
WARNING: shift/reduce conflict for SI in state 159 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 159 resolved as shift
WARNING: shift/reduce conflict for LEER in state 159 resolved as shift
WARNING: shift/reduce conflict for ID in state 162 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 162 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 162 resolved as shift
WARNING: shift/reduce conflict for SI in state 162 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 162 resolved as shift
WARNING: shift/reduce conflict for LEER in state 162 resolved as shift
WARNING: shift/reduce conflict for ID in state 173 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 173 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 173 resolved as shift
WARNING: shift/reduce conflict for SI in state 173 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 173 resolved as shift
WARNING: shift/reduce conflict for LEER in state 173 resolved as shift
WARNING: shift/reduce conflict for ID in state 175 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 175 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 175 resolved as shift
WARNING: shift/reduce conflict for SI in state 175 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 175 resolved as shift
WARNING: shift/reduce conflict for LEER in state 175 resolved as shift
WARNING: shift/reduce conflict for ID in state 176 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 176 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 176 resolved as shift
WARNING: shift/reduce conflict for SI in state 176 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 176 resolved as shift
WARNING: shift/reduce conflict for LEER in state 176 resolved as shift
WARNING: shift/reduce conflict for ID in state 177 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 177 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 177 resolved as shift
WARNING: shift/reduce conflict for SI in state 177 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 177 resolved as shift
WARNING: shift/reduce conflict for LEER in state 177 resolved as shift
WARNING: shift/reduce conflict for ID in state 183 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 183 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 183 resolved as shift
WARNING: shift/reduce conflict for SI in state 183 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 183 resolved as shift
WARNING: shift/reduce conflict for LEER in state 183 resolved as shift
WARNING: shift/reduce conflict for ID in state 187 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 187 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 187 resolved as shift
WARNING: shift/reduce conflict for SI in state 187 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 187 resolved as shift
WARNING: shift/reduce conflict for LEER in state 187 resolved as shift
WARNING: shift/reduce conflict for ID in state 190 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 190 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 190 resolved as shift
WARNING: shift/reduce conflict for SI in state 190 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 190 resolved as shift
WARNING: shift/reduce conflict for LEER in state 190 resolved as shift
WARNING: shift/reduce conflict for ID in state 193 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 193 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 193 resolved as shift
WARNING: shift/reduce conflict for SI in state 193 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 193 resolved as shift
WARNING: shift/reduce conflict for LEER in state 193 resolved as shift
WARNING: shift/reduce conflict for ID in state 227 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 227 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 227 resolved as shift
WARNING: shift/reduce conflict for SI in state 227 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 227 resolved as shift
WARNING: shift/reduce conflict for LEER in state 227 resolved as shift
WARNING: shift/reduce conflict for ID in state 232 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 232 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 232 resolved as shift
WARNING: shift/reduce conflict for SI in state 232 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 232 resolved as shift
WARNING: shift/reduce conflict for LEER in state 232 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (dec_var_cycle -> empty)
WARNING: rejected rule (dec_func_cycle -> empty) in state 11
WARNING: reduce/reduce conflict in state 185 resolved using rule (estatutos -> empty)
WARNING: rejected rule (forCycle -> empty) in state 185
WARNING: reduce/reduce conflict in state 189 resolved using rule (estatutos -> empty)
WARNING: rejected rule (whileCycle -> empty) in state 189
WARNING: reduce/reduce conflict in state 192 resolved using rule (estatutos -> empty)
WARNING: rejected rule (condicionCycle -> empty) in state 192
WARNING: reduce/reduce conflict in state 195 resolved using rule (decFuncCycle -> empty)
WARNING: rejected rule (estatutos -> empty) in state 195
WARNING: Rule (forCycle -> empty) is never reduced
WARNING: Rule (whileCycle -> empty) is never reduced
WARNING: Rule (condicionCycle -> empty) is never reduced
