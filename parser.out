Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTECHAR

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID punto_programa COLON inicio
Rule 2     programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio
Rule 3     programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio
Rule 4     programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio
Rule 5     dec_var_cycle -> dec_var dec_var_cycle
Rule 6     dec_var_cycle -> empty
Rule 7     dec_func_cycle -> dec_func dec_func_cycle
Rule 8     dec_func_cycle -> empty
Rule 9     punto_programa -> <empty>
Rule 10    inicio -> INICIO LPAREN RPAREN LBRACE estatutos_aux RBRACE SEMICOLON
Rule 11    dec_var -> simple_var
Rule 12    dec_var -> array
Rule 13    dec_var -> matrix
Rule 14    simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
Rule 15    simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle
Rule 16    simpleVarCycle -> empty
Rule 17    punto_simple_var -> <empty>
Rule 18    type -> ENTERO
Rule 19    type -> DECIMAL
Rule 20    type -> LETRA
Rule 21    array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
Rule 22    arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle
Rule 23    arrayCycle -> empty
Rule 24    punto_array -> <empty>
Rule 25    matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON
Rule 26    matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle
Rule 27    matrixCycle -> empty
Rule 28    punto_matrix -> <empty>
Rule 29    dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos_aux dec_func_regresar RBRACE SEMICOLON
Rule 30    dec_func_regresar -> REGRESAR variable SEMICOLON
Rule 31    dec_func_regresar -> empty
Rule 32    dec_func_type -> type
Rule 33    dec_func_type -> SINREGRESAR
Rule 34    punto_add_func -> <empty>
Rule 35    parameter -> type ID punto_parameter parameterCycle
Rule 36    parameter -> empty
Rule 37    parameterCycle -> COMMA type ID punto_parameter parameterCycle
Rule 38    parameterCycle -> empty
Rule 39    punto_parameter -> <empty>
Rule 40    estatutos -> asignar
Rule 41    estatutos -> llamada_func
Rule 42    estatutos -> ciclo_for
Rule 43    estatutos -> ciclo_while
Rule 44    estatutos -> condicion
Rule 45    estatutos -> imprimir
Rule 46    estatutos -> leer
Rule 47    estatutos_aux -> estatutos estatutos_aux
Rule 48    estatutos_aux -> empty
Rule 49    asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
Rule 50    push_op_igual -> <empty>
Rule 51    check_op_igual -> <empty>
Rule 52    variable -> ID variable_aux
Rule 53    variable_aux -> LBRACKET exp RBRACKET
Rule 54    variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 55    variable_aux -> empty
Rule 56    leer -> LEER variable SEMICOLON
Rule 57    ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON
Rule 58    punto_inicio_while -> <empty>
Rule 59    punto_medio_while -> <empty>
Rule 60    punto_fin_while -> <empty>
Rule 61    ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON
Rule 62    punto_existe_id -> <empty>
Rule 63    punto_valida_int -> <empty>
Rule 64    punto_valida_exp -> <empty>
Rule 65    punto_termina_for -> <empty>
Rule 66    condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON
Rule 67    sinoCondicion -> SINO punto_sino LBRACE estatutos_aux RBRACE
Rule 68    sinoCondicion -> empty
Rule 69    punto_si -> <empty>
Rule 70    punto_fin_si -> <empty>
Rule 71    punto_sino -> <empty>
Rule 72    hyper_exp -> super_exp hyper_exp_aux
Rule 73    hyper_exp_aux -> push_op_logicos super_exp check_op_logicos
Rule 74    hyper_exp_aux -> empty
Rule 75    check_op_logicos -> <empty>
Rule 76    push_op_logicos -> Y
Rule 77    push_op_logicos -> O
Rule 78    push_op_logicos -> empty
Rule 79    super_exp -> exp super_exp_aux
Rule 80    super_exp_aux -> push_op_relacionales exp check_op_relacionales
Rule 81    super_exp_aux -> empty
Rule 82    check_op_relacionales -> <empty>
Rule 83    push_op_relacionales -> GREATER
Rule 84    push_op_relacionales -> LESS
Rule 85    push_op_relacionales -> GREATEREQ
Rule 86    push_op_relacionales -> LESSEQ
Rule 87    push_op_relacionales -> NOTEQUAL
Rule 88    push_op_relacionales -> EQUAL
Rule 89    push_op_relacionales -> empty
Rule 90    exp -> term check_op_masmenos exp_aux
Rule 91    exp_aux -> push_op_exp_masmenos exp
Rule 92    exp_aux -> empty
Rule 93    push_op_exp_masmenos -> PLUS
Rule 94    push_op_exp_masmenos -> MINUS
Rule 95    push_op_exp_masmenos -> empty
Rule 96    check_op_masmenos -> <empty>
Rule 97    term -> factor check_op_pordiv term_aux
Rule 98    term_aux -> push_op_exp_pordiv term
Rule 99    term_aux -> empty
Rule 100   check_op_pordiv -> <empty>
Rule 101   push_op_exp_pordiv -> TIMES
Rule 102   push_op_exp_pordiv -> DIVIDE
Rule 103   push_op_exp_pordiv -> empty
Rule 104   factor -> factor_constante
Rule 105   factor -> factor_variable
Rule 106   factor -> factor_expresion
Rule 107   factor_constante -> CTEI push_int
Rule 108   factor_constante -> CTEF push_float
Rule 109   factor_variable -> ID push_id
Rule 110   factor_variable -> ID LBRACKET hyper_exp RBRACKET
Rule 111   factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
Rule 112   factor_variable -> ID llamada_func
Rule 113   factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
Rule 114   meter_fondo_falso -> <empty>
Rule 115   quitar_fondo_falso -> <empty>
Rule 116   push_int -> <empty>
Rule 117   push_float -> <empty>
Rule 118   push_id -> <empty>
Rule 119   llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON
Rule 120   llamadaCYCLE -> hyper_exp llamadaCYCLE_aux
Rule 121   llamadaCYCLE -> empty
Rule 122   llamadaCYCLE_aux -> COMMA hyper_exp llamadaCYCLE_aux
Rule 123   llamadaCYCLE_aux -> empty
Rule 124   imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
Rule 125   imprimir_aux -> exp push_imprimir imprimirCycle
Rule 126   imprimir_aux -> CTESTRING push_imprimir imprimirCycle
Rule 127   imprimirCycle -> COMMA imprimir_aux
Rule 128   imprimirCycle -> empty
Rule 129   push_imprimir -> <empty>
Rule 130   empty -> <empty>

Terminals, with rules where they appear

ARROW                : 14 21 25
ASSIGN               : 49 61
COLON                : 1 2 3 4
COMMA                : 15 22 26 37 122 127
CTECHAR              : 
CTEF                 : 108
CTEI                 : 21 22 25 25 26 26 107
CTESTRING            : 126
DECIMAL              : 19
DIVIDE               : 102
ENTERO               : 18
EQUAL                : 88
FUNCION              : 29
GREATER              : 83
GREATEREQ            : 85
HASTA                : 61
ID                   : 1 2 3 4 14 15 21 22 25 26 29 35 37 52 61 109 110 111 112 119
IMPRIMIR             : 124
INICIO               : 10
LBRACE               : 10 29 57 61 66 67
LBRACKET             : 21 22 25 25 26 26 53 54 54 110 111 111
LEER                 : 56
LESS                 : 84
LESSEQ               : 86
LETRA                : 20
LPAREN               : 10 29 57 66 113 119 124
MIENTRAS             : 57
MINUS                : 94
NOTEQUAL             : 87
O                    : 77
PLUS                 : 93
PORCADA              : 61
PROGRAMA             : 1 2 3 4
RBRACE               : 10 29 57 61 66 67
RBRACKET             : 21 22 25 25 26 26 53 54 54 110 111 111
REGRESAR             : 30
RENGLON              : 21
RPAREN               : 10 29 57 66 113 119 124
SEMICOLON            : 10 14 21 25 29 30 49 56 57 61 66 119 124
SI                   : 66
SINO                 : 67
SINREGRESAR          : 33
TABLA                : 25
TIMES                : 101
VARIABLE             : 14
Y                    : 76
error                : 

Nonterminals, with rules where they appear

array                : 12
arrayCycle           : 21 22
asignar              : 40
check_op_igual       : 49
check_op_logicos     : 73
check_op_masmenos    : 90
check_op_pordiv      : 97
check_op_relacionales : 80
ciclo_for            : 42
ciclo_while          : 43
condicion            : 44
dec_func             : 7
dec_func_cycle       : 3 4 7
dec_func_regresar    : 29
dec_func_type        : 29
dec_var              : 5
dec_var_cycle        : 2 3 5 29
empty                : 6 8 16 23 27 31 36 38 48 55 68 74 78 81 89 92 95 99 103 121 123 128
estatutos            : 47
estatutos_aux        : 10 29 47 57 61 66 67
exp                  : 53 54 54 79 80 91 125
exp_aux              : 90
factor               : 97
factor_constante     : 104
factor_expresion     : 106
factor_variable      : 105
hyper_exp            : 49 57 61 61 66 110 111 111 113 120 122
hyper_exp_aux        : 72
imprimir             : 45
imprimirCycle        : 125 126
imprimir_aux         : 124 127
inicio               : 1 2 3 4
leer                 : 46
llamadaCYCLE         : 119
llamadaCYCLE_aux     : 120 122
llamada_func         : 41 112
matrix               : 13
matrixCycle          : 25 26
meter_fondo_falso    : 113
parameter            : 29
parameterCycle       : 35 37
programa             : 0
punto_add_func       : 29
punto_array          : 21 22
punto_existe_id      : 61
punto_fin_si         : 66
punto_fin_while      : 57
punto_inicio_while   : 57
punto_matrix         : 25 26
punto_medio_while    : 57
punto_parameter      : 35 37
punto_programa       : 1 2 3 4
punto_si             : 66
punto_simple_var     : 14 15
punto_sino           : 67
punto_termina_for    : 61
punto_valida_exp     : 61
punto_valida_int     : 61
push_float           : 108
push_id              : 109
push_imprimir        : 125 126
push_int             : 107
push_op_exp_masmenos : 91
push_op_exp_pordiv   : 98
push_op_igual        : 49
push_op_logicos      : 73
push_op_relacionales : 80
quitar_fondo_falso   : 113
simpleVarCycle       : 14 15
simple_var           : 11
sinoCondicion        : 66
super_exp            : 72 73
super_exp_aux        : 79
term                 : 90 98
term_aux             : 97
type                 : 14 21 25 32 35 37
variable             : 30 49 56
variable_aux         : 52

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID punto_programa COLON inicio
    (2) programa -> . PROGRAMA ID punto_programa COLON dec_var_cycle inicio
    (3) programa -> . PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> . PROGRAMA ID punto_programa COLON dec_func_cycle inicio

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID punto_programa COLON inicio
    (2) programa -> PROGRAMA . ID punto_programa COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA . ID punto_programa COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA . ID punto_programa COLON dec_func_cycle inicio

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . punto_programa COLON inicio
    (2) programa -> PROGRAMA ID . punto_programa COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA ID . punto_programa COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA ID . punto_programa COLON dec_func_cycle inicio
    (9) punto_programa -> .

    COLON           reduce using rule 9 (punto_programa -> .)

    punto_programa                 shift and go to state 4

state 4

    (1) programa -> PROGRAMA ID punto_programa . COLON inicio
    (2) programa -> PROGRAMA ID punto_programa . COLON dec_var_cycle inicio
    (3) programa -> PROGRAMA ID punto_programa . COLON dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA ID punto_programa . COLON dec_func_cycle inicio

    COLON           shift and go to state 5


state 5

    (1) programa -> PROGRAMA ID punto_programa COLON . inicio
    (2) programa -> PROGRAMA ID punto_programa COLON . dec_var_cycle inicio
    (3) programa -> PROGRAMA ID punto_programa COLON . dec_var_cycle dec_func_cycle inicio
    (4) programa -> PROGRAMA ID punto_programa COLON . dec_func_cycle inicio
    (10) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos_aux RBRACE SEMICOLON
    (5) dec_var_cycle -> . dec_var dec_var_cycle
    (6) dec_var_cycle -> . empty
    (7) dec_func_cycle -> . dec_func dec_func_cycle
    (8) dec_func_cycle -> . empty
    (11) dec_var -> . simple_var
    (12) dec_var -> . array
    (13) dec_var -> . matrix
    (130) empty -> .
    (29) dec_func -> . FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos_aux dec_func_regresar RBRACE SEMICOLON
    (14) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (21) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (25) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

  ! shift/reduce conflict for INICIO resolved as shift
  ! shift/reduce conflict for FUNCION resolved as shift
    INICIO          shift and go to state 9
    FUNCION         shift and go to state 16
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

  ! INICIO          [ reduce using rule 130 (empty -> .) ]
  ! FUNCION         [ reduce using rule 130 (empty -> .) ]

    inicio                         shift and go to state 6
    dec_var_cycle                  shift and go to state 7
    dec_func_cycle                 shift and go to state 8
    dec_var                        shift and go to state 10
    empty                          shift and go to state 11
    dec_func                       shift and go to state 12
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 6

    (1) programa -> PROGRAMA ID punto_programa COLON inicio .

    $end            reduce using rule 1 (programa -> PROGRAMA ID punto_programa COLON inicio .)


state 7

    (2) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle . inicio
    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle . dec_func_cycle inicio
    (10) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos_aux RBRACE SEMICOLON
    (7) dec_func_cycle -> . dec_func dec_func_cycle
    (8) dec_func_cycle -> . empty
    (29) dec_func -> . FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos_aux dec_func_regresar RBRACE SEMICOLON
    (130) empty -> .

  ! shift/reduce conflict for INICIO resolved as shift
    INICIO          shift and go to state 9
    FUNCION         shift and go to state 16

  ! INICIO          [ reduce using rule 130 (empty -> .) ]

    inicio                         shift and go to state 20
    dec_func_cycle                 shift and go to state 21
    dec_func                       shift and go to state 12
    empty                          shift and go to state 22

state 8

    (4) programa -> PROGRAMA ID punto_programa COLON dec_func_cycle . inicio
    (10) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos_aux RBRACE SEMICOLON

    INICIO          shift and go to state 9

    inicio                         shift and go to state 23

state 9

    (10) inicio -> INICIO . LPAREN RPAREN LBRACE estatutos_aux RBRACE SEMICOLON

    LPAREN          shift and go to state 24


state 10

    (5) dec_var_cycle -> dec_var . dec_var_cycle
    (5) dec_var_cycle -> . dec_var dec_var_cycle
    (6) dec_var_cycle -> . empty
    (11) dec_var -> . simple_var
    (12) dec_var -> . array
    (13) dec_var -> . matrix
    (130) empty -> .
    (14) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (21) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (25) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    INICIO          reduce using rule 130 (empty -> .)
    FUNCION         reduce using rule 130 (empty -> .)
    ID              reduce using rule 130 (empty -> .)
    PORCADA         reduce using rule 130 (empty -> .)
    MIENTRAS        reduce using rule 130 (empty -> .)
    SI              reduce using rule 130 (empty -> .)
    IMPRIMIR        reduce using rule 130 (empty -> .)
    LEER            reduce using rule 130 (empty -> .)
    REGRESAR        reduce using rule 130 (empty -> .)
    RBRACE          reduce using rule 130 (empty -> .)
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

    dec_var                        shift and go to state 10
    dec_var_cycle                  shift and go to state 25
    empty                          shift and go to state 26
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 11

    (6) dec_var_cycle -> empty .
    (8) dec_func_cycle -> empty .

  ! reduce/reduce conflict for INICIO resolved using rule 6 (dec_var_cycle -> empty .)
    INICIO          reduce using rule 6 (dec_var_cycle -> empty .)
    FUNCION         reduce using rule 6 (dec_var_cycle -> empty .)

  ! INICIO          [ reduce using rule 8 (dec_func_cycle -> empty .) ]


state 12

    (7) dec_func_cycle -> dec_func . dec_func_cycle
    (7) dec_func_cycle -> . dec_func dec_func_cycle
    (8) dec_func_cycle -> . empty
    (29) dec_func -> . FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos_aux dec_func_regresar RBRACE SEMICOLON
    (130) empty -> .

    FUNCION         shift and go to state 16
    INICIO          reduce using rule 130 (empty -> .)

    dec_func                       shift and go to state 12
    dec_func_cycle                 shift and go to state 27
    empty                          shift and go to state 22

state 13

    (11) dec_var -> simple_var .

    VARIABLE        reduce using rule 11 (dec_var -> simple_var .)
    RENGLON         reduce using rule 11 (dec_var -> simple_var .)
    TABLA           reduce using rule 11 (dec_var -> simple_var .)
    INICIO          reduce using rule 11 (dec_var -> simple_var .)
    FUNCION         reduce using rule 11 (dec_var -> simple_var .)
    ID              reduce using rule 11 (dec_var -> simple_var .)
    PORCADA         reduce using rule 11 (dec_var -> simple_var .)
    MIENTRAS        reduce using rule 11 (dec_var -> simple_var .)
    SI              reduce using rule 11 (dec_var -> simple_var .)
    IMPRIMIR        reduce using rule 11 (dec_var -> simple_var .)
    LEER            reduce using rule 11 (dec_var -> simple_var .)
    REGRESAR        reduce using rule 11 (dec_var -> simple_var .)
    RBRACE          reduce using rule 11 (dec_var -> simple_var .)


state 14

    (12) dec_var -> array .

    VARIABLE        reduce using rule 12 (dec_var -> array .)
    RENGLON         reduce using rule 12 (dec_var -> array .)
    TABLA           reduce using rule 12 (dec_var -> array .)
    INICIO          reduce using rule 12 (dec_var -> array .)
    FUNCION         reduce using rule 12 (dec_var -> array .)
    ID              reduce using rule 12 (dec_var -> array .)
    PORCADA         reduce using rule 12 (dec_var -> array .)
    MIENTRAS        reduce using rule 12 (dec_var -> array .)
    SI              reduce using rule 12 (dec_var -> array .)
    IMPRIMIR        reduce using rule 12 (dec_var -> array .)
    LEER            reduce using rule 12 (dec_var -> array .)
    REGRESAR        reduce using rule 12 (dec_var -> array .)
    RBRACE          reduce using rule 12 (dec_var -> array .)


state 15

    (13) dec_var -> matrix .

    VARIABLE        reduce using rule 13 (dec_var -> matrix .)
    RENGLON         reduce using rule 13 (dec_var -> matrix .)
    TABLA           reduce using rule 13 (dec_var -> matrix .)
    INICIO          reduce using rule 13 (dec_var -> matrix .)
    FUNCION         reduce using rule 13 (dec_var -> matrix .)
    ID              reduce using rule 13 (dec_var -> matrix .)
    PORCADA         reduce using rule 13 (dec_var -> matrix .)
    MIENTRAS        reduce using rule 13 (dec_var -> matrix .)
    SI              reduce using rule 13 (dec_var -> matrix .)
    IMPRIMIR        reduce using rule 13 (dec_var -> matrix .)
    LEER            reduce using rule 13 (dec_var -> matrix .)
    REGRESAR        reduce using rule 13 (dec_var -> matrix .)
    RBRACE          reduce using rule 13 (dec_var -> matrix .)


state 16

    (29) dec_func -> FUNCION . dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos_aux dec_func_regresar RBRACE SEMICOLON
    (32) dec_func_type -> . type
    (33) dec_func_type -> . SINREGRESAR
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    SINREGRESAR     shift and go to state 30
    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    LETRA           shift and go to state 33

    dec_func_type                  shift and go to state 28
    type                           shift and go to state 29

state 17

    (14) simple_var -> VARIABLE . type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    LETRA           shift and go to state 33

    type                           shift and go to state 34

state 18

    (21) array -> RENGLON . type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    LETRA           shift and go to state 33

    type                           shift and go to state 35

state 19

    (25) matrix -> TABLA . type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    LETRA           shift and go to state 33

    type                           shift and go to state 36

state 20

    (2) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio .

    $end            reduce using rule 2 (programa -> PROGRAMA ID punto_programa COLON dec_var_cycle inicio .)


state 21

    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle . inicio
    (10) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos_aux RBRACE SEMICOLON

    INICIO          shift and go to state 9

    inicio                         shift and go to state 37

state 22

    (8) dec_func_cycle -> empty .

    INICIO          reduce using rule 8 (dec_func_cycle -> empty .)


state 23

    (4) programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio .

    $end            reduce using rule 4 (programa -> PROGRAMA ID punto_programa COLON dec_func_cycle inicio .)


state 24

    (10) inicio -> INICIO LPAREN . RPAREN LBRACE estatutos_aux RBRACE SEMICOLON

    RPAREN          shift and go to state 38


state 25

    (5) dec_var_cycle -> dec_var dec_var_cycle .

    INICIO          reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    FUNCION         reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    ID              reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    PORCADA         reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    MIENTRAS        reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    SI              reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    IMPRIMIR        reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    LEER            reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    REGRESAR        reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)
    RBRACE          reduce using rule 5 (dec_var_cycle -> dec_var dec_var_cycle .)


state 26

    (6) dec_var_cycle -> empty .

    INICIO          reduce using rule 6 (dec_var_cycle -> empty .)
    FUNCION         reduce using rule 6 (dec_var_cycle -> empty .)
    ID              reduce using rule 6 (dec_var_cycle -> empty .)
    PORCADA         reduce using rule 6 (dec_var_cycle -> empty .)
    MIENTRAS        reduce using rule 6 (dec_var_cycle -> empty .)
    SI              reduce using rule 6 (dec_var_cycle -> empty .)
    IMPRIMIR        reduce using rule 6 (dec_var_cycle -> empty .)
    LEER            reduce using rule 6 (dec_var_cycle -> empty .)
    REGRESAR        reduce using rule 6 (dec_var_cycle -> empty .)
    RBRACE          reduce using rule 6 (dec_var_cycle -> empty .)


state 27

    (7) dec_func_cycle -> dec_func dec_func_cycle .

    INICIO          reduce using rule 7 (dec_func_cycle -> dec_func dec_func_cycle .)


state 28

    (29) dec_func -> FUNCION dec_func_type . ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos_aux dec_func_regresar RBRACE SEMICOLON

    ID              shift and go to state 39


state 29

    (32) dec_func_type -> type .

    ID              reduce using rule 32 (dec_func_type -> type .)


state 30

    (33) dec_func_type -> SINREGRESAR .

    ID              reduce using rule 33 (dec_func_type -> SINREGRESAR .)


state 31

    (18) type -> ENTERO .

    ID              reduce using rule 18 (type -> ENTERO .)
    ARROW           reduce using rule 18 (type -> ENTERO .)


state 32

    (19) type -> DECIMAL .

    ID              reduce using rule 19 (type -> DECIMAL .)
    ARROW           reduce using rule 19 (type -> DECIMAL .)


state 33

    (20) type -> LETRA .

    ID              reduce using rule 20 (type -> LETRA .)
    ARROW           reduce using rule 20 (type -> LETRA .)


state 34

    (14) simple_var -> VARIABLE type . ARROW ID punto_simple_var simpleVarCycle SEMICOLON

    ARROW           shift and go to state 40


state 35

    (21) array -> RENGLON type . ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON

    ARROW           shift and go to state 41


state 36

    (25) matrix -> TABLA type . ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    ARROW           shift and go to state 42


state 37

    (3) programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio .

    $end            reduce using rule 3 (programa -> PROGRAMA ID punto_programa COLON dec_var_cycle dec_func_cycle inicio .)


state 38

    (10) inicio -> INICIO LPAREN RPAREN . LBRACE estatutos_aux RBRACE SEMICOLON

    LBRACE          shift and go to state 43


state 39

    (29) dec_func -> FUNCION dec_func_type ID . punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos_aux dec_func_regresar RBRACE SEMICOLON
    (34) punto_add_func -> .

    LPAREN          reduce using rule 34 (punto_add_func -> .)

    punto_add_func                 shift and go to state 44

state 40

    (14) simple_var -> VARIABLE type ARROW . ID punto_simple_var simpleVarCycle SEMICOLON

    ID              shift and go to state 45


state 41

    (21) array -> RENGLON type ARROW . ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON

    ID              shift and go to state 46


state 42

    (25) matrix -> TABLA type ARROW . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    ID              shift and go to state 47


state 43

    (10) inicio -> INICIO LPAREN RPAREN LBRACE . estatutos_aux RBRACE SEMICOLON
    (47) estatutos_aux -> . estatutos estatutos_aux
    (48) estatutos_aux -> . empty
    (40) estatutos -> . asignar
    (41) estatutos -> . llamada_func
    (42) estatutos -> . ciclo_for
    (43) estatutos -> . ciclo_while
    (44) estatutos -> . condicion
    (45) estatutos -> . imprimir
    (46) estatutos -> . leer
    (130) empty -> .
    (49) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (119) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON
    (57) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON
    (66) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON
    (124) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (56) leer -> . LEER variable SEMICOLON
    (52) variable -> . ID variable_aux

    RBRACE          reduce using rule 130 (empty -> .)
    ID              shift and go to state 59
    PORCADA         shift and go to state 60
    MIENTRAS        shift and go to state 61
    SI              shift and go to state 62
    IMPRIMIR        shift and go to state 63
    LEER            shift and go to state 64

    estatutos_aux                  shift and go to state 48
    estatutos                      shift and go to state 49
    empty                          shift and go to state 50
    asignar                        shift and go to state 51
    llamada_func                   shift and go to state 52
    ciclo_for                      shift and go to state 53
    ciclo_while                    shift and go to state 54
    condicion                      shift and go to state 55
    imprimir                       shift and go to state 56
    leer                           shift and go to state 57
    variable                       shift and go to state 58

state 44

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func . LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos_aux dec_func_regresar RBRACE SEMICOLON

    LPAREN          shift and go to state 65


state 45

    (14) simple_var -> VARIABLE type ARROW ID . punto_simple_var simpleVarCycle SEMICOLON
    (17) punto_simple_var -> .

    COMMA           reduce using rule 17 (punto_simple_var -> .)
    SEMICOLON       reduce using rule 17 (punto_simple_var -> .)

    punto_simple_var               shift and go to state 66

state 46

    (21) array -> RENGLON type ARROW ID . LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON

    LBRACKET        shift and go to state 67


state 47

    (25) matrix -> TABLA type ARROW ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    LBRACKET        shift and go to state 68


state 48

    (10) inicio -> INICIO LPAREN RPAREN LBRACE estatutos_aux . RBRACE SEMICOLON

    RBRACE          shift and go to state 69


state 49

    (47) estatutos_aux -> estatutos . estatutos_aux
    (47) estatutos_aux -> . estatutos estatutos_aux
    (48) estatutos_aux -> . empty
    (40) estatutos -> . asignar
    (41) estatutos -> . llamada_func
    (42) estatutos -> . ciclo_for
    (43) estatutos -> . ciclo_while
    (44) estatutos -> . condicion
    (45) estatutos -> . imprimir
    (46) estatutos -> . leer
    (130) empty -> .
    (49) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (119) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON
    (57) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON
    (66) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON
    (124) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (56) leer -> . LEER variable SEMICOLON
    (52) variable -> . ID variable_aux

    RBRACE          reduce using rule 130 (empty -> .)
    REGRESAR        reduce using rule 130 (empty -> .)
    ID              shift and go to state 59
    PORCADA         shift and go to state 60
    MIENTRAS        shift and go to state 61
    SI              shift and go to state 62
    IMPRIMIR        shift and go to state 63
    LEER            shift and go to state 64

    estatutos                      shift and go to state 49
    estatutos_aux                  shift and go to state 70
    empty                          shift and go to state 50
    asignar                        shift and go to state 51
    llamada_func                   shift and go to state 52
    ciclo_for                      shift and go to state 53
    ciclo_while                    shift and go to state 54
    condicion                      shift and go to state 55
    imprimir                       shift and go to state 56
    leer                           shift and go to state 57
    variable                       shift and go to state 58

state 50

    (48) estatutos_aux -> empty .

    RBRACE          reduce using rule 48 (estatutos_aux -> empty .)
    REGRESAR        reduce using rule 48 (estatutos_aux -> empty .)


state 51

    (40) estatutos -> asignar .

    ID              reduce using rule 40 (estatutos -> asignar .)
    PORCADA         reduce using rule 40 (estatutos -> asignar .)
    MIENTRAS        reduce using rule 40 (estatutos -> asignar .)
    SI              reduce using rule 40 (estatutos -> asignar .)
    IMPRIMIR        reduce using rule 40 (estatutos -> asignar .)
    LEER            reduce using rule 40 (estatutos -> asignar .)
    RBRACE          reduce using rule 40 (estatutos -> asignar .)
    REGRESAR        reduce using rule 40 (estatutos -> asignar .)


state 52

    (41) estatutos -> llamada_func .

    ID              reduce using rule 41 (estatutos -> llamada_func .)
    PORCADA         reduce using rule 41 (estatutos -> llamada_func .)
    MIENTRAS        reduce using rule 41 (estatutos -> llamada_func .)
    SI              reduce using rule 41 (estatutos -> llamada_func .)
    IMPRIMIR        reduce using rule 41 (estatutos -> llamada_func .)
    LEER            reduce using rule 41 (estatutos -> llamada_func .)
    RBRACE          reduce using rule 41 (estatutos -> llamada_func .)
    REGRESAR        reduce using rule 41 (estatutos -> llamada_func .)


state 53

    (42) estatutos -> ciclo_for .

    ID              reduce using rule 42 (estatutos -> ciclo_for .)
    PORCADA         reduce using rule 42 (estatutos -> ciclo_for .)
    MIENTRAS        reduce using rule 42 (estatutos -> ciclo_for .)
    SI              reduce using rule 42 (estatutos -> ciclo_for .)
    IMPRIMIR        reduce using rule 42 (estatutos -> ciclo_for .)
    LEER            reduce using rule 42 (estatutos -> ciclo_for .)
    RBRACE          reduce using rule 42 (estatutos -> ciclo_for .)
    REGRESAR        reduce using rule 42 (estatutos -> ciclo_for .)


state 54

    (43) estatutos -> ciclo_while .

    ID              reduce using rule 43 (estatutos -> ciclo_while .)
    PORCADA         reduce using rule 43 (estatutos -> ciclo_while .)
    MIENTRAS        reduce using rule 43 (estatutos -> ciclo_while .)
    SI              reduce using rule 43 (estatutos -> ciclo_while .)
    IMPRIMIR        reduce using rule 43 (estatutos -> ciclo_while .)
    LEER            reduce using rule 43 (estatutos -> ciclo_while .)
    RBRACE          reduce using rule 43 (estatutos -> ciclo_while .)
    REGRESAR        reduce using rule 43 (estatutos -> ciclo_while .)


state 55

    (44) estatutos -> condicion .

    ID              reduce using rule 44 (estatutos -> condicion .)
    PORCADA         reduce using rule 44 (estatutos -> condicion .)
    MIENTRAS        reduce using rule 44 (estatutos -> condicion .)
    SI              reduce using rule 44 (estatutos -> condicion .)
    IMPRIMIR        reduce using rule 44 (estatutos -> condicion .)
    LEER            reduce using rule 44 (estatutos -> condicion .)
    RBRACE          reduce using rule 44 (estatutos -> condicion .)
    REGRESAR        reduce using rule 44 (estatutos -> condicion .)


state 56

    (45) estatutos -> imprimir .

    ID              reduce using rule 45 (estatutos -> imprimir .)
    PORCADA         reduce using rule 45 (estatutos -> imprimir .)
    MIENTRAS        reduce using rule 45 (estatutos -> imprimir .)
    SI              reduce using rule 45 (estatutos -> imprimir .)
    IMPRIMIR        reduce using rule 45 (estatutos -> imprimir .)
    LEER            reduce using rule 45 (estatutos -> imprimir .)
    RBRACE          reduce using rule 45 (estatutos -> imprimir .)
    REGRESAR        reduce using rule 45 (estatutos -> imprimir .)


state 57

    (46) estatutos -> leer .

    ID              reduce using rule 46 (estatutos -> leer .)
    PORCADA         reduce using rule 46 (estatutos -> leer .)
    MIENTRAS        reduce using rule 46 (estatutos -> leer .)
    SI              reduce using rule 46 (estatutos -> leer .)
    IMPRIMIR        reduce using rule 46 (estatutos -> leer .)
    LEER            reduce using rule 46 (estatutos -> leer .)
    RBRACE          reduce using rule 46 (estatutos -> leer .)
    REGRESAR        reduce using rule 46 (estatutos -> leer .)


state 58

    (49) asignar -> variable . ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON

    ASSIGN          shift and go to state 71


state 59

    (119) llamada_func -> ID . LPAREN llamadaCYCLE RPAREN SEMICOLON
    (52) variable -> ID . variable_aux
    (53) variable_aux -> . LBRACKET exp RBRACKET
    (54) variable_aux -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (55) variable_aux -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 72
    LBRACKET        shift and go to state 74
    ASSIGN          reduce using rule 130 (empty -> .)

    variable_aux                   shift and go to state 73
    empty                          shift and go to state 75

state 60

    (61) ciclo_for -> PORCADA . ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON

    ID              shift and go to state 76


state 61

    (57) ciclo_while -> MIENTRAS . punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON
    (58) punto_inicio_while -> .

    LPAREN          reduce using rule 58 (punto_inicio_while -> .)

    punto_inicio_while             shift and go to state 77

state 62

    (66) condicion -> SI . LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON

    LPAREN          shift and go to state 78


state 63

    (124) imprimir -> IMPRIMIR . LPAREN imprimir_aux RPAREN SEMICOLON

    LPAREN          shift and go to state 79


state 64

    (56) leer -> LEER . variable SEMICOLON
    (52) variable -> . ID variable_aux

    ID              shift and go to state 81

    variable                       shift and go to state 80

state 65

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN . parameter RPAREN LBRACE dec_var_cycle estatutos_aux dec_func_regresar RBRACE SEMICOLON
    (35) parameter -> . type ID punto_parameter parameterCycle
    (36) parameter -> . empty
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA
    (130) empty -> .

    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    LETRA           shift and go to state 33
    RPAREN          reduce using rule 130 (empty -> .)

    parameter                      shift and go to state 82
    type                           shift and go to state 83
    empty                          shift and go to state 84

state 66

    (14) simple_var -> VARIABLE type ARROW ID punto_simple_var . simpleVarCycle SEMICOLON
    (15) simpleVarCycle -> . COMMA ID punto_simple_var simpleVarCycle
    (16) simpleVarCycle -> . empty
    (130) empty -> .

    COMMA           shift and go to state 86
    SEMICOLON       reduce using rule 130 (empty -> .)

    simpleVarCycle                 shift and go to state 85
    empty                          shift and go to state 87

state 67

    (21) array -> RENGLON type ARROW ID LBRACKET . CTEI RBRACKET punto_array arrayCycle SEMICOLON

    CTEI            shift and go to state 88


state 68

    (25) matrix -> TABLA type ARROW ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    CTEI            shift and go to state 89


state 69

    (10) inicio -> INICIO LPAREN RPAREN LBRACE estatutos_aux RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 90


state 70

    (47) estatutos_aux -> estatutos estatutos_aux .

    RBRACE          reduce using rule 47 (estatutos_aux -> estatutos estatutos_aux .)
    REGRESAR        reduce using rule 47 (estatutos_aux -> estatutos estatutos_aux .)


state 71

    (49) asignar -> variable ASSIGN . push_op_igual hyper_exp check_op_igual SEMICOLON
    (50) push_op_igual -> .

    CTEI            reduce using rule 50 (push_op_igual -> .)
    CTEF            reduce using rule 50 (push_op_igual -> .)
    ID              reduce using rule 50 (push_op_igual -> .)
    LPAREN          reduce using rule 50 (push_op_igual -> .)

    push_op_igual                  shift and go to state 91

state 72

    (119) llamada_func -> ID LPAREN . llamadaCYCLE RPAREN SEMICOLON
    (120) llamadaCYCLE -> . hyper_exp llamadaCYCLE_aux
    (121) llamadaCYCLE -> . empty
    (72) hyper_exp -> . super_exp hyper_exp_aux
    (130) empty -> .
    (79) super_exp -> . exp super_exp_aux
    (90) exp -> . term check_op_masmenos exp_aux
    (97) term -> . factor check_op_pordiv term_aux
    (104) factor -> . factor_constante
    (105) factor -> . factor_variable
    (106) factor -> . factor_expresion
    (107) factor_constante -> . CTEI push_int
    (108) factor_constante -> . CTEF push_float
    (109) factor_variable -> . ID push_id
    (110) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> . ID llamada_func
    (113) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    RPAREN          reduce using rule 130 (empty -> .)
    CTEI            shift and go to state 104
    CTEF            shift and go to state 105
    ID              shift and go to state 92
    LPAREN          shift and go to state 93

    llamadaCYCLE                   shift and go to state 94
    hyper_exp                      shift and go to state 95
    empty                          shift and go to state 96
    super_exp                      shift and go to state 97
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    factor_constante               shift and go to state 101
    factor_variable                shift and go to state 102
    factor_expresion               shift and go to state 103

state 73

    (52) variable -> ID variable_aux .

    ASSIGN          reduce using rule 52 (variable -> ID variable_aux .)
    SEMICOLON       reduce using rule 52 (variable -> ID variable_aux .)


state 74

    (53) variable_aux -> LBRACKET . exp RBRACKET
    (54) variable_aux -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (90) exp -> . term check_op_masmenos exp_aux
    (97) term -> . factor check_op_pordiv term_aux
    (104) factor -> . factor_constante
    (105) factor -> . factor_variable
    (106) factor -> . factor_expresion
    (107) factor_constante -> . CTEI push_int
    (108) factor_constante -> . CTEF push_float
    (109) factor_variable -> . ID push_id
    (110) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> . ID llamada_func
    (113) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 104
    CTEF            shift and go to state 105
    ID              shift and go to state 92
    LPAREN          shift and go to state 93

    exp                            shift and go to state 106
    term                           shift and go to state 99
    factor                         shift and go to state 100
    factor_constante               shift and go to state 101
    factor_variable                shift and go to state 102
    factor_expresion               shift and go to state 103

state 75

    (55) variable_aux -> empty .

    ASSIGN          reduce using rule 55 (variable_aux -> empty .)
    SEMICOLON       reduce using rule 55 (variable_aux -> empty .)


state 76

    (61) ciclo_for -> PORCADA ID . punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON
    (62) punto_existe_id -> .

    ASSIGN          reduce using rule 62 (punto_existe_id -> .)

    punto_existe_id                shift and go to state 107

state 77

    (57) ciclo_while -> MIENTRAS punto_inicio_while . LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON

    LPAREN          shift and go to state 108


state 78

    (66) condicion -> SI LPAREN . hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON
    (72) hyper_exp -> . super_exp hyper_exp_aux
    (79) super_exp -> . exp super_exp_aux
    (90) exp -> . term check_op_masmenos exp_aux
    (97) term -> . factor check_op_pordiv term_aux
    (104) factor -> . factor_constante
    (105) factor -> . factor_variable
    (106) factor -> . factor_expresion
    (107) factor_constante -> . CTEI push_int
    (108) factor_constante -> . CTEF push_float
    (109) factor_variable -> . ID push_id
    (110) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> . ID llamada_func
    (113) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 104
    CTEF            shift and go to state 105
    ID              shift and go to state 92
    LPAREN          shift and go to state 93

    hyper_exp                      shift and go to state 109
    super_exp                      shift and go to state 97
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    factor_constante               shift and go to state 101
    factor_variable                shift and go to state 102
    factor_expresion               shift and go to state 103

state 79

    (124) imprimir -> IMPRIMIR LPAREN . imprimir_aux RPAREN SEMICOLON
    (125) imprimir_aux -> . exp push_imprimir imprimirCycle
    (126) imprimir_aux -> . CTESTRING push_imprimir imprimirCycle
    (90) exp -> . term check_op_masmenos exp_aux
    (97) term -> . factor check_op_pordiv term_aux
    (104) factor -> . factor_constante
    (105) factor -> . factor_variable
    (106) factor -> . factor_expresion
    (107) factor_constante -> . CTEI push_int
    (108) factor_constante -> . CTEF push_float
    (109) factor_variable -> . ID push_id
    (110) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> . ID llamada_func
    (113) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTESTRING       shift and go to state 112
    CTEI            shift and go to state 104
    CTEF            shift and go to state 105
    ID              shift and go to state 92
    LPAREN          shift and go to state 93

    imprimir_aux                   shift and go to state 110
    exp                            shift and go to state 111
    term                           shift and go to state 99
    factor                         shift and go to state 100
    factor_constante               shift and go to state 101
    factor_variable                shift and go to state 102
    factor_expresion               shift and go to state 103

state 80

    (56) leer -> LEER variable . SEMICOLON

    SEMICOLON       shift and go to state 113


state 81

    (52) variable -> ID . variable_aux
    (53) variable_aux -> . LBRACKET exp RBRACKET
    (54) variable_aux -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (55) variable_aux -> . empty
    (130) empty -> .

    LBRACKET        shift and go to state 74
    SEMICOLON       reduce using rule 130 (empty -> .)

    variable_aux                   shift and go to state 73
    empty                          shift and go to state 75

state 82

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter . RPAREN LBRACE dec_var_cycle estatutos_aux dec_func_regresar RBRACE SEMICOLON

    RPAREN          shift and go to state 114


state 83

    (35) parameter -> type . ID punto_parameter parameterCycle

    ID              shift and go to state 115


state 84

    (36) parameter -> empty .

    RPAREN          reduce using rule 36 (parameter -> empty .)


state 85

    (14) simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle . SEMICOLON

    SEMICOLON       shift and go to state 116


state 86

    (15) simpleVarCycle -> COMMA . ID punto_simple_var simpleVarCycle

    ID              shift and go to state 117


state 87

    (16) simpleVarCycle -> empty .

    SEMICOLON       reduce using rule 16 (simpleVarCycle -> empty .)


state 88

    (21) array -> RENGLON type ARROW ID LBRACKET CTEI . RBRACKET punto_array arrayCycle SEMICOLON

    RBRACKET        shift and go to state 118


state 89

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    RBRACKET        shift and go to state 119


state 90

    (10) inicio -> INICIO LPAREN RPAREN LBRACE estatutos_aux RBRACE SEMICOLON .

    $end            reduce using rule 10 (inicio -> INICIO LPAREN RPAREN LBRACE estatutos_aux RBRACE SEMICOLON .)


state 91

    (49) asignar -> variable ASSIGN push_op_igual . hyper_exp check_op_igual SEMICOLON
    (72) hyper_exp -> . super_exp hyper_exp_aux
    (79) super_exp -> . exp super_exp_aux
    (90) exp -> . term check_op_masmenos exp_aux
    (97) term -> . factor check_op_pordiv term_aux
    (104) factor -> . factor_constante
    (105) factor -> . factor_variable
    (106) factor -> . factor_expresion
    (107) factor_constante -> . CTEI push_int
    (108) factor_constante -> . CTEF push_float
    (109) factor_variable -> . ID push_id
    (110) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> . ID llamada_func
    (113) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 104
    CTEF            shift and go to state 105
    ID              shift and go to state 92
    LPAREN          shift and go to state 93

    hyper_exp                      shift and go to state 120
    super_exp                      shift and go to state 97
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    factor_constante               shift and go to state 101
    factor_variable                shift and go to state 102
    factor_expresion               shift and go to state 103

state 92

    (109) factor_variable -> ID . push_id
    (110) factor_variable -> ID . LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> ID . LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> ID . llamada_func
    (118) push_id -> .
    (119) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON

  ! shift/reduce conflict for ID resolved as shift
    LBRACKET        shift and go to state 123
    TIMES           reduce using rule 118 (push_id -> .)
    DIVIDE          reduce using rule 118 (push_id -> .)
    CTEI            reduce using rule 118 (push_id -> .)
    CTEF            reduce using rule 118 (push_id -> .)
    LPAREN          reduce using rule 118 (push_id -> .)
    PLUS            reduce using rule 118 (push_id -> .)
    MINUS           reduce using rule 118 (push_id -> .)
    GREATER         reduce using rule 118 (push_id -> .)
    LESS            reduce using rule 118 (push_id -> .)
    GREATEREQ       reduce using rule 118 (push_id -> .)
    LESSEQ          reduce using rule 118 (push_id -> .)
    NOTEQUAL        reduce using rule 118 (push_id -> .)
    EQUAL           reduce using rule 118 (push_id -> .)
    Y               reduce using rule 118 (push_id -> .)
    O               reduce using rule 118 (push_id -> .)
    COMMA           reduce using rule 118 (push_id -> .)
    RPAREN          reduce using rule 118 (push_id -> .)
    RBRACKET        reduce using rule 118 (push_id -> .)
    SEMICOLON       reduce using rule 118 (push_id -> .)
    HASTA           reduce using rule 118 (push_id -> .)
    LBRACE          reduce using rule 118 (push_id -> .)
    ID              shift and go to state 121

  ! ID              [ reduce using rule 118 (push_id -> .) ]

    push_id                        shift and go to state 122
    llamada_func                   shift and go to state 124

state 93

    (113) factor_expresion -> LPAREN . meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso
    (114) meter_fondo_falso -> .

    CTEI            reduce using rule 114 (meter_fondo_falso -> .)
    CTEF            reduce using rule 114 (meter_fondo_falso -> .)
    ID              reduce using rule 114 (meter_fondo_falso -> .)
    LPAREN          reduce using rule 114 (meter_fondo_falso -> .)

    meter_fondo_falso              shift and go to state 125

state 94

    (119) llamada_func -> ID LPAREN llamadaCYCLE . RPAREN SEMICOLON

    RPAREN          shift and go to state 126


state 95

    (120) llamadaCYCLE -> hyper_exp . llamadaCYCLE_aux
    (122) llamadaCYCLE_aux -> . COMMA hyper_exp llamadaCYCLE_aux
    (123) llamadaCYCLE_aux -> . empty
    (130) empty -> .

    COMMA           shift and go to state 128
    RPAREN          reduce using rule 130 (empty -> .)

    llamadaCYCLE_aux               shift and go to state 127
    empty                          shift and go to state 129

state 96

    (121) llamadaCYCLE -> empty .

    RPAREN          reduce using rule 121 (llamadaCYCLE -> empty .)


state 97

    (72) hyper_exp -> super_exp . hyper_exp_aux
    (73) hyper_exp_aux -> . push_op_logicos super_exp check_op_logicos
    (74) hyper_exp_aux -> . empty
    (76) push_op_logicos -> . Y
    (77) push_op_logicos -> . O
    (78) push_op_logicos -> . empty
    (130) empty -> .

    Y               shift and go to state 133
    O               shift and go to state 134
    COMMA           reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)
    SEMICOLON       reduce using rule 130 (empty -> .)
    RBRACKET        reduce using rule 130 (empty -> .)
    HASTA           reduce using rule 130 (empty -> .)
    LBRACE          reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)
    ID              reduce using rule 130 (empty -> .)
    LPAREN          reduce using rule 130 (empty -> .)

    hyper_exp_aux                  shift and go to state 130
    push_op_logicos                shift and go to state 131
    empty                          shift and go to state 132

state 98

    (79) super_exp -> exp . super_exp_aux
    (80) super_exp_aux -> . push_op_relacionales exp check_op_relacionales
    (81) super_exp_aux -> . empty
    (83) push_op_relacionales -> . GREATER
    (84) push_op_relacionales -> . LESS
    (85) push_op_relacionales -> . GREATEREQ
    (86) push_op_relacionales -> . LESSEQ
    (87) push_op_relacionales -> . NOTEQUAL
    (88) push_op_relacionales -> . EQUAL
    (89) push_op_relacionales -> . empty
    (130) empty -> .

    GREATER         shift and go to state 138
    LESS            shift and go to state 139
    GREATEREQ       shift and go to state 140
    LESSEQ          shift and go to state 141
    NOTEQUAL        shift and go to state 142
    EQUAL           shift and go to state 143
    Y               reduce using rule 130 (empty -> .)
    O               reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)
    ID              reduce using rule 130 (empty -> .)
    LPAREN          reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)
    SEMICOLON       reduce using rule 130 (empty -> .)
    RBRACKET        reduce using rule 130 (empty -> .)
    HASTA           reduce using rule 130 (empty -> .)
    LBRACE          reduce using rule 130 (empty -> .)

    super_exp_aux                  shift and go to state 135
    push_op_relacionales           shift and go to state 136
    empty                          shift and go to state 137

state 99

    (90) exp -> term . check_op_masmenos exp_aux
    (96) check_op_masmenos -> .

    PLUS            reduce using rule 96 (check_op_masmenos -> .)
    MINUS           reduce using rule 96 (check_op_masmenos -> .)
    CTEI            reduce using rule 96 (check_op_masmenos -> .)
    CTEF            reduce using rule 96 (check_op_masmenos -> .)
    ID              reduce using rule 96 (check_op_masmenos -> .)
    LPAREN          reduce using rule 96 (check_op_masmenos -> .)
    GREATER         reduce using rule 96 (check_op_masmenos -> .)
    LESS            reduce using rule 96 (check_op_masmenos -> .)
    GREATEREQ       reduce using rule 96 (check_op_masmenos -> .)
    LESSEQ          reduce using rule 96 (check_op_masmenos -> .)
    NOTEQUAL        reduce using rule 96 (check_op_masmenos -> .)
    EQUAL           reduce using rule 96 (check_op_masmenos -> .)
    Y               reduce using rule 96 (check_op_masmenos -> .)
    O               reduce using rule 96 (check_op_masmenos -> .)
    COMMA           reduce using rule 96 (check_op_masmenos -> .)
    RPAREN          reduce using rule 96 (check_op_masmenos -> .)
    RBRACKET        reduce using rule 96 (check_op_masmenos -> .)
    SEMICOLON       reduce using rule 96 (check_op_masmenos -> .)
    HASTA           reduce using rule 96 (check_op_masmenos -> .)
    LBRACE          reduce using rule 96 (check_op_masmenos -> .)

    check_op_masmenos              shift and go to state 144

state 100

    (97) term -> factor . check_op_pordiv term_aux
    (100) check_op_pordiv -> .

    TIMES           reduce using rule 100 (check_op_pordiv -> .)
    DIVIDE          reduce using rule 100 (check_op_pordiv -> .)
    CTEI            reduce using rule 100 (check_op_pordiv -> .)
    CTEF            reduce using rule 100 (check_op_pordiv -> .)
    ID              reduce using rule 100 (check_op_pordiv -> .)
    LPAREN          reduce using rule 100 (check_op_pordiv -> .)
    PLUS            reduce using rule 100 (check_op_pordiv -> .)
    MINUS           reduce using rule 100 (check_op_pordiv -> .)
    GREATER         reduce using rule 100 (check_op_pordiv -> .)
    LESS            reduce using rule 100 (check_op_pordiv -> .)
    GREATEREQ       reduce using rule 100 (check_op_pordiv -> .)
    LESSEQ          reduce using rule 100 (check_op_pordiv -> .)
    NOTEQUAL        reduce using rule 100 (check_op_pordiv -> .)
    EQUAL           reduce using rule 100 (check_op_pordiv -> .)
    Y               reduce using rule 100 (check_op_pordiv -> .)
    O               reduce using rule 100 (check_op_pordiv -> .)
    COMMA           reduce using rule 100 (check_op_pordiv -> .)
    RPAREN          reduce using rule 100 (check_op_pordiv -> .)
    RBRACKET        reduce using rule 100 (check_op_pordiv -> .)
    SEMICOLON       reduce using rule 100 (check_op_pordiv -> .)
    HASTA           reduce using rule 100 (check_op_pordiv -> .)
    LBRACE          reduce using rule 100 (check_op_pordiv -> .)

    check_op_pordiv                shift and go to state 145

state 101

    (104) factor -> factor_constante .

    TIMES           reduce using rule 104 (factor -> factor_constante .)
    DIVIDE          reduce using rule 104 (factor -> factor_constante .)
    CTEI            reduce using rule 104 (factor -> factor_constante .)
    CTEF            reduce using rule 104 (factor -> factor_constante .)
    ID              reduce using rule 104 (factor -> factor_constante .)
    LPAREN          reduce using rule 104 (factor -> factor_constante .)
    PLUS            reduce using rule 104 (factor -> factor_constante .)
    MINUS           reduce using rule 104 (factor -> factor_constante .)
    GREATER         reduce using rule 104 (factor -> factor_constante .)
    LESS            reduce using rule 104 (factor -> factor_constante .)
    GREATEREQ       reduce using rule 104 (factor -> factor_constante .)
    LESSEQ          reduce using rule 104 (factor -> factor_constante .)
    NOTEQUAL        reduce using rule 104 (factor -> factor_constante .)
    EQUAL           reduce using rule 104 (factor -> factor_constante .)
    Y               reduce using rule 104 (factor -> factor_constante .)
    O               reduce using rule 104 (factor -> factor_constante .)
    COMMA           reduce using rule 104 (factor -> factor_constante .)
    RPAREN          reduce using rule 104 (factor -> factor_constante .)
    RBRACKET        reduce using rule 104 (factor -> factor_constante .)
    SEMICOLON       reduce using rule 104 (factor -> factor_constante .)
    HASTA           reduce using rule 104 (factor -> factor_constante .)
    LBRACE          reduce using rule 104 (factor -> factor_constante .)


state 102

    (105) factor -> factor_variable .

    TIMES           reduce using rule 105 (factor -> factor_variable .)
    DIVIDE          reduce using rule 105 (factor -> factor_variable .)
    CTEI            reduce using rule 105 (factor -> factor_variable .)
    CTEF            reduce using rule 105 (factor -> factor_variable .)
    ID              reduce using rule 105 (factor -> factor_variable .)
    LPAREN          reduce using rule 105 (factor -> factor_variable .)
    PLUS            reduce using rule 105 (factor -> factor_variable .)
    MINUS           reduce using rule 105 (factor -> factor_variable .)
    GREATER         reduce using rule 105 (factor -> factor_variable .)
    LESS            reduce using rule 105 (factor -> factor_variable .)
    GREATEREQ       reduce using rule 105 (factor -> factor_variable .)
    LESSEQ          reduce using rule 105 (factor -> factor_variable .)
    NOTEQUAL        reduce using rule 105 (factor -> factor_variable .)
    EQUAL           reduce using rule 105 (factor -> factor_variable .)
    Y               reduce using rule 105 (factor -> factor_variable .)
    O               reduce using rule 105 (factor -> factor_variable .)
    COMMA           reduce using rule 105 (factor -> factor_variable .)
    RPAREN          reduce using rule 105 (factor -> factor_variable .)
    RBRACKET        reduce using rule 105 (factor -> factor_variable .)
    SEMICOLON       reduce using rule 105 (factor -> factor_variable .)
    HASTA           reduce using rule 105 (factor -> factor_variable .)
    LBRACE          reduce using rule 105 (factor -> factor_variable .)


state 103

    (106) factor -> factor_expresion .

    TIMES           reduce using rule 106 (factor -> factor_expresion .)
    DIVIDE          reduce using rule 106 (factor -> factor_expresion .)
    CTEI            reduce using rule 106 (factor -> factor_expresion .)
    CTEF            reduce using rule 106 (factor -> factor_expresion .)
    ID              reduce using rule 106 (factor -> factor_expresion .)
    LPAREN          reduce using rule 106 (factor -> factor_expresion .)
    PLUS            reduce using rule 106 (factor -> factor_expresion .)
    MINUS           reduce using rule 106 (factor -> factor_expresion .)
    GREATER         reduce using rule 106 (factor -> factor_expresion .)
    LESS            reduce using rule 106 (factor -> factor_expresion .)
    GREATEREQ       reduce using rule 106 (factor -> factor_expresion .)
    LESSEQ          reduce using rule 106 (factor -> factor_expresion .)
    NOTEQUAL        reduce using rule 106 (factor -> factor_expresion .)
    EQUAL           reduce using rule 106 (factor -> factor_expresion .)
    Y               reduce using rule 106 (factor -> factor_expresion .)
    O               reduce using rule 106 (factor -> factor_expresion .)
    COMMA           reduce using rule 106 (factor -> factor_expresion .)
    RPAREN          reduce using rule 106 (factor -> factor_expresion .)
    RBRACKET        reduce using rule 106 (factor -> factor_expresion .)
    SEMICOLON       reduce using rule 106 (factor -> factor_expresion .)
    HASTA           reduce using rule 106 (factor -> factor_expresion .)
    LBRACE          reduce using rule 106 (factor -> factor_expresion .)


state 104

    (107) factor_constante -> CTEI . push_int
    (116) push_int -> .

    TIMES           reduce using rule 116 (push_int -> .)
    DIVIDE          reduce using rule 116 (push_int -> .)
    CTEI            reduce using rule 116 (push_int -> .)
    CTEF            reduce using rule 116 (push_int -> .)
    ID              reduce using rule 116 (push_int -> .)
    LPAREN          reduce using rule 116 (push_int -> .)
    PLUS            reduce using rule 116 (push_int -> .)
    MINUS           reduce using rule 116 (push_int -> .)
    GREATER         reduce using rule 116 (push_int -> .)
    LESS            reduce using rule 116 (push_int -> .)
    GREATEREQ       reduce using rule 116 (push_int -> .)
    LESSEQ          reduce using rule 116 (push_int -> .)
    NOTEQUAL        reduce using rule 116 (push_int -> .)
    EQUAL           reduce using rule 116 (push_int -> .)
    Y               reduce using rule 116 (push_int -> .)
    O               reduce using rule 116 (push_int -> .)
    COMMA           reduce using rule 116 (push_int -> .)
    RPAREN          reduce using rule 116 (push_int -> .)
    RBRACKET        reduce using rule 116 (push_int -> .)
    SEMICOLON       reduce using rule 116 (push_int -> .)
    HASTA           reduce using rule 116 (push_int -> .)
    LBRACE          reduce using rule 116 (push_int -> .)

    push_int                       shift and go to state 146

state 105

    (108) factor_constante -> CTEF . push_float
    (117) push_float -> .

    TIMES           reduce using rule 117 (push_float -> .)
    DIVIDE          reduce using rule 117 (push_float -> .)
    CTEI            reduce using rule 117 (push_float -> .)
    CTEF            reduce using rule 117 (push_float -> .)
    ID              reduce using rule 117 (push_float -> .)
    LPAREN          reduce using rule 117 (push_float -> .)
    PLUS            reduce using rule 117 (push_float -> .)
    MINUS           reduce using rule 117 (push_float -> .)
    GREATER         reduce using rule 117 (push_float -> .)
    LESS            reduce using rule 117 (push_float -> .)
    GREATEREQ       reduce using rule 117 (push_float -> .)
    LESSEQ          reduce using rule 117 (push_float -> .)
    NOTEQUAL        reduce using rule 117 (push_float -> .)
    EQUAL           reduce using rule 117 (push_float -> .)
    Y               reduce using rule 117 (push_float -> .)
    O               reduce using rule 117 (push_float -> .)
    COMMA           reduce using rule 117 (push_float -> .)
    RPAREN          reduce using rule 117 (push_float -> .)
    RBRACKET        reduce using rule 117 (push_float -> .)
    SEMICOLON       reduce using rule 117 (push_float -> .)
    HASTA           reduce using rule 117 (push_float -> .)
    LBRACE          reduce using rule 117 (push_float -> .)

    push_float                     shift and go to state 147

state 106

    (53) variable_aux -> LBRACKET exp . RBRACKET
    (54) variable_aux -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET

    RBRACKET        shift and go to state 148


state 107

    (61) ciclo_for -> PORCADA ID punto_existe_id . ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON

    ASSIGN          shift and go to state 149


state 108

    (57) ciclo_while -> MIENTRAS punto_inicio_while LPAREN . hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON
    (72) hyper_exp -> . super_exp hyper_exp_aux
    (79) super_exp -> . exp super_exp_aux
    (90) exp -> . term check_op_masmenos exp_aux
    (97) term -> . factor check_op_pordiv term_aux
    (104) factor -> . factor_constante
    (105) factor -> . factor_variable
    (106) factor -> . factor_expresion
    (107) factor_constante -> . CTEI push_int
    (108) factor_constante -> . CTEF push_float
    (109) factor_variable -> . ID push_id
    (110) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> . ID llamada_func
    (113) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 104
    CTEF            shift and go to state 105
    ID              shift and go to state 92
    LPAREN          shift and go to state 93

    hyper_exp                      shift and go to state 150
    super_exp                      shift and go to state 97
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    factor_constante               shift and go to state 101
    factor_variable                shift and go to state 102
    factor_expresion               shift and go to state 103

state 109

    (66) condicion -> SI LPAREN hyper_exp . RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON

    RPAREN          shift and go to state 151


state 110

    (124) imprimir -> IMPRIMIR LPAREN imprimir_aux . RPAREN SEMICOLON

    RPAREN          shift and go to state 152


state 111

    (125) imprimir_aux -> exp . push_imprimir imprimirCycle
    (129) push_imprimir -> .

    COMMA           reduce using rule 129 (push_imprimir -> .)
    RPAREN          reduce using rule 129 (push_imprimir -> .)

    push_imprimir                  shift and go to state 153

state 112

    (126) imprimir_aux -> CTESTRING . push_imprimir imprimirCycle
    (129) push_imprimir -> .

    COMMA           reduce using rule 129 (push_imprimir -> .)
    RPAREN          reduce using rule 129 (push_imprimir -> .)

    push_imprimir                  shift and go to state 154

state 113

    (56) leer -> LEER variable SEMICOLON .

    ID              reduce using rule 56 (leer -> LEER variable SEMICOLON .)
    PORCADA         reduce using rule 56 (leer -> LEER variable SEMICOLON .)
    MIENTRAS        reduce using rule 56 (leer -> LEER variable SEMICOLON .)
    SI              reduce using rule 56 (leer -> LEER variable SEMICOLON .)
    IMPRIMIR        reduce using rule 56 (leer -> LEER variable SEMICOLON .)
    LEER            reduce using rule 56 (leer -> LEER variable SEMICOLON .)
    RBRACE          reduce using rule 56 (leer -> LEER variable SEMICOLON .)
    REGRESAR        reduce using rule 56 (leer -> LEER variable SEMICOLON .)


state 114

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN . LBRACE dec_var_cycle estatutos_aux dec_func_regresar RBRACE SEMICOLON

    LBRACE          shift and go to state 155


state 115

    (35) parameter -> type ID . punto_parameter parameterCycle
    (39) punto_parameter -> .

    COMMA           reduce using rule 39 (punto_parameter -> .)
    RPAREN          reduce using rule 39 (punto_parameter -> .)

    punto_parameter                shift and go to state 156

state 116

    (14) simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .

    VARIABLE        reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    RENGLON         reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    TABLA           reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    INICIO          reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    FUNCION         reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    ID              reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    PORCADA         reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    MIENTRAS        reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    SI              reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    LEER            reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    REGRESAR        reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)
    RBRACE          reduce using rule 14 (simple_var -> VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON .)


state 117

    (15) simpleVarCycle -> COMMA ID . punto_simple_var simpleVarCycle
    (17) punto_simple_var -> .

    COMMA           reduce using rule 17 (punto_simple_var -> .)
    SEMICOLON       reduce using rule 17 (punto_simple_var -> .)

    punto_simple_var               shift and go to state 157

state 118

    (21) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET . punto_array arrayCycle SEMICOLON
    (24) punto_array -> .

    COMMA           reduce using rule 24 (punto_array -> .)
    SEMICOLON       reduce using rule 24 (punto_array -> .)

    punto_array                    shift and go to state 158

state 119

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    LBRACKET        shift and go to state 159


state 120

    (49) asignar -> variable ASSIGN push_op_igual hyper_exp . check_op_igual SEMICOLON
    (51) check_op_igual -> .

    SEMICOLON       reduce using rule 51 (check_op_igual -> .)

    check_op_igual                 shift and go to state 160

state 121

    (119) llamada_func -> ID . LPAREN llamadaCYCLE RPAREN SEMICOLON

    LPAREN          shift and go to state 72


state 122

    (109) factor_variable -> ID push_id .

    TIMES           reduce using rule 109 (factor_variable -> ID push_id .)
    DIVIDE          reduce using rule 109 (factor_variable -> ID push_id .)
    CTEI            reduce using rule 109 (factor_variable -> ID push_id .)
    CTEF            reduce using rule 109 (factor_variable -> ID push_id .)
    ID              reduce using rule 109 (factor_variable -> ID push_id .)
    LPAREN          reduce using rule 109 (factor_variable -> ID push_id .)
    PLUS            reduce using rule 109 (factor_variable -> ID push_id .)
    MINUS           reduce using rule 109 (factor_variable -> ID push_id .)
    GREATER         reduce using rule 109 (factor_variable -> ID push_id .)
    LESS            reduce using rule 109 (factor_variable -> ID push_id .)
    GREATEREQ       reduce using rule 109 (factor_variable -> ID push_id .)
    LESSEQ          reduce using rule 109 (factor_variable -> ID push_id .)
    NOTEQUAL        reduce using rule 109 (factor_variable -> ID push_id .)
    EQUAL           reduce using rule 109 (factor_variable -> ID push_id .)
    Y               reduce using rule 109 (factor_variable -> ID push_id .)
    O               reduce using rule 109 (factor_variable -> ID push_id .)
    COMMA           reduce using rule 109 (factor_variable -> ID push_id .)
    RPAREN          reduce using rule 109 (factor_variable -> ID push_id .)
    RBRACKET        reduce using rule 109 (factor_variable -> ID push_id .)
    SEMICOLON       reduce using rule 109 (factor_variable -> ID push_id .)
    HASTA           reduce using rule 109 (factor_variable -> ID push_id .)
    LBRACE          reduce using rule 109 (factor_variable -> ID push_id .)


state 123

    (110) factor_variable -> ID LBRACKET . hyper_exp RBRACKET
    (111) factor_variable -> ID LBRACKET . hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (72) hyper_exp -> . super_exp hyper_exp_aux
    (79) super_exp -> . exp super_exp_aux
    (90) exp -> . term check_op_masmenos exp_aux
    (97) term -> . factor check_op_pordiv term_aux
    (104) factor -> . factor_constante
    (105) factor -> . factor_variable
    (106) factor -> . factor_expresion
    (107) factor_constante -> . CTEI push_int
    (108) factor_constante -> . CTEF push_float
    (109) factor_variable -> . ID push_id
    (110) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> . ID llamada_func
    (113) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 104
    CTEF            shift and go to state 105
    ID              shift and go to state 92
    LPAREN          shift and go to state 93

    hyper_exp                      shift and go to state 161
    super_exp                      shift and go to state 97
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    factor_constante               shift and go to state 101
    factor_variable                shift and go to state 102
    factor_expresion               shift and go to state 103

state 124

    (112) factor_variable -> ID llamada_func .

    TIMES           reduce using rule 112 (factor_variable -> ID llamada_func .)
    DIVIDE          reduce using rule 112 (factor_variable -> ID llamada_func .)
    CTEI            reduce using rule 112 (factor_variable -> ID llamada_func .)
    CTEF            reduce using rule 112 (factor_variable -> ID llamada_func .)
    ID              reduce using rule 112 (factor_variable -> ID llamada_func .)
    LPAREN          reduce using rule 112 (factor_variable -> ID llamada_func .)
    PLUS            reduce using rule 112 (factor_variable -> ID llamada_func .)
    MINUS           reduce using rule 112 (factor_variable -> ID llamada_func .)
    GREATER         reduce using rule 112 (factor_variable -> ID llamada_func .)
    LESS            reduce using rule 112 (factor_variable -> ID llamada_func .)
    GREATEREQ       reduce using rule 112 (factor_variable -> ID llamada_func .)
    LESSEQ          reduce using rule 112 (factor_variable -> ID llamada_func .)
    NOTEQUAL        reduce using rule 112 (factor_variable -> ID llamada_func .)
    EQUAL           reduce using rule 112 (factor_variable -> ID llamada_func .)
    Y               reduce using rule 112 (factor_variable -> ID llamada_func .)
    O               reduce using rule 112 (factor_variable -> ID llamada_func .)
    COMMA           reduce using rule 112 (factor_variable -> ID llamada_func .)
    RPAREN          reduce using rule 112 (factor_variable -> ID llamada_func .)
    RBRACKET        reduce using rule 112 (factor_variable -> ID llamada_func .)
    SEMICOLON       reduce using rule 112 (factor_variable -> ID llamada_func .)
    HASTA           reduce using rule 112 (factor_variable -> ID llamada_func .)
    LBRACE          reduce using rule 112 (factor_variable -> ID llamada_func .)


state 125

    (113) factor_expresion -> LPAREN meter_fondo_falso . hyper_exp RPAREN quitar_fondo_falso
    (72) hyper_exp -> . super_exp hyper_exp_aux
    (79) super_exp -> . exp super_exp_aux
    (90) exp -> . term check_op_masmenos exp_aux
    (97) term -> . factor check_op_pordiv term_aux
    (104) factor -> . factor_constante
    (105) factor -> . factor_variable
    (106) factor -> . factor_expresion
    (107) factor_constante -> . CTEI push_int
    (108) factor_constante -> . CTEF push_float
    (109) factor_variable -> . ID push_id
    (110) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> . ID llamada_func
    (113) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 104
    CTEF            shift and go to state 105
    ID              shift and go to state 92
    LPAREN          shift and go to state 93

    hyper_exp                      shift and go to state 162
    super_exp                      shift and go to state 97
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    factor_constante               shift and go to state 101
    factor_variable                shift and go to state 102
    factor_expresion               shift and go to state 103

state 126

    (119) llamada_func -> ID LPAREN llamadaCYCLE RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 163


state 127

    (120) llamadaCYCLE -> hyper_exp llamadaCYCLE_aux .

    RPAREN          reduce using rule 120 (llamadaCYCLE -> hyper_exp llamadaCYCLE_aux .)


state 128

    (122) llamadaCYCLE_aux -> COMMA . hyper_exp llamadaCYCLE_aux
    (72) hyper_exp -> . super_exp hyper_exp_aux
    (79) super_exp -> . exp super_exp_aux
    (90) exp -> . term check_op_masmenos exp_aux
    (97) term -> . factor check_op_pordiv term_aux
    (104) factor -> . factor_constante
    (105) factor -> . factor_variable
    (106) factor -> . factor_expresion
    (107) factor_constante -> . CTEI push_int
    (108) factor_constante -> . CTEF push_float
    (109) factor_variable -> . ID push_id
    (110) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> . ID llamada_func
    (113) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 104
    CTEF            shift and go to state 105
    ID              shift and go to state 92
    LPAREN          shift and go to state 93

    hyper_exp                      shift and go to state 164
    super_exp                      shift and go to state 97
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    factor_constante               shift and go to state 101
    factor_variable                shift and go to state 102
    factor_expresion               shift and go to state 103

state 129

    (123) llamadaCYCLE_aux -> empty .

    RPAREN          reduce using rule 123 (llamadaCYCLE_aux -> empty .)


state 130

    (72) hyper_exp -> super_exp hyper_exp_aux .

    COMMA           reduce using rule 72 (hyper_exp -> super_exp hyper_exp_aux .)
    RPAREN          reduce using rule 72 (hyper_exp -> super_exp hyper_exp_aux .)
    SEMICOLON       reduce using rule 72 (hyper_exp -> super_exp hyper_exp_aux .)
    RBRACKET        reduce using rule 72 (hyper_exp -> super_exp hyper_exp_aux .)
    HASTA           reduce using rule 72 (hyper_exp -> super_exp hyper_exp_aux .)
    LBRACE          reduce using rule 72 (hyper_exp -> super_exp hyper_exp_aux .)


state 131

    (73) hyper_exp_aux -> push_op_logicos . super_exp check_op_logicos
    (79) super_exp -> . exp super_exp_aux
    (90) exp -> . term check_op_masmenos exp_aux
    (97) term -> . factor check_op_pordiv term_aux
    (104) factor -> . factor_constante
    (105) factor -> . factor_variable
    (106) factor -> . factor_expresion
    (107) factor_constante -> . CTEI push_int
    (108) factor_constante -> . CTEF push_float
    (109) factor_variable -> . ID push_id
    (110) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> . ID llamada_func
    (113) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 104
    CTEF            shift and go to state 105
    ID              shift and go to state 92
    LPAREN          shift and go to state 93

    super_exp                      shift and go to state 165
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    factor_constante               shift and go to state 101
    factor_variable                shift and go to state 102
    factor_expresion               shift and go to state 103

state 132

    (74) hyper_exp_aux -> empty .
    (78) push_op_logicos -> empty .

    COMMA           reduce using rule 74 (hyper_exp_aux -> empty .)
    RPAREN          reduce using rule 74 (hyper_exp_aux -> empty .)
    SEMICOLON       reduce using rule 74 (hyper_exp_aux -> empty .)
    RBRACKET        reduce using rule 74 (hyper_exp_aux -> empty .)
    HASTA           reduce using rule 74 (hyper_exp_aux -> empty .)
    LBRACE          reduce using rule 74 (hyper_exp_aux -> empty .)
    CTEI            reduce using rule 78 (push_op_logicos -> empty .)
    CTEF            reduce using rule 78 (push_op_logicos -> empty .)
    ID              reduce using rule 78 (push_op_logicos -> empty .)
    LPAREN          reduce using rule 78 (push_op_logicos -> empty .)


state 133

    (76) push_op_logicos -> Y .

    CTEI            reduce using rule 76 (push_op_logicos -> Y .)
    CTEF            reduce using rule 76 (push_op_logicos -> Y .)
    ID              reduce using rule 76 (push_op_logicos -> Y .)
    LPAREN          reduce using rule 76 (push_op_logicos -> Y .)


state 134

    (77) push_op_logicos -> O .

    CTEI            reduce using rule 77 (push_op_logicos -> O .)
    CTEF            reduce using rule 77 (push_op_logicos -> O .)
    ID              reduce using rule 77 (push_op_logicos -> O .)
    LPAREN          reduce using rule 77 (push_op_logicos -> O .)


state 135

    (79) super_exp -> exp super_exp_aux .

    Y               reduce using rule 79 (super_exp -> exp super_exp_aux .)
    O               reduce using rule 79 (super_exp -> exp super_exp_aux .)
    CTEI            reduce using rule 79 (super_exp -> exp super_exp_aux .)
    CTEF            reduce using rule 79 (super_exp -> exp super_exp_aux .)
    ID              reduce using rule 79 (super_exp -> exp super_exp_aux .)
    LPAREN          reduce using rule 79 (super_exp -> exp super_exp_aux .)
    COMMA           reduce using rule 79 (super_exp -> exp super_exp_aux .)
    RPAREN          reduce using rule 79 (super_exp -> exp super_exp_aux .)
    SEMICOLON       reduce using rule 79 (super_exp -> exp super_exp_aux .)
    RBRACKET        reduce using rule 79 (super_exp -> exp super_exp_aux .)
    HASTA           reduce using rule 79 (super_exp -> exp super_exp_aux .)
    LBRACE          reduce using rule 79 (super_exp -> exp super_exp_aux .)


state 136

    (80) super_exp_aux -> push_op_relacionales . exp check_op_relacionales
    (90) exp -> . term check_op_masmenos exp_aux
    (97) term -> . factor check_op_pordiv term_aux
    (104) factor -> . factor_constante
    (105) factor -> . factor_variable
    (106) factor -> . factor_expresion
    (107) factor_constante -> . CTEI push_int
    (108) factor_constante -> . CTEF push_float
    (109) factor_variable -> . ID push_id
    (110) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> . ID llamada_func
    (113) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 104
    CTEF            shift and go to state 105
    ID              shift and go to state 92
    LPAREN          shift and go to state 93

    exp                            shift and go to state 166
    term                           shift and go to state 99
    factor                         shift and go to state 100
    factor_constante               shift and go to state 101
    factor_variable                shift and go to state 102
    factor_expresion               shift and go to state 103

state 137

    (81) super_exp_aux -> empty .
    (89) push_op_relacionales -> empty .

  ! reduce/reduce conflict for CTEI resolved using rule 81 (super_exp_aux -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 81 (super_exp_aux -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 81 (super_exp_aux -> empty .)
  ! reduce/reduce conflict for LPAREN resolved using rule 81 (super_exp_aux -> empty .)
    Y               reduce using rule 81 (super_exp_aux -> empty .)
    O               reduce using rule 81 (super_exp_aux -> empty .)
    CTEI            reduce using rule 81 (super_exp_aux -> empty .)
    CTEF            reduce using rule 81 (super_exp_aux -> empty .)
    ID              reduce using rule 81 (super_exp_aux -> empty .)
    LPAREN          reduce using rule 81 (super_exp_aux -> empty .)
    COMMA           reduce using rule 81 (super_exp_aux -> empty .)
    RPAREN          reduce using rule 81 (super_exp_aux -> empty .)
    SEMICOLON       reduce using rule 81 (super_exp_aux -> empty .)
    RBRACKET        reduce using rule 81 (super_exp_aux -> empty .)
    HASTA           reduce using rule 81 (super_exp_aux -> empty .)
    LBRACE          reduce using rule 81 (super_exp_aux -> empty .)

  ! CTEI            [ reduce using rule 89 (push_op_relacionales -> empty .) ]
  ! CTEF            [ reduce using rule 89 (push_op_relacionales -> empty .) ]
  ! ID              [ reduce using rule 89 (push_op_relacionales -> empty .) ]
  ! LPAREN          [ reduce using rule 89 (push_op_relacionales -> empty .) ]


state 138

    (83) push_op_relacionales -> GREATER .

    CTEI            reduce using rule 83 (push_op_relacionales -> GREATER .)
    CTEF            reduce using rule 83 (push_op_relacionales -> GREATER .)
    ID              reduce using rule 83 (push_op_relacionales -> GREATER .)
    LPAREN          reduce using rule 83 (push_op_relacionales -> GREATER .)


state 139

    (84) push_op_relacionales -> LESS .

    CTEI            reduce using rule 84 (push_op_relacionales -> LESS .)
    CTEF            reduce using rule 84 (push_op_relacionales -> LESS .)
    ID              reduce using rule 84 (push_op_relacionales -> LESS .)
    LPAREN          reduce using rule 84 (push_op_relacionales -> LESS .)


state 140

    (85) push_op_relacionales -> GREATEREQ .

    CTEI            reduce using rule 85 (push_op_relacionales -> GREATEREQ .)
    CTEF            reduce using rule 85 (push_op_relacionales -> GREATEREQ .)
    ID              reduce using rule 85 (push_op_relacionales -> GREATEREQ .)
    LPAREN          reduce using rule 85 (push_op_relacionales -> GREATEREQ .)


state 141

    (86) push_op_relacionales -> LESSEQ .

    CTEI            reduce using rule 86 (push_op_relacionales -> LESSEQ .)
    CTEF            reduce using rule 86 (push_op_relacionales -> LESSEQ .)
    ID              reduce using rule 86 (push_op_relacionales -> LESSEQ .)
    LPAREN          reduce using rule 86 (push_op_relacionales -> LESSEQ .)


state 142

    (87) push_op_relacionales -> NOTEQUAL .

    CTEI            reduce using rule 87 (push_op_relacionales -> NOTEQUAL .)
    CTEF            reduce using rule 87 (push_op_relacionales -> NOTEQUAL .)
    ID              reduce using rule 87 (push_op_relacionales -> NOTEQUAL .)
    LPAREN          reduce using rule 87 (push_op_relacionales -> NOTEQUAL .)


state 143

    (88) push_op_relacionales -> EQUAL .

    CTEI            reduce using rule 88 (push_op_relacionales -> EQUAL .)
    CTEF            reduce using rule 88 (push_op_relacionales -> EQUAL .)
    ID              reduce using rule 88 (push_op_relacionales -> EQUAL .)
    LPAREN          reduce using rule 88 (push_op_relacionales -> EQUAL .)


state 144

    (90) exp -> term check_op_masmenos . exp_aux
    (91) exp_aux -> . push_op_exp_masmenos exp
    (92) exp_aux -> . empty
    (93) push_op_exp_masmenos -> . PLUS
    (94) push_op_exp_masmenos -> . MINUS
    (95) push_op_exp_masmenos -> . empty
    (130) empty -> .

    PLUS            shift and go to state 170
    MINUS           shift and go to state 171
    GREATER         reduce using rule 130 (empty -> .)
    LESS            reduce using rule 130 (empty -> .)
    GREATEREQ       reduce using rule 130 (empty -> .)
    LESSEQ          reduce using rule 130 (empty -> .)
    NOTEQUAL        reduce using rule 130 (empty -> .)
    EQUAL           reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)
    ID              reduce using rule 130 (empty -> .)
    LPAREN          reduce using rule 130 (empty -> .)
    Y               reduce using rule 130 (empty -> .)
    O               reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)
    RBRACKET        reduce using rule 130 (empty -> .)
    SEMICOLON       reduce using rule 130 (empty -> .)
    HASTA           reduce using rule 130 (empty -> .)
    LBRACE          reduce using rule 130 (empty -> .)

    exp_aux                        shift and go to state 167
    push_op_exp_masmenos           shift and go to state 168
    empty                          shift and go to state 169

state 145

    (97) term -> factor check_op_pordiv . term_aux
    (98) term_aux -> . push_op_exp_pordiv term
    (99) term_aux -> . empty
    (101) push_op_exp_pordiv -> . TIMES
    (102) push_op_exp_pordiv -> . DIVIDE
    (103) push_op_exp_pordiv -> . empty
    (130) empty -> .

    TIMES           shift and go to state 175
    DIVIDE          shift and go to state 176
    PLUS            reduce using rule 130 (empty -> .)
    MINUS           reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)
    ID              reduce using rule 130 (empty -> .)
    LPAREN          reduce using rule 130 (empty -> .)
    GREATER         reduce using rule 130 (empty -> .)
    LESS            reduce using rule 130 (empty -> .)
    GREATEREQ       reduce using rule 130 (empty -> .)
    LESSEQ          reduce using rule 130 (empty -> .)
    NOTEQUAL        reduce using rule 130 (empty -> .)
    EQUAL           reduce using rule 130 (empty -> .)
    Y               reduce using rule 130 (empty -> .)
    O               reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)
    RBRACKET        reduce using rule 130 (empty -> .)
    SEMICOLON       reduce using rule 130 (empty -> .)
    HASTA           reduce using rule 130 (empty -> .)
    LBRACE          reduce using rule 130 (empty -> .)

    term_aux                       shift and go to state 172
    push_op_exp_pordiv             shift and go to state 173
    empty                          shift and go to state 174

state 146

    (107) factor_constante -> CTEI push_int .

    TIMES           reduce using rule 107 (factor_constante -> CTEI push_int .)
    DIVIDE          reduce using rule 107 (factor_constante -> CTEI push_int .)
    CTEI            reduce using rule 107 (factor_constante -> CTEI push_int .)
    CTEF            reduce using rule 107 (factor_constante -> CTEI push_int .)
    ID              reduce using rule 107 (factor_constante -> CTEI push_int .)
    LPAREN          reduce using rule 107 (factor_constante -> CTEI push_int .)
    PLUS            reduce using rule 107 (factor_constante -> CTEI push_int .)
    MINUS           reduce using rule 107 (factor_constante -> CTEI push_int .)
    GREATER         reduce using rule 107 (factor_constante -> CTEI push_int .)
    LESS            reduce using rule 107 (factor_constante -> CTEI push_int .)
    GREATEREQ       reduce using rule 107 (factor_constante -> CTEI push_int .)
    LESSEQ          reduce using rule 107 (factor_constante -> CTEI push_int .)
    NOTEQUAL        reduce using rule 107 (factor_constante -> CTEI push_int .)
    EQUAL           reduce using rule 107 (factor_constante -> CTEI push_int .)
    Y               reduce using rule 107 (factor_constante -> CTEI push_int .)
    O               reduce using rule 107 (factor_constante -> CTEI push_int .)
    COMMA           reduce using rule 107 (factor_constante -> CTEI push_int .)
    RPAREN          reduce using rule 107 (factor_constante -> CTEI push_int .)
    RBRACKET        reduce using rule 107 (factor_constante -> CTEI push_int .)
    SEMICOLON       reduce using rule 107 (factor_constante -> CTEI push_int .)
    HASTA           reduce using rule 107 (factor_constante -> CTEI push_int .)
    LBRACE          reduce using rule 107 (factor_constante -> CTEI push_int .)


state 147

    (108) factor_constante -> CTEF push_float .

    TIMES           reduce using rule 108 (factor_constante -> CTEF push_float .)
    DIVIDE          reduce using rule 108 (factor_constante -> CTEF push_float .)
    CTEI            reduce using rule 108 (factor_constante -> CTEF push_float .)
    CTEF            reduce using rule 108 (factor_constante -> CTEF push_float .)
    ID              reduce using rule 108 (factor_constante -> CTEF push_float .)
    LPAREN          reduce using rule 108 (factor_constante -> CTEF push_float .)
    PLUS            reduce using rule 108 (factor_constante -> CTEF push_float .)
    MINUS           reduce using rule 108 (factor_constante -> CTEF push_float .)
    GREATER         reduce using rule 108 (factor_constante -> CTEF push_float .)
    LESS            reduce using rule 108 (factor_constante -> CTEF push_float .)
    GREATEREQ       reduce using rule 108 (factor_constante -> CTEF push_float .)
    LESSEQ          reduce using rule 108 (factor_constante -> CTEF push_float .)
    NOTEQUAL        reduce using rule 108 (factor_constante -> CTEF push_float .)
    EQUAL           reduce using rule 108 (factor_constante -> CTEF push_float .)
    Y               reduce using rule 108 (factor_constante -> CTEF push_float .)
    O               reduce using rule 108 (factor_constante -> CTEF push_float .)
    COMMA           reduce using rule 108 (factor_constante -> CTEF push_float .)
    RPAREN          reduce using rule 108 (factor_constante -> CTEF push_float .)
    RBRACKET        reduce using rule 108 (factor_constante -> CTEF push_float .)
    SEMICOLON       reduce using rule 108 (factor_constante -> CTEF push_float .)
    HASTA           reduce using rule 108 (factor_constante -> CTEF push_float .)
    LBRACE          reduce using rule 108 (factor_constante -> CTEF push_float .)


state 148

    (53) variable_aux -> LBRACKET exp RBRACKET .
    (54) variable_aux -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    ASSIGN          reduce using rule 53 (variable_aux -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 53 (variable_aux -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 177


state 149

    (61) ciclo_for -> PORCADA ID punto_existe_id ASSIGN . hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON
    (72) hyper_exp -> . super_exp hyper_exp_aux
    (79) super_exp -> . exp super_exp_aux
    (90) exp -> . term check_op_masmenos exp_aux
    (97) term -> . factor check_op_pordiv term_aux
    (104) factor -> . factor_constante
    (105) factor -> . factor_variable
    (106) factor -> . factor_expresion
    (107) factor_constante -> . CTEI push_int
    (108) factor_constante -> . CTEF push_float
    (109) factor_variable -> . ID push_id
    (110) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> . ID llamada_func
    (113) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 104
    CTEF            shift and go to state 105
    ID              shift and go to state 92
    LPAREN          shift and go to state 93

    hyper_exp                      shift and go to state 178
    super_exp                      shift and go to state 97
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    factor_constante               shift and go to state 101
    factor_variable                shift and go to state 102
    factor_expresion               shift and go to state 103

state 150

    (57) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp . RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON

    RPAREN          shift and go to state 179


state 151

    (66) condicion -> SI LPAREN hyper_exp RPAREN . punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON
    (69) punto_si -> .

    LBRACE          reduce using rule 69 (punto_si -> .)

    punto_si                       shift and go to state 180

state 152

    (124) imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 181


state 153

    (125) imprimir_aux -> exp push_imprimir . imprimirCycle
    (127) imprimirCycle -> . COMMA imprimir_aux
    (128) imprimirCycle -> . empty
    (130) empty -> .

    COMMA           shift and go to state 183
    RPAREN          reduce using rule 130 (empty -> .)

    imprimirCycle                  shift and go to state 182
    empty                          shift and go to state 184

state 154

    (126) imprimir_aux -> CTESTRING push_imprimir . imprimirCycle
    (127) imprimirCycle -> . COMMA imprimir_aux
    (128) imprimirCycle -> . empty
    (130) empty -> .

    COMMA           shift and go to state 183
    RPAREN          reduce using rule 130 (empty -> .)

    imprimirCycle                  shift and go to state 185
    empty                          shift and go to state 184

state 155

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE . dec_var_cycle estatutos_aux dec_func_regresar RBRACE SEMICOLON
    (5) dec_var_cycle -> . dec_var dec_var_cycle
    (6) dec_var_cycle -> . empty
    (11) dec_var -> . simple_var
    (12) dec_var -> . array
    (13) dec_var -> . matrix
    (130) empty -> .
    (14) simple_var -> . VARIABLE type ARROW ID punto_simple_var simpleVarCycle SEMICOLON
    (21) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON
    (25) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    ID              reduce using rule 130 (empty -> .)
    PORCADA         reduce using rule 130 (empty -> .)
    MIENTRAS        reduce using rule 130 (empty -> .)
    SI              reduce using rule 130 (empty -> .)
    IMPRIMIR        reduce using rule 130 (empty -> .)
    LEER            reduce using rule 130 (empty -> .)
    REGRESAR        reduce using rule 130 (empty -> .)
    RBRACE          reduce using rule 130 (empty -> .)
    VARIABLE        shift and go to state 17
    RENGLON         shift and go to state 18
    TABLA           shift and go to state 19

    dec_var_cycle                  shift and go to state 186
    dec_var                        shift and go to state 10
    empty                          shift and go to state 26
    simple_var                     shift and go to state 13
    array                          shift and go to state 14
    matrix                         shift and go to state 15

state 156

    (35) parameter -> type ID punto_parameter . parameterCycle
    (37) parameterCycle -> . COMMA type ID punto_parameter parameterCycle
    (38) parameterCycle -> . empty
    (130) empty -> .

    COMMA           shift and go to state 188
    RPAREN          reduce using rule 130 (empty -> .)

    parameterCycle                 shift and go to state 187
    empty                          shift and go to state 189

state 157

    (15) simpleVarCycle -> COMMA ID punto_simple_var . simpleVarCycle
    (15) simpleVarCycle -> . COMMA ID punto_simple_var simpleVarCycle
    (16) simpleVarCycle -> . empty
    (130) empty -> .

    COMMA           shift and go to state 86
    SEMICOLON       reduce using rule 130 (empty -> .)

    simpleVarCycle                 shift and go to state 190
    empty                          shift and go to state 87

state 158

    (21) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array . arrayCycle SEMICOLON
    (22) arrayCycle -> . COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle
    (23) arrayCycle -> . empty
    (130) empty -> .

    COMMA           shift and go to state 192
    SEMICOLON       reduce using rule 130 (empty -> .)

    arrayCycle                     shift and go to state 191
    empty                          shift and go to state 193

state 159

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET punto_matrix matrixCycle SEMICOLON

    CTEI            shift and go to state 194


state 160

    (49) asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual . SEMICOLON

    SEMICOLON       shift and go to state 195


state 161

    (110) factor_variable -> ID LBRACKET hyper_exp . RBRACKET
    (111) factor_variable -> ID LBRACKET hyper_exp . RBRACKET LBRACKET hyper_exp RBRACKET

    RBRACKET        shift and go to state 196


state 162

    (113) factor_expresion -> LPAREN meter_fondo_falso hyper_exp . RPAREN quitar_fondo_falso

    RPAREN          shift and go to state 197


state 163

    (119) llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .

    ID              reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    PORCADA         reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    SI              reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LEER            reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    RBRACE          reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    REGRESAR        reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    TIMES           reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    CTEI            reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    CTEF            reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LPAREN          reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    PLUS            reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    MINUS           reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    GREATER         reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LESS            reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    GREATEREQ       reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LESSEQ          reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    EQUAL           reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    Y               reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    O               reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    COMMA           reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    RPAREN          reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    HASTA           reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LBRACE          reduce using rule 119 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)


state 164

    (122) llamadaCYCLE_aux -> COMMA hyper_exp . llamadaCYCLE_aux
    (122) llamadaCYCLE_aux -> . COMMA hyper_exp llamadaCYCLE_aux
    (123) llamadaCYCLE_aux -> . empty
    (130) empty -> .

    COMMA           shift and go to state 128
    RPAREN          reduce using rule 130 (empty -> .)

    llamadaCYCLE_aux               shift and go to state 198
    empty                          shift and go to state 129

state 165

    (73) hyper_exp_aux -> push_op_logicos super_exp . check_op_logicos
    (75) check_op_logicos -> .

    COMMA           reduce using rule 75 (check_op_logicos -> .)
    RPAREN          reduce using rule 75 (check_op_logicos -> .)
    SEMICOLON       reduce using rule 75 (check_op_logicos -> .)
    RBRACKET        reduce using rule 75 (check_op_logicos -> .)
    HASTA           reduce using rule 75 (check_op_logicos -> .)
    LBRACE          reduce using rule 75 (check_op_logicos -> .)

    check_op_logicos               shift and go to state 199

state 166

    (80) super_exp_aux -> push_op_relacionales exp . check_op_relacionales
    (82) check_op_relacionales -> .

    Y               reduce using rule 82 (check_op_relacionales -> .)
    O               reduce using rule 82 (check_op_relacionales -> .)
    CTEI            reduce using rule 82 (check_op_relacionales -> .)
    CTEF            reduce using rule 82 (check_op_relacionales -> .)
    ID              reduce using rule 82 (check_op_relacionales -> .)
    LPAREN          reduce using rule 82 (check_op_relacionales -> .)
    COMMA           reduce using rule 82 (check_op_relacionales -> .)
    RPAREN          reduce using rule 82 (check_op_relacionales -> .)
    SEMICOLON       reduce using rule 82 (check_op_relacionales -> .)
    RBRACKET        reduce using rule 82 (check_op_relacionales -> .)
    HASTA           reduce using rule 82 (check_op_relacionales -> .)
    LBRACE          reduce using rule 82 (check_op_relacionales -> .)

    check_op_relacionales          shift and go to state 200

state 167

    (90) exp -> term check_op_masmenos exp_aux .

    GREATER         reduce using rule 90 (exp -> term check_op_masmenos exp_aux .)
    LESS            reduce using rule 90 (exp -> term check_op_masmenos exp_aux .)
    GREATEREQ       reduce using rule 90 (exp -> term check_op_masmenos exp_aux .)
    LESSEQ          reduce using rule 90 (exp -> term check_op_masmenos exp_aux .)
    NOTEQUAL        reduce using rule 90 (exp -> term check_op_masmenos exp_aux .)
    EQUAL           reduce using rule 90 (exp -> term check_op_masmenos exp_aux .)
    CTEI            reduce using rule 90 (exp -> term check_op_masmenos exp_aux .)
    CTEF            reduce using rule 90 (exp -> term check_op_masmenos exp_aux .)
    ID              reduce using rule 90 (exp -> term check_op_masmenos exp_aux .)
    LPAREN          reduce using rule 90 (exp -> term check_op_masmenos exp_aux .)
    Y               reduce using rule 90 (exp -> term check_op_masmenos exp_aux .)
    O               reduce using rule 90 (exp -> term check_op_masmenos exp_aux .)
    COMMA           reduce using rule 90 (exp -> term check_op_masmenos exp_aux .)
    RPAREN          reduce using rule 90 (exp -> term check_op_masmenos exp_aux .)
    RBRACKET        reduce using rule 90 (exp -> term check_op_masmenos exp_aux .)
    SEMICOLON       reduce using rule 90 (exp -> term check_op_masmenos exp_aux .)
    HASTA           reduce using rule 90 (exp -> term check_op_masmenos exp_aux .)
    LBRACE          reduce using rule 90 (exp -> term check_op_masmenos exp_aux .)


state 168

    (91) exp_aux -> push_op_exp_masmenos . exp
    (90) exp -> . term check_op_masmenos exp_aux
    (97) term -> . factor check_op_pordiv term_aux
    (104) factor -> . factor_constante
    (105) factor -> . factor_variable
    (106) factor -> . factor_expresion
    (107) factor_constante -> . CTEI push_int
    (108) factor_constante -> . CTEF push_float
    (109) factor_variable -> . ID push_id
    (110) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> . ID llamada_func
    (113) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 104
    CTEF            shift and go to state 105
    ID              shift and go to state 92
    LPAREN          shift and go to state 93

    exp                            shift and go to state 201
    term                           shift and go to state 99
    factor                         shift and go to state 100
    factor_constante               shift and go to state 101
    factor_variable                shift and go to state 102
    factor_expresion               shift and go to state 103

state 169

    (92) exp_aux -> empty .
    (95) push_op_exp_masmenos -> empty .

  ! reduce/reduce conflict for CTEI resolved using rule 92 (exp_aux -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 92 (exp_aux -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 92 (exp_aux -> empty .)
  ! reduce/reduce conflict for LPAREN resolved using rule 92 (exp_aux -> empty .)
    GREATER         reduce using rule 92 (exp_aux -> empty .)
    LESS            reduce using rule 92 (exp_aux -> empty .)
    GREATEREQ       reduce using rule 92 (exp_aux -> empty .)
    LESSEQ          reduce using rule 92 (exp_aux -> empty .)
    NOTEQUAL        reduce using rule 92 (exp_aux -> empty .)
    EQUAL           reduce using rule 92 (exp_aux -> empty .)
    CTEI            reduce using rule 92 (exp_aux -> empty .)
    CTEF            reduce using rule 92 (exp_aux -> empty .)
    ID              reduce using rule 92 (exp_aux -> empty .)
    LPAREN          reduce using rule 92 (exp_aux -> empty .)
    Y               reduce using rule 92 (exp_aux -> empty .)
    O               reduce using rule 92 (exp_aux -> empty .)
    COMMA           reduce using rule 92 (exp_aux -> empty .)
    RPAREN          reduce using rule 92 (exp_aux -> empty .)
    RBRACKET        reduce using rule 92 (exp_aux -> empty .)
    SEMICOLON       reduce using rule 92 (exp_aux -> empty .)
    HASTA           reduce using rule 92 (exp_aux -> empty .)
    LBRACE          reduce using rule 92 (exp_aux -> empty .)

  ! CTEI            [ reduce using rule 95 (push_op_exp_masmenos -> empty .) ]
  ! CTEF            [ reduce using rule 95 (push_op_exp_masmenos -> empty .) ]
  ! ID              [ reduce using rule 95 (push_op_exp_masmenos -> empty .) ]
  ! LPAREN          [ reduce using rule 95 (push_op_exp_masmenos -> empty .) ]


state 170

    (93) push_op_exp_masmenos -> PLUS .

    CTEI            reduce using rule 93 (push_op_exp_masmenos -> PLUS .)
    CTEF            reduce using rule 93 (push_op_exp_masmenos -> PLUS .)
    ID              reduce using rule 93 (push_op_exp_masmenos -> PLUS .)
    LPAREN          reduce using rule 93 (push_op_exp_masmenos -> PLUS .)


state 171

    (94) push_op_exp_masmenos -> MINUS .

    CTEI            reduce using rule 94 (push_op_exp_masmenos -> MINUS .)
    CTEF            reduce using rule 94 (push_op_exp_masmenos -> MINUS .)
    ID              reduce using rule 94 (push_op_exp_masmenos -> MINUS .)
    LPAREN          reduce using rule 94 (push_op_exp_masmenos -> MINUS .)


state 172

    (97) term -> factor check_op_pordiv term_aux .

    PLUS            reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    MINUS           reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    CTEI            reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    CTEF            reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    ID              reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    LPAREN          reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    GREATER         reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    LESS            reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    GREATEREQ       reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    LESSEQ          reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    NOTEQUAL        reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    EQUAL           reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    Y               reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    O               reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    COMMA           reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    RPAREN          reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    RBRACKET        reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    SEMICOLON       reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    HASTA           reduce using rule 97 (term -> factor check_op_pordiv term_aux .)
    LBRACE          reduce using rule 97 (term -> factor check_op_pordiv term_aux .)


state 173

    (98) term_aux -> push_op_exp_pordiv . term
    (97) term -> . factor check_op_pordiv term_aux
    (104) factor -> . factor_constante
    (105) factor -> . factor_variable
    (106) factor -> . factor_expresion
    (107) factor_constante -> . CTEI push_int
    (108) factor_constante -> . CTEF push_float
    (109) factor_variable -> . ID push_id
    (110) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> . ID llamada_func
    (113) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 104
    CTEF            shift and go to state 105
    ID              shift and go to state 92
    LPAREN          shift and go to state 93

    term                           shift and go to state 202
    factor                         shift and go to state 100
    factor_constante               shift and go to state 101
    factor_variable                shift and go to state 102
    factor_expresion               shift and go to state 103

state 174

    (99) term_aux -> empty .
    (103) push_op_exp_pordiv -> empty .

  ! reduce/reduce conflict for CTEI resolved using rule 99 (term_aux -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 99 (term_aux -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 99 (term_aux -> empty .)
  ! reduce/reduce conflict for LPAREN resolved using rule 99 (term_aux -> empty .)
    PLUS            reduce using rule 99 (term_aux -> empty .)
    MINUS           reduce using rule 99 (term_aux -> empty .)
    CTEI            reduce using rule 99 (term_aux -> empty .)
    CTEF            reduce using rule 99 (term_aux -> empty .)
    ID              reduce using rule 99 (term_aux -> empty .)
    LPAREN          reduce using rule 99 (term_aux -> empty .)
    GREATER         reduce using rule 99 (term_aux -> empty .)
    LESS            reduce using rule 99 (term_aux -> empty .)
    GREATEREQ       reduce using rule 99 (term_aux -> empty .)
    LESSEQ          reduce using rule 99 (term_aux -> empty .)
    NOTEQUAL        reduce using rule 99 (term_aux -> empty .)
    EQUAL           reduce using rule 99 (term_aux -> empty .)
    Y               reduce using rule 99 (term_aux -> empty .)
    O               reduce using rule 99 (term_aux -> empty .)
    COMMA           reduce using rule 99 (term_aux -> empty .)
    RPAREN          reduce using rule 99 (term_aux -> empty .)
    RBRACKET        reduce using rule 99 (term_aux -> empty .)
    SEMICOLON       reduce using rule 99 (term_aux -> empty .)
    HASTA           reduce using rule 99 (term_aux -> empty .)
    LBRACE          reduce using rule 99 (term_aux -> empty .)

  ! CTEI            [ reduce using rule 103 (push_op_exp_pordiv -> empty .) ]
  ! CTEF            [ reduce using rule 103 (push_op_exp_pordiv -> empty .) ]
  ! ID              [ reduce using rule 103 (push_op_exp_pordiv -> empty .) ]
  ! LPAREN          [ reduce using rule 103 (push_op_exp_pordiv -> empty .) ]


state 175

    (101) push_op_exp_pordiv -> TIMES .

    CTEI            reduce using rule 101 (push_op_exp_pordiv -> TIMES .)
    CTEF            reduce using rule 101 (push_op_exp_pordiv -> TIMES .)
    ID              reduce using rule 101 (push_op_exp_pordiv -> TIMES .)
    LPAREN          reduce using rule 101 (push_op_exp_pordiv -> TIMES .)


state 176

    (102) push_op_exp_pordiv -> DIVIDE .

    CTEI            reduce using rule 102 (push_op_exp_pordiv -> DIVIDE .)
    CTEF            reduce using rule 102 (push_op_exp_pordiv -> DIVIDE .)
    ID              reduce using rule 102 (push_op_exp_pordiv -> DIVIDE .)
    LPAREN          reduce using rule 102 (push_op_exp_pordiv -> DIVIDE .)


state 177

    (54) variable_aux -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (90) exp -> . term check_op_masmenos exp_aux
    (97) term -> . factor check_op_pordiv term_aux
    (104) factor -> . factor_constante
    (105) factor -> . factor_variable
    (106) factor -> . factor_expresion
    (107) factor_constante -> . CTEI push_int
    (108) factor_constante -> . CTEF push_float
    (109) factor_variable -> . ID push_id
    (110) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> . ID llamada_func
    (113) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 104
    CTEF            shift and go to state 105
    ID              shift and go to state 92
    LPAREN          shift and go to state 93

    exp                            shift and go to state 203
    term                           shift and go to state 99
    factor                         shift and go to state 100
    factor_constante               shift and go to state 101
    factor_variable                shift and go to state 102
    factor_expresion               shift and go to state 103

state 178

    (61) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp . punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON
    (63) punto_valida_int -> .

    HASTA           reduce using rule 63 (punto_valida_int -> .)

    punto_valida_int               shift and go to state 204

state 179

    (57) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN . punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON
    (59) punto_medio_while -> .

    LBRACE          reduce using rule 59 (punto_medio_while -> .)

    punto_medio_while              shift and go to state 205

state 180

    (66) condicion -> SI LPAREN hyper_exp RPAREN punto_si . LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON

    LBRACE          shift and go to state 206


state 181

    (124) imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .

    ID              reduce using rule 124 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    PORCADA         reduce using rule 124 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 124 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    SI              reduce using rule 124 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 124 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    LEER            reduce using rule 124 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    RBRACE          reduce using rule 124 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)
    REGRESAR        reduce using rule 124 (imprimir -> IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON .)


state 182

    (125) imprimir_aux -> exp push_imprimir imprimirCycle .

    RPAREN          reduce using rule 125 (imprimir_aux -> exp push_imprimir imprimirCycle .)


state 183

    (127) imprimirCycle -> COMMA . imprimir_aux
    (125) imprimir_aux -> . exp push_imprimir imprimirCycle
    (126) imprimir_aux -> . CTESTRING push_imprimir imprimirCycle
    (90) exp -> . term check_op_masmenos exp_aux
    (97) term -> . factor check_op_pordiv term_aux
    (104) factor -> . factor_constante
    (105) factor -> . factor_variable
    (106) factor -> . factor_expresion
    (107) factor_constante -> . CTEI push_int
    (108) factor_constante -> . CTEF push_float
    (109) factor_variable -> . ID push_id
    (110) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> . ID llamada_func
    (113) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTESTRING       shift and go to state 112
    CTEI            shift and go to state 104
    CTEF            shift and go to state 105
    ID              shift and go to state 92
    LPAREN          shift and go to state 93

    imprimir_aux                   shift and go to state 207
    exp                            shift and go to state 111
    term                           shift and go to state 99
    factor                         shift and go to state 100
    factor_constante               shift and go to state 101
    factor_variable                shift and go to state 102
    factor_expresion               shift and go to state 103

state 184

    (128) imprimirCycle -> empty .

    RPAREN          reduce using rule 128 (imprimirCycle -> empty .)


state 185

    (126) imprimir_aux -> CTESTRING push_imprimir imprimirCycle .

    RPAREN          reduce using rule 126 (imprimir_aux -> CTESTRING push_imprimir imprimirCycle .)


state 186

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle . estatutos_aux dec_func_regresar RBRACE SEMICOLON
    (47) estatutos_aux -> . estatutos estatutos_aux
    (48) estatutos_aux -> . empty
    (40) estatutos -> . asignar
    (41) estatutos -> . llamada_func
    (42) estatutos -> . ciclo_for
    (43) estatutos -> . ciclo_while
    (44) estatutos -> . condicion
    (45) estatutos -> . imprimir
    (46) estatutos -> . leer
    (130) empty -> .
    (49) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (119) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON
    (57) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON
    (66) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON
    (124) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (56) leer -> . LEER variable SEMICOLON
    (52) variable -> . ID variable_aux

    REGRESAR        reduce using rule 130 (empty -> .)
    RBRACE          reduce using rule 130 (empty -> .)
    ID              shift and go to state 59
    PORCADA         shift and go to state 60
    MIENTRAS        shift and go to state 61
    SI              shift and go to state 62
    IMPRIMIR        shift and go to state 63
    LEER            shift and go to state 64

    estatutos_aux                  shift and go to state 208
    estatutos                      shift and go to state 49
    empty                          shift and go to state 50
    asignar                        shift and go to state 51
    llamada_func                   shift and go to state 52
    ciclo_for                      shift and go to state 53
    ciclo_while                    shift and go to state 54
    condicion                      shift and go to state 55
    imprimir                       shift and go to state 56
    leer                           shift and go to state 57
    variable                       shift and go to state 58

state 187

    (35) parameter -> type ID punto_parameter parameterCycle .

    RPAREN          reduce using rule 35 (parameter -> type ID punto_parameter parameterCycle .)


state 188

    (37) parameterCycle -> COMMA . type ID punto_parameter parameterCycle
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 31
    DECIMAL         shift and go to state 32
    LETRA           shift and go to state 33

    type                           shift and go to state 209

state 189

    (38) parameterCycle -> empty .

    RPAREN          reduce using rule 38 (parameterCycle -> empty .)


state 190

    (15) simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle .

    SEMICOLON       reduce using rule 15 (simpleVarCycle -> COMMA ID punto_simple_var simpleVarCycle .)


state 191

    (21) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle . SEMICOLON

    SEMICOLON       shift and go to state 210


state 192

    (22) arrayCycle -> COMMA . ID LBRACKET CTEI RBRACKET punto_array arrayCycle

    ID              shift and go to state 211


state 193

    (23) arrayCycle -> empty .

    SEMICOLON       reduce using rule 23 (arrayCycle -> empty .)


state 194

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET punto_matrix matrixCycle SEMICOLON

    RBRACKET        shift and go to state 212


state 195

    (49) asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .

    ID              reduce using rule 49 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    PORCADA         reduce using rule 49 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    MIENTRAS        reduce using rule 49 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    SI              reduce using rule 49 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    IMPRIMIR        reduce using rule 49 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    LEER            reduce using rule 49 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    RBRACE          reduce using rule 49 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)
    REGRESAR        reduce using rule 49 (asignar -> variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON .)


state 196

    (110) factor_variable -> ID LBRACKET hyper_exp RBRACKET .
    (111) factor_variable -> ID LBRACKET hyper_exp RBRACKET . LBRACKET hyper_exp RBRACKET

    TIMES           reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    DIVIDE          reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    CTEI            reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    CTEF            reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    ID              reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LPAREN          reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    PLUS            reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    MINUS           reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    GREATER         reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LESS            reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    GREATEREQ       reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LESSEQ          reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    NOTEQUAL        reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    EQUAL           reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    Y               reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    O               reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    COMMA           reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    RPAREN          reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    RBRACKET        reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    SEMICOLON       reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    HASTA           reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LBRACE          reduce using rule 110 (factor_variable -> ID LBRACKET hyper_exp RBRACKET .)
    LBRACKET        shift and go to state 213


state 197

    (113) factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN . quitar_fondo_falso
    (115) quitar_fondo_falso -> .

    TIMES           reduce using rule 115 (quitar_fondo_falso -> .)
    DIVIDE          reduce using rule 115 (quitar_fondo_falso -> .)
    CTEI            reduce using rule 115 (quitar_fondo_falso -> .)
    CTEF            reduce using rule 115 (quitar_fondo_falso -> .)
    ID              reduce using rule 115 (quitar_fondo_falso -> .)
    LPAREN          reduce using rule 115 (quitar_fondo_falso -> .)
    PLUS            reduce using rule 115 (quitar_fondo_falso -> .)
    MINUS           reduce using rule 115 (quitar_fondo_falso -> .)
    GREATER         reduce using rule 115 (quitar_fondo_falso -> .)
    LESS            reduce using rule 115 (quitar_fondo_falso -> .)
    GREATEREQ       reduce using rule 115 (quitar_fondo_falso -> .)
    LESSEQ          reduce using rule 115 (quitar_fondo_falso -> .)
    NOTEQUAL        reduce using rule 115 (quitar_fondo_falso -> .)
    EQUAL           reduce using rule 115 (quitar_fondo_falso -> .)
    Y               reduce using rule 115 (quitar_fondo_falso -> .)
    O               reduce using rule 115 (quitar_fondo_falso -> .)
    COMMA           reduce using rule 115 (quitar_fondo_falso -> .)
    RPAREN          reduce using rule 115 (quitar_fondo_falso -> .)
    RBRACKET        reduce using rule 115 (quitar_fondo_falso -> .)
    SEMICOLON       reduce using rule 115 (quitar_fondo_falso -> .)
    HASTA           reduce using rule 115 (quitar_fondo_falso -> .)
    LBRACE          reduce using rule 115 (quitar_fondo_falso -> .)

    quitar_fondo_falso             shift and go to state 214

state 198

    (122) llamadaCYCLE_aux -> COMMA hyper_exp llamadaCYCLE_aux .

    RPAREN          reduce using rule 122 (llamadaCYCLE_aux -> COMMA hyper_exp llamadaCYCLE_aux .)


state 199

    (73) hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .

    COMMA           reduce using rule 73 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    RPAREN          reduce using rule 73 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    SEMICOLON       reduce using rule 73 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    RBRACKET        reduce using rule 73 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    HASTA           reduce using rule 73 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)
    LBRACE          reduce using rule 73 (hyper_exp_aux -> push_op_logicos super_exp check_op_logicos .)


state 200

    (80) super_exp_aux -> push_op_relacionales exp check_op_relacionales .

    Y               reduce using rule 80 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    O               reduce using rule 80 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    CTEI            reduce using rule 80 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    CTEF            reduce using rule 80 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    ID              reduce using rule 80 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    LPAREN          reduce using rule 80 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    COMMA           reduce using rule 80 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    RPAREN          reduce using rule 80 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    SEMICOLON       reduce using rule 80 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    RBRACKET        reduce using rule 80 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    HASTA           reduce using rule 80 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)
    LBRACE          reduce using rule 80 (super_exp_aux -> push_op_relacionales exp check_op_relacionales .)


state 201

    (91) exp_aux -> push_op_exp_masmenos exp .

    GREATER         reduce using rule 91 (exp_aux -> push_op_exp_masmenos exp .)
    LESS            reduce using rule 91 (exp_aux -> push_op_exp_masmenos exp .)
    GREATEREQ       reduce using rule 91 (exp_aux -> push_op_exp_masmenos exp .)
    LESSEQ          reduce using rule 91 (exp_aux -> push_op_exp_masmenos exp .)
    NOTEQUAL        reduce using rule 91 (exp_aux -> push_op_exp_masmenos exp .)
    EQUAL           reduce using rule 91 (exp_aux -> push_op_exp_masmenos exp .)
    CTEI            reduce using rule 91 (exp_aux -> push_op_exp_masmenos exp .)
    CTEF            reduce using rule 91 (exp_aux -> push_op_exp_masmenos exp .)
    ID              reduce using rule 91 (exp_aux -> push_op_exp_masmenos exp .)
    LPAREN          reduce using rule 91 (exp_aux -> push_op_exp_masmenos exp .)
    Y               reduce using rule 91 (exp_aux -> push_op_exp_masmenos exp .)
    O               reduce using rule 91 (exp_aux -> push_op_exp_masmenos exp .)
    COMMA           reduce using rule 91 (exp_aux -> push_op_exp_masmenos exp .)
    RPAREN          reduce using rule 91 (exp_aux -> push_op_exp_masmenos exp .)
    RBRACKET        reduce using rule 91 (exp_aux -> push_op_exp_masmenos exp .)
    SEMICOLON       reduce using rule 91 (exp_aux -> push_op_exp_masmenos exp .)
    HASTA           reduce using rule 91 (exp_aux -> push_op_exp_masmenos exp .)
    LBRACE          reduce using rule 91 (exp_aux -> push_op_exp_masmenos exp .)


state 202

    (98) term_aux -> push_op_exp_pordiv term .

    PLUS            reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    MINUS           reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    CTEI            reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    CTEF            reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    ID              reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    LPAREN          reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    GREATER         reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    LESS            reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    GREATEREQ       reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    LESSEQ          reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    NOTEQUAL        reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    EQUAL           reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    Y               reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    O               reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    COMMA           reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    RPAREN          reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    RBRACKET        reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    SEMICOLON       reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    HASTA           reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)
    LBRACE          reduce using rule 98 (term_aux -> push_op_exp_pordiv term .)


state 203

    (54) variable_aux -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 215


state 204

    (61) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int . HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON

    HASTA           shift and go to state 216


state 205

    (57) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while . LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON

    LBRACE          shift and go to state 217


state 206

    (66) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE . estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON
    (47) estatutos_aux -> . estatutos estatutos_aux
    (48) estatutos_aux -> . empty
    (40) estatutos -> . asignar
    (41) estatutos -> . llamada_func
    (42) estatutos -> . ciclo_for
    (43) estatutos -> . ciclo_while
    (44) estatutos -> . condicion
    (45) estatutos -> . imprimir
    (46) estatutos -> . leer
    (130) empty -> .
    (49) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (119) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON
    (57) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON
    (66) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON
    (124) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (56) leer -> . LEER variable SEMICOLON
    (52) variable -> . ID variable_aux

    RBRACE          reduce using rule 130 (empty -> .)
    ID              shift and go to state 59
    PORCADA         shift and go to state 60
    MIENTRAS        shift and go to state 61
    SI              shift and go to state 62
    IMPRIMIR        shift and go to state 63
    LEER            shift and go to state 64

    estatutos_aux                  shift and go to state 218
    estatutos                      shift and go to state 49
    empty                          shift and go to state 50
    asignar                        shift and go to state 51
    llamada_func                   shift and go to state 52
    ciclo_for                      shift and go to state 53
    ciclo_while                    shift and go to state 54
    condicion                      shift and go to state 55
    imprimir                       shift and go to state 56
    leer                           shift and go to state 57
    variable                       shift and go to state 58

state 207

    (127) imprimirCycle -> COMMA imprimir_aux .

    RPAREN          reduce using rule 127 (imprimirCycle -> COMMA imprimir_aux .)


state 208

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos_aux . dec_func_regresar RBRACE SEMICOLON
    (30) dec_func_regresar -> . REGRESAR variable SEMICOLON
    (31) dec_func_regresar -> . empty
    (130) empty -> .

    REGRESAR        shift and go to state 220
    RBRACE          reduce using rule 130 (empty -> .)

    dec_func_regresar              shift and go to state 219
    empty                          shift and go to state 221

state 209

    (37) parameterCycle -> COMMA type . ID punto_parameter parameterCycle

    ID              shift and go to state 222


state 210

    (21) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .

    VARIABLE        reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    RENGLON         reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    TABLA           reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    INICIO          reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    FUNCION         reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    ID              reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    PORCADA         reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    MIENTRAS        reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    SI              reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    LEER            reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    REGRESAR        reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)
    RBRACE          reduce using rule 21 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET punto_array arrayCycle SEMICOLON .)


state 211

    (22) arrayCycle -> COMMA ID . LBRACKET CTEI RBRACKET punto_array arrayCycle

    LBRACKET        shift and go to state 223


state 212

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . punto_matrix matrixCycle SEMICOLON
    (28) punto_matrix -> .

    COMMA           reduce using rule 28 (punto_matrix -> .)
    SEMICOLON       reduce using rule 28 (punto_matrix -> .)

    punto_matrix                   shift and go to state 224

state 213

    (111) factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET . hyper_exp RBRACKET
    (72) hyper_exp -> . super_exp hyper_exp_aux
    (79) super_exp -> . exp super_exp_aux
    (90) exp -> . term check_op_masmenos exp_aux
    (97) term -> . factor check_op_pordiv term_aux
    (104) factor -> . factor_constante
    (105) factor -> . factor_variable
    (106) factor -> . factor_expresion
    (107) factor_constante -> . CTEI push_int
    (108) factor_constante -> . CTEF push_float
    (109) factor_variable -> . ID push_id
    (110) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> . ID llamada_func
    (113) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 104
    CTEF            shift and go to state 105
    ID              shift and go to state 92
    LPAREN          shift and go to state 93

    hyper_exp                      shift and go to state 225
    super_exp                      shift and go to state 97
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    factor_constante               shift and go to state 101
    factor_variable                shift and go to state 102
    factor_expresion               shift and go to state 103

state 214

    (113) factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .

    TIMES           reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    DIVIDE          reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    CTEI            reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    CTEF            reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    ID              reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LPAREN          reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    PLUS            reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    MINUS           reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    GREATER         reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LESS            reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    GREATEREQ       reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LESSEQ          reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    NOTEQUAL        reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    EQUAL           reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    Y               reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    O               reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    COMMA           reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    RPAREN          reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    RBRACKET        reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    SEMICOLON       reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    HASTA           reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)
    LBRACE          reduce using rule 113 (factor_expresion -> LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso .)


state 215

    (54) variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    ASSIGN          reduce using rule 54 (variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 54 (variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 216

    (61) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA . hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON
    (72) hyper_exp -> . super_exp hyper_exp_aux
    (79) super_exp -> . exp super_exp_aux
    (90) exp -> . term check_op_masmenos exp_aux
    (97) term -> . factor check_op_pordiv term_aux
    (104) factor -> . factor_constante
    (105) factor -> . factor_variable
    (106) factor -> . factor_expresion
    (107) factor_constante -> . CTEI push_int
    (108) factor_constante -> . CTEF push_float
    (109) factor_variable -> . ID push_id
    (110) factor_variable -> . ID LBRACKET hyper_exp RBRACKET
    (111) factor_variable -> . ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET
    (112) factor_variable -> . ID llamada_func
    (113) factor_expresion -> . LPAREN meter_fondo_falso hyper_exp RPAREN quitar_fondo_falso

    CTEI            shift and go to state 104
    CTEF            shift and go to state 105
    ID              shift and go to state 92
    LPAREN          shift and go to state 93

    hyper_exp                      shift and go to state 226
    super_exp                      shift and go to state 97
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    factor_constante               shift and go to state 101
    factor_variable                shift and go to state 102
    factor_expresion               shift and go to state 103

state 217

    (57) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE . estatutos_aux RBRACE punto_fin_while SEMICOLON
    (47) estatutos_aux -> . estatutos estatutos_aux
    (48) estatutos_aux -> . empty
    (40) estatutos -> . asignar
    (41) estatutos -> . llamada_func
    (42) estatutos -> . ciclo_for
    (43) estatutos -> . ciclo_while
    (44) estatutos -> . condicion
    (45) estatutos -> . imprimir
    (46) estatutos -> . leer
    (130) empty -> .
    (49) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (119) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON
    (57) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON
    (66) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON
    (124) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (56) leer -> . LEER variable SEMICOLON
    (52) variable -> . ID variable_aux

    RBRACE          reduce using rule 130 (empty -> .)
    ID              shift and go to state 59
    PORCADA         shift and go to state 60
    MIENTRAS        shift and go to state 61
    SI              shift and go to state 62
    IMPRIMIR        shift and go to state 63
    LEER            shift and go to state 64

    estatutos_aux                  shift and go to state 227
    estatutos                      shift and go to state 49
    empty                          shift and go to state 50
    asignar                        shift and go to state 51
    llamada_func                   shift and go to state 52
    ciclo_for                      shift and go to state 53
    ciclo_while                    shift and go to state 54
    condicion                      shift and go to state 55
    imprimir                       shift and go to state 56
    leer                           shift and go to state 57
    variable                       shift and go to state 58

state 218

    (66) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux . RBRACE punto_fin_si sinoCondicion SEMICOLON

    RBRACE          shift and go to state 228


state 219

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos_aux dec_func_regresar . RBRACE SEMICOLON

    RBRACE          shift and go to state 229


state 220

    (30) dec_func_regresar -> REGRESAR . variable SEMICOLON
    (52) variable -> . ID variable_aux

    ID              shift and go to state 81

    variable                       shift and go to state 230

state 221

    (31) dec_func_regresar -> empty .

    RBRACE          reduce using rule 31 (dec_func_regresar -> empty .)


state 222

    (37) parameterCycle -> COMMA type ID . punto_parameter parameterCycle
    (39) punto_parameter -> .

    COMMA           reduce using rule 39 (punto_parameter -> .)
    RPAREN          reduce using rule 39 (punto_parameter -> .)

    punto_parameter                shift and go to state 231

state 223

    (22) arrayCycle -> COMMA ID LBRACKET . CTEI RBRACKET punto_array arrayCycle

    CTEI            shift and go to state 232


state 224

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix . matrixCycle SEMICOLON
    (26) matrixCycle -> . COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle
    (27) matrixCycle -> . empty
    (130) empty -> .

    COMMA           shift and go to state 234
    SEMICOLON       reduce using rule 130 (empty -> .)

    matrixCycle                    shift and go to state 233
    empty                          shift and go to state 235

state 225

    (111) factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp . RBRACKET

    RBRACKET        shift and go to state 236


state 226

    (61) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp . punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON
    (64) punto_valida_exp -> .

    LBRACE          reduce using rule 64 (punto_valida_exp -> .)

    punto_valida_exp               shift and go to state 237

state 227

    (57) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux . RBRACE punto_fin_while SEMICOLON

    RBRACE          shift and go to state 238


state 228

    (66) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE . punto_fin_si sinoCondicion SEMICOLON
    (70) punto_fin_si -> .

    SINO            reduce using rule 70 (punto_fin_si -> .)
    SEMICOLON       reduce using rule 70 (punto_fin_si -> .)

    punto_fin_si                   shift and go to state 239

state 229

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos_aux dec_func_regresar RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 240


state 230

    (30) dec_func_regresar -> REGRESAR variable . SEMICOLON

    SEMICOLON       shift and go to state 241


state 231

    (37) parameterCycle -> COMMA type ID punto_parameter . parameterCycle
    (37) parameterCycle -> . COMMA type ID punto_parameter parameterCycle
    (38) parameterCycle -> . empty
    (130) empty -> .

    COMMA           shift and go to state 188
    RPAREN          reduce using rule 130 (empty -> .)

    parameterCycle                 shift and go to state 242
    empty                          shift and go to state 189

state 232

    (22) arrayCycle -> COMMA ID LBRACKET CTEI . RBRACKET punto_array arrayCycle

    RBRACKET        shift and go to state 243


state 233

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle . SEMICOLON

    SEMICOLON       shift and go to state 244


state 234

    (26) matrixCycle -> COMMA . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    ID              shift and go to state 245


state 235

    (27) matrixCycle -> empty .

    SEMICOLON       reduce using rule 27 (matrixCycle -> empty .)


state 236

    (111) factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .

    TIMES           reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    DIVIDE          reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    CTEI            reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    CTEF            reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    ID              reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LPAREN          reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    PLUS            reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    MINUS           reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    GREATER         reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LESS            reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    GREATEREQ       reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LESSEQ          reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    NOTEQUAL        reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    EQUAL           reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    Y               reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    O               reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    COMMA           reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    RPAREN          reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    RBRACKET        reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    SEMICOLON       reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    HASTA           reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)
    LBRACE          reduce using rule 111 (factor_variable -> ID LBRACKET hyper_exp RBRACKET LBRACKET hyper_exp RBRACKET .)


state 237

    (61) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp . LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON

    LBRACE          shift and go to state 246


state 238

    (57) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE . punto_fin_while SEMICOLON
    (60) punto_fin_while -> .

    SEMICOLON       reduce using rule 60 (punto_fin_while -> .)

    punto_fin_while                shift and go to state 247

state 239

    (66) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si . sinoCondicion SEMICOLON
    (67) sinoCondicion -> . SINO punto_sino LBRACE estatutos_aux RBRACE
    (68) sinoCondicion -> . empty
    (130) empty -> .

    SINO            shift and go to state 249
    SEMICOLON       reduce using rule 130 (empty -> .)

    sinoCondicion                  shift and go to state 248
    empty                          shift and go to state 250

state 240

    (29) dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos_aux dec_func_regresar RBRACE SEMICOLON .

    FUNCION         reduce using rule 29 (dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos_aux dec_func_regresar RBRACE SEMICOLON .)
    INICIO          reduce using rule 29 (dec_func -> FUNCION dec_func_type ID punto_add_func LPAREN parameter RPAREN LBRACE dec_var_cycle estatutos_aux dec_func_regresar RBRACE SEMICOLON .)


state 241

    (30) dec_func_regresar -> REGRESAR variable SEMICOLON .

    RBRACE          reduce using rule 30 (dec_func_regresar -> REGRESAR variable SEMICOLON .)


state 242

    (37) parameterCycle -> COMMA type ID punto_parameter parameterCycle .

    RPAREN          reduce using rule 37 (parameterCycle -> COMMA type ID punto_parameter parameterCycle .)


state 243

    (22) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET . punto_array arrayCycle
    (24) punto_array -> .

    COMMA           reduce using rule 24 (punto_array -> .)
    SEMICOLON       reduce using rule 24 (punto_array -> .)

    punto_array                    shift and go to state 251

state 244

    (25) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .

    VARIABLE        reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    RENGLON         reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    TABLA           reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    INICIO          reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    FUNCION         reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    ID              reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    PORCADA         reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    MIENTRAS        reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    SI              reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    LEER            reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    REGRESAR        reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)
    RBRACE          reduce using rule 25 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle SEMICOLON .)


state 245

    (26) matrixCycle -> COMMA ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    LBRACKET        shift and go to state 252


state 246

    (61) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE . estatutos_aux RBRACE punto_termina_for SEMICOLON
    (47) estatutos_aux -> . estatutos estatutos_aux
    (48) estatutos_aux -> . empty
    (40) estatutos -> . asignar
    (41) estatutos -> . llamada_func
    (42) estatutos -> . ciclo_for
    (43) estatutos -> . ciclo_while
    (44) estatutos -> . condicion
    (45) estatutos -> . imprimir
    (46) estatutos -> . leer
    (130) empty -> .
    (49) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (119) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON
    (57) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON
    (66) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON
    (124) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (56) leer -> . LEER variable SEMICOLON
    (52) variable -> . ID variable_aux

    RBRACE          reduce using rule 130 (empty -> .)
    ID              shift and go to state 59
    PORCADA         shift and go to state 60
    MIENTRAS        shift and go to state 61
    SI              shift and go to state 62
    IMPRIMIR        shift and go to state 63
    LEER            shift and go to state 64

    estatutos_aux                  shift and go to state 253
    estatutos                      shift and go to state 49
    empty                          shift and go to state 50
    asignar                        shift and go to state 51
    llamada_func                   shift and go to state 52
    ciclo_for                      shift and go to state 53
    ciclo_while                    shift and go to state 54
    condicion                      shift and go to state 55
    imprimir                       shift and go to state 56
    leer                           shift and go to state 57
    variable                       shift and go to state 58

state 247

    (57) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while . SEMICOLON

    SEMICOLON       shift and go to state 254


state 248

    (66) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion . SEMICOLON

    SEMICOLON       shift and go to state 255


state 249

    (67) sinoCondicion -> SINO . punto_sino LBRACE estatutos_aux RBRACE
    (71) punto_sino -> .

    LBRACE          reduce using rule 71 (punto_sino -> .)

    punto_sino                     shift and go to state 256

state 250

    (68) sinoCondicion -> empty .

    SEMICOLON       reduce using rule 68 (sinoCondicion -> empty .)


state 251

    (22) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array . arrayCycle
    (22) arrayCycle -> . COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle
    (23) arrayCycle -> . empty
    (130) empty -> .

    COMMA           shift and go to state 192
    SEMICOLON       reduce using rule 130 (empty -> .)

    arrayCycle                     shift and go to state 257
    empty                          shift and go to state 193

state 252

    (26) matrixCycle -> COMMA ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    CTEI            shift and go to state 258


state 253

    (61) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux . RBRACE punto_termina_for SEMICOLON

    RBRACE          shift and go to state 259


state 254

    (57) ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON .

    ID              reduce using rule 57 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON .)
    PORCADA         reduce using rule 57 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON .)
    MIENTRAS        reduce using rule 57 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON .)
    SI              reduce using rule 57 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON .)
    IMPRIMIR        reduce using rule 57 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON .)
    LEER            reduce using rule 57 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON .)
    RBRACE          reduce using rule 57 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON .)
    REGRESAR        reduce using rule 57 (ciclo_while -> MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON .)


state 255

    (66) condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON .

    ID              reduce using rule 66 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON .)
    PORCADA         reduce using rule 66 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON .)
    MIENTRAS        reduce using rule 66 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON .)
    SI              reduce using rule 66 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON .)
    IMPRIMIR        reduce using rule 66 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON .)
    LEER            reduce using rule 66 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON .)
    RBRACE          reduce using rule 66 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON .)
    REGRESAR        reduce using rule 66 (condicion -> SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON .)


state 256

    (67) sinoCondicion -> SINO punto_sino . LBRACE estatutos_aux RBRACE

    LBRACE          shift and go to state 260


state 257

    (22) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle .

    SEMICOLON       reduce using rule 22 (arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET punto_array arrayCycle .)


state 258

    (26) matrixCycle -> COMMA ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    RBRACKET        shift and go to state 261


state 259

    (61) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE . punto_termina_for SEMICOLON
    (65) punto_termina_for -> .

    SEMICOLON       reduce using rule 65 (punto_termina_for -> .)

    punto_termina_for              shift and go to state 262

state 260

    (67) sinoCondicion -> SINO punto_sino LBRACE . estatutos_aux RBRACE
    (47) estatutos_aux -> . estatutos estatutos_aux
    (48) estatutos_aux -> . empty
    (40) estatutos -> . asignar
    (41) estatutos -> . llamada_func
    (42) estatutos -> . ciclo_for
    (43) estatutos -> . ciclo_while
    (44) estatutos -> . condicion
    (45) estatutos -> . imprimir
    (46) estatutos -> . leer
    (130) empty -> .
    (49) asignar -> . variable ASSIGN push_op_igual hyper_exp check_op_igual SEMICOLON
    (119) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (61) ciclo_for -> . PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON
    (57) ciclo_while -> . MIENTRAS punto_inicio_while LPAREN hyper_exp RPAREN punto_medio_while LBRACE estatutos_aux RBRACE punto_fin_while SEMICOLON
    (66) condicion -> . SI LPAREN hyper_exp RPAREN punto_si LBRACE estatutos_aux RBRACE punto_fin_si sinoCondicion SEMICOLON
    (124) imprimir -> . IMPRIMIR LPAREN imprimir_aux RPAREN SEMICOLON
    (56) leer -> . LEER variable SEMICOLON
    (52) variable -> . ID variable_aux

    RBRACE          reduce using rule 130 (empty -> .)
    ID              shift and go to state 59
    PORCADA         shift and go to state 60
    MIENTRAS        shift and go to state 61
    SI              shift and go to state 62
    IMPRIMIR        shift and go to state 63
    LEER            shift and go to state 64

    estatutos_aux                  shift and go to state 263
    estatutos                      shift and go to state 49
    empty                          shift and go to state 50
    asignar                        shift and go to state 51
    llamada_func                   shift and go to state 52
    ciclo_for                      shift and go to state 53
    ciclo_while                    shift and go to state 54
    condicion                      shift and go to state 55
    imprimir                       shift and go to state 56
    leer                           shift and go to state 57
    variable                       shift and go to state 58

state 261

    (26) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET punto_matrix matrixCycle

    LBRACKET        shift and go to state 264


state 262

    (61) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for . SEMICOLON

    SEMICOLON       shift and go to state 265


state 263

    (67) sinoCondicion -> SINO punto_sino LBRACE estatutos_aux . RBRACE

    RBRACE          shift and go to state 266


state 264

    (26) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET punto_matrix matrixCycle

    CTEI            shift and go to state 267


state 265

    (61) ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON .

    ID              reduce using rule 61 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON .)
    PORCADA         reduce using rule 61 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON .)
    MIENTRAS        reduce using rule 61 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON .)
    SI              reduce using rule 61 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON .)
    IMPRIMIR        reduce using rule 61 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON .)
    LEER            reduce using rule 61 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON .)
    RBRACE          reduce using rule 61 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON .)
    REGRESAR        reduce using rule 61 (ciclo_for -> PORCADA ID punto_existe_id ASSIGN hyper_exp punto_valida_int HASTA hyper_exp punto_valida_exp LBRACE estatutos_aux RBRACE punto_termina_for SEMICOLON .)


state 266

    (67) sinoCondicion -> SINO punto_sino LBRACE estatutos_aux RBRACE .

    SEMICOLON       reduce using rule 67 (sinoCondicion -> SINO punto_sino LBRACE estatutos_aux RBRACE .)


state 267

    (26) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET punto_matrix matrixCycle

    RBRACKET        shift and go to state 268


state 268

    (26) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . punto_matrix matrixCycle
    (28) punto_matrix -> .

    COMMA           reduce using rule 28 (punto_matrix -> .)
    SEMICOLON       reduce using rule 28 (punto_matrix -> .)

    punto_matrix                   shift and go to state 269

state 269

    (26) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix . matrixCycle
    (26) matrixCycle -> . COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle
    (27) matrixCycle -> . empty
    (130) empty -> .

    COMMA           shift and go to state 234
    SEMICOLON       reduce using rule 130 (empty -> .)

    matrixCycle                    shift and go to state 270
    empty                          shift and go to state 235

state 270

    (26) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle .

    SEMICOLON       reduce using rule 26 (matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET punto_matrix matrixCycle .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INICIO in state 5 resolved as shift
WARNING: shift/reduce conflict for FUNCION in state 5 resolved as shift
WARNING: shift/reduce conflict for INICIO in state 7 resolved as shift
WARNING: shift/reduce conflict for ID in state 92 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (dec_var_cycle -> empty)
WARNING: rejected rule (dec_func_cycle -> empty) in state 11
WARNING: reduce/reduce conflict in state 137 resolved using rule (super_exp_aux -> empty)
WARNING: rejected rule (push_op_relacionales -> empty) in state 137
WARNING: reduce/reduce conflict in state 169 resolved using rule (exp_aux -> empty)
WARNING: rejected rule (push_op_exp_masmenos -> empty) in state 169
WARNING: reduce/reduce conflict in state 174 resolved using rule (term_aux -> empty)
WARNING: rejected rule (push_op_exp_pordiv -> empty) in state 174
WARNING: Rule (push_op_relacionales -> empty) is never reduced
WARNING: Rule (push_op_exp_masmenos -> empty) is never reduced
WARNING: Rule (push_op_exp_pordiv -> empty) is never reduced
