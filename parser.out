Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTECHAR
    EQUAL
    GREATER
    GREATEREQ
    LESS
    LESSEQ
    NOTEQUAL
    o
    y

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID COLON inicio
Rule 2     programa -> PROGRAMA ID COLON dec_var inicio
Rule 3     programa -> PROGRAMA ID COLON dec_var dec_func inicio
Rule 4     programa -> PROGRAMA ID COLON dec_func inicio
Rule 5     inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON
Rule 6     dec_var -> simple_var
Rule 7     dec_var -> array
Rule 8     dec_var -> matrix
Rule 9     simple_var -> VARIABLE type ARROW ID simpleVarCycle SEMICOLON
Rule 10    simpleVarCycle -> COMMA ID simpleVarCycle
Rule 11    simpleVarCycle -> empty
Rule 12    array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON
Rule 13    arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET arrayCycle
Rule 14    arrayCycle -> empty
Rule 15    matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON
Rule 16    matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle
Rule 17    matrixCycle -> empty
Rule 18    type -> ENTERO
Rule 19    type -> DECIMAL
Rule 20    type -> LETRA
Rule 21    dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
Rule 22    dec_func_return -> type
Rule 23    dec_func_return -> SINREGRESAR
Rule 24    decFuncCycle -> estatutos decFuncCycle
Rule 25    decFuncCycle -> empty
Rule 26    parameter -> type ID parameterCycle
Rule 27    parameterCycle -> COMMA type ID parameterCycle
Rule 28    parameterCycle -> empty
Rule 29    estatutos -> asignar
Rule 30    estatutos -> llamada_func
Rule 31    estatutos -> ciclo_for
Rule 32    estatutos -> ciclo_while
Rule 33    estatutos -> condicion
Rule 34    estatutos -> escribe
Rule 35    estatutos -> leer
Rule 36    estatutos -> empty
Rule 37    asignar -> variable ASSIGN exp SEMICOLON
Rule 38    variable -> ID variable_aux
Rule 39    variable_aux -> LBRACKET exp RBRACKET
Rule 40    variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 41    variable_aux -> empty
Rule 42    leer -> LEER variable SEMICOLON
Rule 43    ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
Rule 44    whileCycle -> estatutos whileCycle
Rule 45    whileCycle -> empty
Rule 46    ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
Rule 47    forCycle -> estatutos forCycle
Rule 48    forCycle -> empty
Rule 49    condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
Rule 50    condicionCycle -> estatutos condicionCycle
Rule 51    condicionCycle -> empty
Rule 52    sinoCondicion -> SINO LBRACE estatutos condicionCycle RBRACE
Rule 53    sinoCondicion -> empty
Rule 54    exp -> term expT
Rule 55    expT -> PLUS exp
Rule 56    expT -> MINUS exp
Rule 57    expT -> empty
Rule 58    term -> factor termT
Rule 59    termT -> TIMES term
Rule 60    termT -> DIVIDE term
Rule 61    termT -> empty
Rule 62    factor -> factor_constante
Rule 63    factor -> factor_variable
Rule 64    factor -> factor_expresion
Rule 65    factor_constante -> CTEI
Rule 66    factor_constante -> CTEF
Rule 67    factor_variable -> ID
Rule 68    factor_variable -> ID LBRACKET exp RBRACKET
Rule 69    factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 70    factor_variable -> ID llamada_func
Rule 71    factor_expresion -> LPAREN exp RPAREN
Rule 72    llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON
Rule 73    llamadaCYCLE -> exp llamadaCYCLE_aux
Rule 74    llamadaCYCLE -> empty
Rule 75    llamadaCYCLE_aux -> COMMA exp llamadaCYCLE_aux
Rule 76    llamadaCYCLE_aux -> empty
Rule 77    escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
Rule 78    escribe_aux -> exp escribeCycle
Rule 79    escribe_aux -> CTESTRING escribeCycle
Rule 80    escribeCycle -> COMMA escribe_aux
Rule 81    escribeCycle -> empty
Rule 82    empty -> <empty>

Terminals, with rules where they appear

ARROW                : 9 12 15
ASSIGN               : 37
COLON                : 1 2 3 4
COMMA                : 10 13 16 27 75 80
CTECHAR              : 
CTEF                 : 66
CTEI                 : 12 13 15 15 16 16 65
CTESTRING            : 79
DECIMAL              : 19
DIVIDE               : 60
EN                   : 46
ENTERO               : 18
EQUAL                : 
FUNCION              : 21
GREATER              : 
GREATEREQ            : 
ID                   : 1 2 3 4 9 10 12 13 15 16 21 26 27 38 67 68 69 70 72
IMPRIMIR             : 77
INICIO               : 5
LBRACE               : 5 21 43 46 49 52
LBRACKET             : 12 13 15 15 16 16 39 40 40 68 69 69
LEER                 : 42
LESS                 : 
LESSEQ               : 
LETRA                : 20
LPAREN               : 5 21 43 49 71 72 77
MIENTRAS             : 43
MINUS                : 56
NOTEQUAL             : 
PLUS                 : 55
PORCADA              : 46
PROGRAMA             : 1 2 3 4
RBRACE               : 5 21 43 46 49 52
RBRACKET             : 12 13 15 15 16 16 39 40 40 68 69 69
REGRESAR             : 21
RENGLON              : 12
RPAREN               : 5 21 43 49 71 72 77
SEMICOLON            : 5 9 12 15 21 21 37 42 43 46 49 72 77
SI                   : 49
SINO                 : 52
SINREGRESAR          : 23
TABLA                : 15
TIMES                : 59
VARIABLE             : 9
error                : 
o                    : 
y                    : 

Nonterminals, with rules where they appear

array                : 7
arrayCycle           : 12 13
asignar              : 29
ciclo_for            : 31
ciclo_while          : 32
condicion            : 33
condicionCycle       : 49 50 52
decFuncCycle         : 21 24
dec_func             : 3 4
dec_func_return      : 21
dec_var              : 2 3 21
empty                : 11 14 17 25 28 36 41 45 48 51 53 57 61 74 76 81
escribe              : 34
escribeCycle         : 78 79
escribe_aux          : 77 80
estatutos            : 5 21 24 43 44 46 47 49 50 52
exp                  : 37 39 40 40 43 46 46 49 55 56 68 69 69 71 73 75 78
expT                 : 54
factor               : 58
factor_constante     : 62
factor_expresion     : 64
factor_variable      : 63
forCycle             : 46 47
inicio               : 1 2 3 4
leer                 : 35
llamadaCYCLE         : 72
llamadaCYCLE_aux     : 73 75
llamada_func         : 30 70
matrix               : 8
matrixCycle          : 15 16
parameter            : 21
parameterCycle       : 26 27
programa             : 0
simpleVarCycle       : 9 10
simple_var           : 6
sinoCondicion        : 49
term                 : 54 59 60
termT                : 58
type                 : 9 12 15 22 26 27
variable             : 21 37 42
variable_aux         : 38
whileCycle           : 43 44

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID COLON inicio
    (2) programa -> . PROGRAMA ID COLON dec_var inicio
    (3) programa -> . PROGRAMA ID COLON dec_var dec_func inicio
    (4) programa -> . PROGRAMA ID COLON dec_func inicio

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID COLON inicio
    (2) programa -> PROGRAMA . ID COLON dec_var inicio
    (3) programa -> PROGRAMA . ID COLON dec_var dec_func inicio
    (4) programa -> PROGRAMA . ID COLON dec_func inicio

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . COLON inicio
    (2) programa -> PROGRAMA ID . COLON dec_var inicio
    (3) programa -> PROGRAMA ID . COLON dec_var dec_func inicio
    (4) programa -> PROGRAMA ID . COLON dec_func inicio

    COLON           shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID COLON . inicio
    (2) programa -> PROGRAMA ID COLON . dec_var inicio
    (3) programa -> PROGRAMA ID COLON . dec_var dec_func inicio
    (4) programa -> PROGRAMA ID COLON . dec_func inicio
    (5) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON
    (6) dec_var -> . simple_var
    (7) dec_var -> . array
    (8) dec_var -> . matrix
    (21) dec_func -> . FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
    (9) simple_var -> . VARIABLE type ARROW ID simpleVarCycle SEMICOLON
    (12) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON
    (15) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    INICIO          shift and go to state 8
    FUNCION         shift and go to state 12
    VARIABLE        shift and go to state 13
    RENGLON         shift and go to state 14
    TABLA           shift and go to state 15

    inicio                         shift and go to state 5
    dec_var                        shift and go to state 6
    dec_func                       shift and go to state 7
    simple_var                     shift and go to state 9
    array                          shift and go to state 10
    matrix                         shift and go to state 11

state 5

    (1) programa -> PROGRAMA ID COLON inicio .

    $end            reduce using rule 1 (programa -> PROGRAMA ID COLON inicio .)


state 6

    (2) programa -> PROGRAMA ID COLON dec_var . inicio
    (3) programa -> PROGRAMA ID COLON dec_var . dec_func inicio
    (5) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON
    (21) dec_func -> . FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON

    INICIO          shift and go to state 8
    FUNCION         shift and go to state 12

    inicio                         shift and go to state 16
    dec_func                       shift and go to state 17

state 7

    (4) programa -> PROGRAMA ID COLON dec_func . inicio
    (5) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON

    INICIO          shift and go to state 8

    inicio                         shift and go to state 18

state 8

    (5) inicio -> INICIO . LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON

    LPAREN          shift and go to state 19


state 9

    (6) dec_var -> simple_var .

    INICIO          reduce using rule 6 (dec_var -> simple_var .)
    FUNCION         reduce using rule 6 (dec_var -> simple_var .)
    ID              reduce using rule 6 (dec_var -> simple_var .)
    PORCADA         reduce using rule 6 (dec_var -> simple_var .)
    MIENTRAS        reduce using rule 6 (dec_var -> simple_var .)
    SI              reduce using rule 6 (dec_var -> simple_var .)
    IMPRIMIR        reduce using rule 6 (dec_var -> simple_var .)
    LEER            reduce using rule 6 (dec_var -> simple_var .)
    REGRESAR        reduce using rule 6 (dec_var -> simple_var .)


state 10

    (7) dec_var -> array .

    INICIO          reduce using rule 7 (dec_var -> array .)
    FUNCION         reduce using rule 7 (dec_var -> array .)
    ID              reduce using rule 7 (dec_var -> array .)
    PORCADA         reduce using rule 7 (dec_var -> array .)
    MIENTRAS        reduce using rule 7 (dec_var -> array .)
    SI              reduce using rule 7 (dec_var -> array .)
    IMPRIMIR        reduce using rule 7 (dec_var -> array .)
    LEER            reduce using rule 7 (dec_var -> array .)
    REGRESAR        reduce using rule 7 (dec_var -> array .)


state 11

    (8) dec_var -> matrix .

    INICIO          reduce using rule 8 (dec_var -> matrix .)
    FUNCION         reduce using rule 8 (dec_var -> matrix .)
    ID              reduce using rule 8 (dec_var -> matrix .)
    PORCADA         reduce using rule 8 (dec_var -> matrix .)
    MIENTRAS        reduce using rule 8 (dec_var -> matrix .)
    SI              reduce using rule 8 (dec_var -> matrix .)
    IMPRIMIR        reduce using rule 8 (dec_var -> matrix .)
    LEER            reduce using rule 8 (dec_var -> matrix .)
    REGRESAR        reduce using rule 8 (dec_var -> matrix .)


state 12

    (21) dec_func -> FUNCION . dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
    (22) dec_func_return -> . type
    (23) dec_func_return -> . SINREGRESAR
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    SINREGRESAR     shift and go to state 22
    ENTERO          shift and go to state 23
    DECIMAL         shift and go to state 24
    LETRA           shift and go to state 25

    dec_func_return                shift and go to state 20
    type                           shift and go to state 21

state 13

    (9) simple_var -> VARIABLE . type ARROW ID simpleVarCycle SEMICOLON
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 23
    DECIMAL         shift and go to state 24
    LETRA           shift and go to state 25

    type                           shift and go to state 26

state 14

    (12) array -> RENGLON . type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 23
    DECIMAL         shift and go to state 24
    LETRA           shift and go to state 25

    type                           shift and go to state 27

state 15

    (15) matrix -> TABLA . type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 23
    DECIMAL         shift and go to state 24
    LETRA           shift and go to state 25

    type                           shift and go to state 28

state 16

    (2) programa -> PROGRAMA ID COLON dec_var inicio .

    $end            reduce using rule 2 (programa -> PROGRAMA ID COLON dec_var inicio .)


state 17

    (3) programa -> PROGRAMA ID COLON dec_var dec_func . inicio
    (5) inicio -> . INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON

    INICIO          shift and go to state 8

    inicio                         shift and go to state 29

state 18

    (4) programa -> PROGRAMA ID COLON dec_func inicio .

    $end            reduce using rule 4 (programa -> PROGRAMA ID COLON dec_func inicio .)


state 19

    (5) inicio -> INICIO LPAREN . RPAREN LBRACE estatutos RBRACE SEMICOLON

    RPAREN          shift and go to state 30


state 20

    (21) dec_func -> FUNCION dec_func_return . ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON

    ID              shift and go to state 31


state 21

    (22) dec_func_return -> type .

    ID              reduce using rule 22 (dec_func_return -> type .)


state 22

    (23) dec_func_return -> SINREGRESAR .

    ID              reduce using rule 23 (dec_func_return -> SINREGRESAR .)


state 23

    (18) type -> ENTERO .

    ID              reduce using rule 18 (type -> ENTERO .)
    ARROW           reduce using rule 18 (type -> ENTERO .)


state 24

    (19) type -> DECIMAL .

    ID              reduce using rule 19 (type -> DECIMAL .)
    ARROW           reduce using rule 19 (type -> DECIMAL .)


state 25

    (20) type -> LETRA .

    ID              reduce using rule 20 (type -> LETRA .)
    ARROW           reduce using rule 20 (type -> LETRA .)


state 26

    (9) simple_var -> VARIABLE type . ARROW ID simpleVarCycle SEMICOLON

    ARROW           shift and go to state 32


state 27

    (12) array -> RENGLON type . ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON

    ARROW           shift and go to state 33


state 28

    (15) matrix -> TABLA type . ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    ARROW           shift and go to state 34


state 29

    (3) programa -> PROGRAMA ID COLON dec_var dec_func inicio .

    $end            reduce using rule 3 (programa -> PROGRAMA ID COLON dec_var dec_func inicio .)


state 30

    (5) inicio -> INICIO LPAREN RPAREN . LBRACE estatutos RBRACE SEMICOLON

    LBRACE          shift and go to state 35


state 31

    (21) dec_func -> FUNCION dec_func_return ID . LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON

    LPAREN          shift and go to state 36


state 32

    (9) simple_var -> VARIABLE type ARROW . ID simpleVarCycle SEMICOLON

    ID              shift and go to state 37


state 33

    (12) array -> RENGLON type ARROW . ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON

    ID              shift and go to state 38


state 34

    (15) matrix -> TABLA type ARROW . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    ID              shift and go to state 39


state 35

    (5) inicio -> INICIO LPAREN RPAREN LBRACE . estatutos RBRACE SEMICOLON
    (29) estatutos -> . asignar
    (30) estatutos -> . llamada_func
    (31) estatutos -> . ciclo_for
    (32) estatutos -> . ciclo_while
    (33) estatutos -> . condicion
    (34) estatutos -> . escribe
    (35) estatutos -> . leer
    (36) estatutos -> . empty
    (37) asignar -> . variable ASSIGN exp SEMICOLON
    (72) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (46) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (43) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (49) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (77) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (42) leer -> . LEER variable SEMICOLON
    (82) empty -> .
    (38) variable -> . ID variable_aux

    ID              shift and go to state 50
    PORCADA         shift and go to state 51
    MIENTRAS        shift and go to state 52
    SI              shift and go to state 53
    IMPRIMIR        shift and go to state 54
    LEER            shift and go to state 55
    RBRACE          reduce using rule 82 (empty -> .)

    estatutos                      shift and go to state 40
    asignar                        shift and go to state 41
    llamada_func                   shift and go to state 42
    ciclo_for                      shift and go to state 43
    ciclo_while                    shift and go to state 44
    condicion                      shift and go to state 45
    escribe                        shift and go to state 46
    leer                           shift and go to state 47
    empty                          shift and go to state 48
    variable                       shift and go to state 49

state 36

    (21) dec_func -> FUNCION dec_func_return ID LPAREN . parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
    (26) parameter -> . type ID parameterCycle
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 23
    DECIMAL         shift and go to state 24
    LETRA           shift and go to state 25

    parameter                      shift and go to state 56
    type                           shift and go to state 57

state 37

    (9) simple_var -> VARIABLE type ARROW ID . simpleVarCycle SEMICOLON
    (10) simpleVarCycle -> . COMMA ID simpleVarCycle
    (11) simpleVarCycle -> . empty
    (82) empty -> .

    COMMA           shift and go to state 59
    SEMICOLON       reduce using rule 82 (empty -> .)

    simpleVarCycle                 shift and go to state 58
    empty                          shift and go to state 60

state 38

    (12) array -> RENGLON type ARROW ID . LBRACKET CTEI RBRACKET arrayCycle SEMICOLON

    LBRACKET        shift and go to state 61


state 39

    (15) matrix -> TABLA type ARROW ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    LBRACKET        shift and go to state 62


state 40

    (5) inicio -> INICIO LPAREN RPAREN LBRACE estatutos . RBRACE SEMICOLON

    RBRACE          shift and go to state 63


state 41

    (29) estatutos -> asignar .

    RBRACE          reduce using rule 29 (estatutos -> asignar .)
    ID              reduce using rule 29 (estatutos -> asignar .)
    PORCADA         reduce using rule 29 (estatutos -> asignar .)
    MIENTRAS        reduce using rule 29 (estatutos -> asignar .)
    SI              reduce using rule 29 (estatutos -> asignar .)
    IMPRIMIR        reduce using rule 29 (estatutos -> asignar .)
    LEER            reduce using rule 29 (estatutos -> asignar .)
    REGRESAR        reduce using rule 29 (estatutos -> asignar .)


state 42

    (30) estatutos -> llamada_func .

    RBRACE          reduce using rule 30 (estatutos -> llamada_func .)
    ID              reduce using rule 30 (estatutos -> llamada_func .)
    PORCADA         reduce using rule 30 (estatutos -> llamada_func .)
    MIENTRAS        reduce using rule 30 (estatutos -> llamada_func .)
    SI              reduce using rule 30 (estatutos -> llamada_func .)
    IMPRIMIR        reduce using rule 30 (estatutos -> llamada_func .)
    LEER            reduce using rule 30 (estatutos -> llamada_func .)
    REGRESAR        reduce using rule 30 (estatutos -> llamada_func .)


state 43

    (31) estatutos -> ciclo_for .

    RBRACE          reduce using rule 31 (estatutos -> ciclo_for .)
    ID              reduce using rule 31 (estatutos -> ciclo_for .)
    PORCADA         reduce using rule 31 (estatutos -> ciclo_for .)
    MIENTRAS        reduce using rule 31 (estatutos -> ciclo_for .)
    SI              reduce using rule 31 (estatutos -> ciclo_for .)
    IMPRIMIR        reduce using rule 31 (estatutos -> ciclo_for .)
    LEER            reduce using rule 31 (estatutos -> ciclo_for .)
    REGRESAR        reduce using rule 31 (estatutos -> ciclo_for .)


state 44

    (32) estatutos -> ciclo_while .

    RBRACE          reduce using rule 32 (estatutos -> ciclo_while .)
    ID              reduce using rule 32 (estatutos -> ciclo_while .)
    PORCADA         reduce using rule 32 (estatutos -> ciclo_while .)
    MIENTRAS        reduce using rule 32 (estatutos -> ciclo_while .)
    SI              reduce using rule 32 (estatutos -> ciclo_while .)
    IMPRIMIR        reduce using rule 32 (estatutos -> ciclo_while .)
    LEER            reduce using rule 32 (estatutos -> ciclo_while .)
    REGRESAR        reduce using rule 32 (estatutos -> ciclo_while .)


state 45

    (33) estatutos -> condicion .

    RBRACE          reduce using rule 33 (estatutos -> condicion .)
    ID              reduce using rule 33 (estatutos -> condicion .)
    PORCADA         reduce using rule 33 (estatutos -> condicion .)
    MIENTRAS        reduce using rule 33 (estatutos -> condicion .)
    SI              reduce using rule 33 (estatutos -> condicion .)
    IMPRIMIR        reduce using rule 33 (estatutos -> condicion .)
    LEER            reduce using rule 33 (estatutos -> condicion .)
    REGRESAR        reduce using rule 33 (estatutos -> condicion .)


state 46

    (34) estatutos -> escribe .

    RBRACE          reduce using rule 34 (estatutos -> escribe .)
    ID              reduce using rule 34 (estatutos -> escribe .)
    PORCADA         reduce using rule 34 (estatutos -> escribe .)
    MIENTRAS        reduce using rule 34 (estatutos -> escribe .)
    SI              reduce using rule 34 (estatutos -> escribe .)
    IMPRIMIR        reduce using rule 34 (estatutos -> escribe .)
    LEER            reduce using rule 34 (estatutos -> escribe .)
    REGRESAR        reduce using rule 34 (estatutos -> escribe .)


state 47

    (35) estatutos -> leer .

    RBRACE          reduce using rule 35 (estatutos -> leer .)
    ID              reduce using rule 35 (estatutos -> leer .)
    PORCADA         reduce using rule 35 (estatutos -> leer .)
    MIENTRAS        reduce using rule 35 (estatutos -> leer .)
    SI              reduce using rule 35 (estatutos -> leer .)
    IMPRIMIR        reduce using rule 35 (estatutos -> leer .)
    LEER            reduce using rule 35 (estatutos -> leer .)
    REGRESAR        reduce using rule 35 (estatutos -> leer .)


state 48

    (36) estatutos -> empty .

    RBRACE          reduce using rule 36 (estatutos -> empty .)
    ID              reduce using rule 36 (estatutos -> empty .)
    PORCADA         reduce using rule 36 (estatutos -> empty .)
    MIENTRAS        reduce using rule 36 (estatutos -> empty .)
    SI              reduce using rule 36 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 36 (estatutos -> empty .)
    LEER            reduce using rule 36 (estatutos -> empty .)
    REGRESAR        reduce using rule 36 (estatutos -> empty .)


state 49

    (37) asignar -> variable . ASSIGN exp SEMICOLON

    ASSIGN          shift and go to state 64


state 50

    (72) llamada_func -> ID . LPAREN llamadaCYCLE RPAREN SEMICOLON
    (38) variable -> ID . variable_aux
    (39) variable_aux -> . LBRACKET exp RBRACKET
    (40) variable_aux -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (41) variable_aux -> . empty
    (82) empty -> .

    LPAREN          shift and go to state 65
    LBRACKET        shift and go to state 67
    ASSIGN          reduce using rule 82 (empty -> .)

    variable_aux                   shift and go to state 66
    empty                          shift and go to state 68

state 51

    (46) ciclo_for -> PORCADA . exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (54) exp -> . term expT
    (58) term -> . factor termT
    (62) factor -> . factor_constante
    (63) factor -> . factor_variable
    (64) factor -> . factor_expresion
    (65) factor_constante -> . CTEI
    (66) factor_constante -> . CTEF
    (67) factor_variable -> . ID
    (68) factor_variable -> . ID LBRACKET exp RBRACKET
    (69) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> . ID llamada_func
    (71) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 75
    CTEF            shift and go to state 76
    ID              shift and go to state 77
    LPAREN          shift and go to state 78

    exp                            shift and go to state 69
    term                           shift and go to state 70
    factor                         shift and go to state 71
    factor_constante               shift and go to state 72
    factor_variable                shift and go to state 73
    factor_expresion               shift and go to state 74

state 52

    (43) ciclo_while -> MIENTRAS . LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON

    LPAREN          shift and go to state 79


state 53

    (49) condicion -> SI . LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON

    LPAREN          shift and go to state 80


state 54

    (77) escribe -> IMPRIMIR . LPAREN escribe_aux RPAREN SEMICOLON

    LPAREN          shift and go to state 81


state 55

    (42) leer -> LEER . variable SEMICOLON
    (38) variable -> . ID variable_aux

    ID              shift and go to state 83

    variable                       shift and go to state 82

state 56

    (21) dec_func -> FUNCION dec_func_return ID LPAREN parameter . RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON

    RPAREN          shift and go to state 84


state 57

    (26) parameter -> type . ID parameterCycle

    ID              shift and go to state 85


state 58

    (9) simple_var -> VARIABLE type ARROW ID simpleVarCycle . SEMICOLON

    SEMICOLON       shift and go to state 86


state 59

    (10) simpleVarCycle -> COMMA . ID simpleVarCycle

    ID              shift and go to state 87


state 60

    (11) simpleVarCycle -> empty .

    SEMICOLON       reduce using rule 11 (simpleVarCycle -> empty .)


state 61

    (12) array -> RENGLON type ARROW ID LBRACKET . CTEI RBRACKET arrayCycle SEMICOLON

    CTEI            shift and go to state 88


state 62

    (15) matrix -> TABLA type ARROW ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    CTEI            shift and go to state 89


state 63

    (5) inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 90


state 64

    (37) asignar -> variable ASSIGN . exp SEMICOLON
    (54) exp -> . term expT
    (58) term -> . factor termT
    (62) factor -> . factor_constante
    (63) factor -> . factor_variable
    (64) factor -> . factor_expresion
    (65) factor_constante -> . CTEI
    (66) factor_constante -> . CTEF
    (67) factor_variable -> . ID
    (68) factor_variable -> . ID LBRACKET exp RBRACKET
    (69) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> . ID llamada_func
    (71) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 75
    CTEF            shift and go to state 76
    ID              shift and go to state 77
    LPAREN          shift and go to state 78

    exp                            shift and go to state 91
    term                           shift and go to state 70
    factor                         shift and go to state 71
    factor_constante               shift and go to state 72
    factor_variable                shift and go to state 73
    factor_expresion               shift and go to state 74

state 65

    (72) llamada_func -> ID LPAREN . llamadaCYCLE RPAREN SEMICOLON
    (73) llamadaCYCLE -> . exp llamadaCYCLE_aux
    (74) llamadaCYCLE -> . empty
    (54) exp -> . term expT
    (82) empty -> .
    (58) term -> . factor termT
    (62) factor -> . factor_constante
    (63) factor -> . factor_variable
    (64) factor -> . factor_expresion
    (65) factor_constante -> . CTEI
    (66) factor_constante -> . CTEF
    (67) factor_variable -> . ID
    (68) factor_variable -> . ID LBRACKET exp RBRACKET
    (69) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> . ID llamada_func
    (71) factor_expresion -> . LPAREN exp RPAREN

    RPAREN          reduce using rule 82 (empty -> .)
    CTEI            shift and go to state 75
    CTEF            shift and go to state 76
    ID              shift and go to state 77
    LPAREN          shift and go to state 78

    llamadaCYCLE                   shift and go to state 92
    exp                            shift and go to state 93
    empty                          shift and go to state 94
    term                           shift and go to state 70
    factor                         shift and go to state 71
    factor_constante               shift and go to state 72
    factor_variable                shift and go to state 73
    factor_expresion               shift and go to state 74

state 66

    (38) variable -> ID variable_aux .

    ASSIGN          reduce using rule 38 (variable -> ID variable_aux .)
    SEMICOLON       reduce using rule 38 (variable -> ID variable_aux .)


state 67

    (39) variable_aux -> LBRACKET . exp RBRACKET
    (40) variable_aux -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (54) exp -> . term expT
    (58) term -> . factor termT
    (62) factor -> . factor_constante
    (63) factor -> . factor_variable
    (64) factor -> . factor_expresion
    (65) factor_constante -> . CTEI
    (66) factor_constante -> . CTEF
    (67) factor_variable -> . ID
    (68) factor_variable -> . ID LBRACKET exp RBRACKET
    (69) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> . ID llamada_func
    (71) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 75
    CTEF            shift and go to state 76
    ID              shift and go to state 77
    LPAREN          shift and go to state 78

    exp                            shift and go to state 95
    term                           shift and go to state 70
    factor                         shift and go to state 71
    factor_constante               shift and go to state 72
    factor_variable                shift and go to state 73
    factor_expresion               shift and go to state 74

state 68

    (41) variable_aux -> empty .

    ASSIGN          reduce using rule 41 (variable_aux -> empty .)
    SEMICOLON       reduce using rule 41 (variable_aux -> empty .)


state 69

    (46) ciclo_for -> PORCADA exp . EN exp LBRACE estatutos forCycle RBRACE SEMICOLON

    EN              shift and go to state 96


state 70

    (54) exp -> term . expT
    (55) expT -> . PLUS exp
    (56) expT -> . MINUS exp
    (57) expT -> . empty
    (82) empty -> .

    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    EN              reduce using rule 82 (empty -> .)
    SEMICOLON       reduce using rule 82 (empty -> .)
    COMMA           reduce using rule 82 (empty -> .)
    RPAREN          reduce using rule 82 (empty -> .)
    RBRACKET        reduce using rule 82 (empty -> .)
    LBRACE          reduce using rule 82 (empty -> .)

    expT                           shift and go to state 97
    empty                          shift and go to state 100

state 71

    (58) term -> factor . termT
    (59) termT -> . TIMES term
    (60) termT -> . DIVIDE term
    (61) termT -> . empty
    (82) empty -> .

    TIMES           shift and go to state 102
    DIVIDE          shift and go to state 103
    PLUS            reduce using rule 82 (empty -> .)
    MINUS           reduce using rule 82 (empty -> .)
    EN              reduce using rule 82 (empty -> .)
    SEMICOLON       reduce using rule 82 (empty -> .)
    COMMA           reduce using rule 82 (empty -> .)
    RPAREN          reduce using rule 82 (empty -> .)
    RBRACKET        reduce using rule 82 (empty -> .)
    LBRACE          reduce using rule 82 (empty -> .)

    termT                          shift and go to state 101
    empty                          shift and go to state 104

state 72

    (62) factor -> factor_constante .

    TIMES           reduce using rule 62 (factor -> factor_constante .)
    DIVIDE          reduce using rule 62 (factor -> factor_constante .)
    PLUS            reduce using rule 62 (factor -> factor_constante .)
    MINUS           reduce using rule 62 (factor -> factor_constante .)
    EN              reduce using rule 62 (factor -> factor_constante .)
    SEMICOLON       reduce using rule 62 (factor -> factor_constante .)
    COMMA           reduce using rule 62 (factor -> factor_constante .)
    RPAREN          reduce using rule 62 (factor -> factor_constante .)
    RBRACKET        reduce using rule 62 (factor -> factor_constante .)
    LBRACE          reduce using rule 62 (factor -> factor_constante .)


state 73

    (63) factor -> factor_variable .

    TIMES           reduce using rule 63 (factor -> factor_variable .)
    DIVIDE          reduce using rule 63 (factor -> factor_variable .)
    PLUS            reduce using rule 63 (factor -> factor_variable .)
    MINUS           reduce using rule 63 (factor -> factor_variable .)
    EN              reduce using rule 63 (factor -> factor_variable .)
    SEMICOLON       reduce using rule 63 (factor -> factor_variable .)
    COMMA           reduce using rule 63 (factor -> factor_variable .)
    RPAREN          reduce using rule 63 (factor -> factor_variable .)
    RBRACKET        reduce using rule 63 (factor -> factor_variable .)
    LBRACE          reduce using rule 63 (factor -> factor_variable .)


state 74

    (64) factor -> factor_expresion .

    TIMES           reduce using rule 64 (factor -> factor_expresion .)
    DIVIDE          reduce using rule 64 (factor -> factor_expresion .)
    PLUS            reduce using rule 64 (factor -> factor_expresion .)
    MINUS           reduce using rule 64 (factor -> factor_expresion .)
    EN              reduce using rule 64 (factor -> factor_expresion .)
    SEMICOLON       reduce using rule 64 (factor -> factor_expresion .)
    COMMA           reduce using rule 64 (factor -> factor_expresion .)
    RPAREN          reduce using rule 64 (factor -> factor_expresion .)
    RBRACKET        reduce using rule 64 (factor -> factor_expresion .)
    LBRACE          reduce using rule 64 (factor -> factor_expresion .)


state 75

    (65) factor_constante -> CTEI .

    TIMES           reduce using rule 65 (factor_constante -> CTEI .)
    DIVIDE          reduce using rule 65 (factor_constante -> CTEI .)
    PLUS            reduce using rule 65 (factor_constante -> CTEI .)
    MINUS           reduce using rule 65 (factor_constante -> CTEI .)
    EN              reduce using rule 65 (factor_constante -> CTEI .)
    SEMICOLON       reduce using rule 65 (factor_constante -> CTEI .)
    COMMA           reduce using rule 65 (factor_constante -> CTEI .)
    RPAREN          reduce using rule 65 (factor_constante -> CTEI .)
    RBRACKET        reduce using rule 65 (factor_constante -> CTEI .)
    LBRACE          reduce using rule 65 (factor_constante -> CTEI .)


state 76

    (66) factor_constante -> CTEF .

    TIMES           reduce using rule 66 (factor_constante -> CTEF .)
    DIVIDE          reduce using rule 66 (factor_constante -> CTEF .)
    PLUS            reduce using rule 66 (factor_constante -> CTEF .)
    MINUS           reduce using rule 66 (factor_constante -> CTEF .)
    EN              reduce using rule 66 (factor_constante -> CTEF .)
    SEMICOLON       reduce using rule 66 (factor_constante -> CTEF .)
    COMMA           reduce using rule 66 (factor_constante -> CTEF .)
    RPAREN          reduce using rule 66 (factor_constante -> CTEF .)
    RBRACKET        reduce using rule 66 (factor_constante -> CTEF .)
    LBRACE          reduce using rule 66 (factor_constante -> CTEF .)


state 77

    (67) factor_variable -> ID .
    (68) factor_variable -> ID . LBRACKET exp RBRACKET
    (69) factor_variable -> ID . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> ID . llamada_func
    (72) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON

    TIMES           reduce using rule 67 (factor_variable -> ID .)
    DIVIDE          reduce using rule 67 (factor_variable -> ID .)
    PLUS            reduce using rule 67 (factor_variable -> ID .)
    MINUS           reduce using rule 67 (factor_variable -> ID .)
    EN              reduce using rule 67 (factor_variable -> ID .)
    SEMICOLON       reduce using rule 67 (factor_variable -> ID .)
    COMMA           reduce using rule 67 (factor_variable -> ID .)
    RPAREN          reduce using rule 67 (factor_variable -> ID .)
    RBRACKET        reduce using rule 67 (factor_variable -> ID .)
    LBRACE          reduce using rule 67 (factor_variable -> ID .)
    LBRACKET        shift and go to state 106
    ID              shift and go to state 105

    llamada_func                   shift and go to state 107

state 78

    (71) factor_expresion -> LPAREN . exp RPAREN
    (54) exp -> . term expT
    (58) term -> . factor termT
    (62) factor -> . factor_constante
    (63) factor -> . factor_variable
    (64) factor -> . factor_expresion
    (65) factor_constante -> . CTEI
    (66) factor_constante -> . CTEF
    (67) factor_variable -> . ID
    (68) factor_variable -> . ID LBRACKET exp RBRACKET
    (69) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> . ID llamada_func
    (71) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 75
    CTEF            shift and go to state 76
    ID              shift and go to state 77
    LPAREN          shift and go to state 78

    exp                            shift and go to state 108
    term                           shift and go to state 70
    factor                         shift and go to state 71
    factor_constante               shift and go to state 72
    factor_variable                shift and go to state 73
    factor_expresion               shift and go to state 74

state 79

    (43) ciclo_while -> MIENTRAS LPAREN . exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (54) exp -> . term expT
    (58) term -> . factor termT
    (62) factor -> . factor_constante
    (63) factor -> . factor_variable
    (64) factor -> . factor_expresion
    (65) factor_constante -> . CTEI
    (66) factor_constante -> . CTEF
    (67) factor_variable -> . ID
    (68) factor_variable -> . ID LBRACKET exp RBRACKET
    (69) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> . ID llamada_func
    (71) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 75
    CTEF            shift and go to state 76
    ID              shift and go to state 77
    LPAREN          shift and go to state 78

    exp                            shift and go to state 109
    term                           shift and go to state 70
    factor                         shift and go to state 71
    factor_constante               shift and go to state 72
    factor_variable                shift and go to state 73
    factor_expresion               shift and go to state 74

state 80

    (49) condicion -> SI LPAREN . exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (54) exp -> . term expT
    (58) term -> . factor termT
    (62) factor -> . factor_constante
    (63) factor -> . factor_variable
    (64) factor -> . factor_expresion
    (65) factor_constante -> . CTEI
    (66) factor_constante -> . CTEF
    (67) factor_variable -> . ID
    (68) factor_variable -> . ID LBRACKET exp RBRACKET
    (69) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> . ID llamada_func
    (71) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 75
    CTEF            shift and go to state 76
    ID              shift and go to state 77
    LPAREN          shift and go to state 78

    exp                            shift and go to state 110
    term                           shift and go to state 70
    factor                         shift and go to state 71
    factor_constante               shift and go to state 72
    factor_variable                shift and go to state 73
    factor_expresion               shift and go to state 74

state 81

    (77) escribe -> IMPRIMIR LPAREN . escribe_aux RPAREN SEMICOLON
    (78) escribe_aux -> . exp escribeCycle
    (79) escribe_aux -> . CTESTRING escribeCycle
    (54) exp -> . term expT
    (58) term -> . factor termT
    (62) factor -> . factor_constante
    (63) factor -> . factor_variable
    (64) factor -> . factor_expresion
    (65) factor_constante -> . CTEI
    (66) factor_constante -> . CTEF
    (67) factor_variable -> . ID
    (68) factor_variable -> . ID LBRACKET exp RBRACKET
    (69) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> . ID llamada_func
    (71) factor_expresion -> . LPAREN exp RPAREN

    CTESTRING       shift and go to state 113
    CTEI            shift and go to state 75
    CTEF            shift and go to state 76
    ID              shift and go to state 77
    LPAREN          shift and go to state 78

    escribe_aux                    shift and go to state 111
    exp                            shift and go to state 112
    term                           shift and go to state 70
    factor                         shift and go to state 71
    factor_constante               shift and go to state 72
    factor_variable                shift and go to state 73
    factor_expresion               shift and go to state 74

state 82

    (42) leer -> LEER variable . SEMICOLON

    SEMICOLON       shift and go to state 114


state 83

    (38) variable -> ID . variable_aux
    (39) variable_aux -> . LBRACKET exp RBRACKET
    (40) variable_aux -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (41) variable_aux -> . empty
    (82) empty -> .

    LBRACKET        shift and go to state 67
    SEMICOLON       reduce using rule 82 (empty -> .)

    variable_aux                   shift and go to state 66
    empty                          shift and go to state 68

state 84

    (21) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN . LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON

    LBRACE          shift and go to state 115


state 85

    (26) parameter -> type ID . parameterCycle
    (27) parameterCycle -> . COMMA type ID parameterCycle
    (28) parameterCycle -> . empty
    (82) empty -> .

    COMMA           shift and go to state 117
    RPAREN          reduce using rule 82 (empty -> .)

    parameterCycle                 shift and go to state 116
    empty                          shift and go to state 118

state 86

    (9) simple_var -> VARIABLE type ARROW ID simpleVarCycle SEMICOLON .

    INICIO          reduce using rule 9 (simple_var -> VARIABLE type ARROW ID simpleVarCycle SEMICOLON .)
    FUNCION         reduce using rule 9 (simple_var -> VARIABLE type ARROW ID simpleVarCycle SEMICOLON .)
    ID              reduce using rule 9 (simple_var -> VARIABLE type ARROW ID simpleVarCycle SEMICOLON .)
    PORCADA         reduce using rule 9 (simple_var -> VARIABLE type ARROW ID simpleVarCycle SEMICOLON .)
    MIENTRAS        reduce using rule 9 (simple_var -> VARIABLE type ARROW ID simpleVarCycle SEMICOLON .)
    SI              reduce using rule 9 (simple_var -> VARIABLE type ARROW ID simpleVarCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 9 (simple_var -> VARIABLE type ARROW ID simpleVarCycle SEMICOLON .)
    LEER            reduce using rule 9 (simple_var -> VARIABLE type ARROW ID simpleVarCycle SEMICOLON .)
    REGRESAR        reduce using rule 9 (simple_var -> VARIABLE type ARROW ID simpleVarCycle SEMICOLON .)


state 87

    (10) simpleVarCycle -> COMMA ID . simpleVarCycle
    (10) simpleVarCycle -> . COMMA ID simpleVarCycle
    (11) simpleVarCycle -> . empty
    (82) empty -> .

    COMMA           shift and go to state 59
    SEMICOLON       reduce using rule 82 (empty -> .)

    simpleVarCycle                 shift and go to state 119
    empty                          shift and go to state 60

state 88

    (12) array -> RENGLON type ARROW ID LBRACKET CTEI . RBRACKET arrayCycle SEMICOLON

    RBRACKET        shift and go to state 120


state 89

    (15) matrix -> TABLA type ARROW ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    RBRACKET        shift and go to state 121


state 90

    (5) inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON .

    $end            reduce using rule 5 (inicio -> INICIO LPAREN RPAREN LBRACE estatutos RBRACE SEMICOLON .)


state 91

    (37) asignar -> variable ASSIGN exp . SEMICOLON

    SEMICOLON       shift and go to state 122


state 92

    (72) llamada_func -> ID LPAREN llamadaCYCLE . RPAREN SEMICOLON

    RPAREN          shift and go to state 123


state 93

    (73) llamadaCYCLE -> exp . llamadaCYCLE_aux
    (75) llamadaCYCLE_aux -> . COMMA exp llamadaCYCLE_aux
    (76) llamadaCYCLE_aux -> . empty
    (82) empty -> .

    COMMA           shift and go to state 125
    RPAREN          reduce using rule 82 (empty -> .)

    llamadaCYCLE_aux               shift and go to state 124
    empty                          shift and go to state 126

state 94

    (74) llamadaCYCLE -> empty .

    RPAREN          reduce using rule 74 (llamadaCYCLE -> empty .)


state 95

    (39) variable_aux -> LBRACKET exp . RBRACKET
    (40) variable_aux -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET

    RBRACKET        shift and go to state 127


state 96

    (46) ciclo_for -> PORCADA exp EN . exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (54) exp -> . term expT
    (58) term -> . factor termT
    (62) factor -> . factor_constante
    (63) factor -> . factor_variable
    (64) factor -> . factor_expresion
    (65) factor_constante -> . CTEI
    (66) factor_constante -> . CTEF
    (67) factor_variable -> . ID
    (68) factor_variable -> . ID LBRACKET exp RBRACKET
    (69) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> . ID llamada_func
    (71) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 75
    CTEF            shift and go to state 76
    ID              shift and go to state 77
    LPAREN          shift and go to state 78

    exp                            shift and go to state 128
    term                           shift and go to state 70
    factor                         shift and go to state 71
    factor_constante               shift and go to state 72
    factor_variable                shift and go to state 73
    factor_expresion               shift and go to state 74

state 97

    (54) exp -> term expT .

    EN              reduce using rule 54 (exp -> term expT .)
    SEMICOLON       reduce using rule 54 (exp -> term expT .)
    COMMA           reduce using rule 54 (exp -> term expT .)
    RPAREN          reduce using rule 54 (exp -> term expT .)
    RBRACKET        reduce using rule 54 (exp -> term expT .)
    LBRACE          reduce using rule 54 (exp -> term expT .)


state 98

    (55) expT -> PLUS . exp
    (54) exp -> . term expT
    (58) term -> . factor termT
    (62) factor -> . factor_constante
    (63) factor -> . factor_variable
    (64) factor -> . factor_expresion
    (65) factor_constante -> . CTEI
    (66) factor_constante -> . CTEF
    (67) factor_variable -> . ID
    (68) factor_variable -> . ID LBRACKET exp RBRACKET
    (69) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> . ID llamada_func
    (71) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 75
    CTEF            shift and go to state 76
    ID              shift and go to state 77
    LPAREN          shift and go to state 78

    exp                            shift and go to state 129
    term                           shift and go to state 70
    factor                         shift and go to state 71
    factor_constante               shift and go to state 72
    factor_variable                shift and go to state 73
    factor_expresion               shift and go to state 74

state 99

    (56) expT -> MINUS . exp
    (54) exp -> . term expT
    (58) term -> . factor termT
    (62) factor -> . factor_constante
    (63) factor -> . factor_variable
    (64) factor -> . factor_expresion
    (65) factor_constante -> . CTEI
    (66) factor_constante -> . CTEF
    (67) factor_variable -> . ID
    (68) factor_variable -> . ID LBRACKET exp RBRACKET
    (69) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> . ID llamada_func
    (71) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 75
    CTEF            shift and go to state 76
    ID              shift and go to state 77
    LPAREN          shift and go to state 78

    exp                            shift and go to state 130
    term                           shift and go to state 70
    factor                         shift and go to state 71
    factor_constante               shift and go to state 72
    factor_variable                shift and go to state 73
    factor_expresion               shift and go to state 74

state 100

    (57) expT -> empty .

    EN              reduce using rule 57 (expT -> empty .)
    SEMICOLON       reduce using rule 57 (expT -> empty .)
    COMMA           reduce using rule 57 (expT -> empty .)
    RPAREN          reduce using rule 57 (expT -> empty .)
    RBRACKET        reduce using rule 57 (expT -> empty .)
    LBRACE          reduce using rule 57 (expT -> empty .)


state 101

    (58) term -> factor termT .

    PLUS            reduce using rule 58 (term -> factor termT .)
    MINUS           reduce using rule 58 (term -> factor termT .)
    EN              reduce using rule 58 (term -> factor termT .)
    SEMICOLON       reduce using rule 58 (term -> factor termT .)
    COMMA           reduce using rule 58 (term -> factor termT .)
    RPAREN          reduce using rule 58 (term -> factor termT .)
    RBRACKET        reduce using rule 58 (term -> factor termT .)
    LBRACE          reduce using rule 58 (term -> factor termT .)


state 102

    (59) termT -> TIMES . term
    (58) term -> . factor termT
    (62) factor -> . factor_constante
    (63) factor -> . factor_variable
    (64) factor -> . factor_expresion
    (65) factor_constante -> . CTEI
    (66) factor_constante -> . CTEF
    (67) factor_variable -> . ID
    (68) factor_variable -> . ID LBRACKET exp RBRACKET
    (69) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> . ID llamada_func
    (71) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 75
    CTEF            shift and go to state 76
    ID              shift and go to state 77
    LPAREN          shift and go to state 78

    term                           shift and go to state 131
    factor                         shift and go to state 71
    factor_constante               shift and go to state 72
    factor_variable                shift and go to state 73
    factor_expresion               shift and go to state 74

state 103

    (60) termT -> DIVIDE . term
    (58) term -> . factor termT
    (62) factor -> . factor_constante
    (63) factor -> . factor_variable
    (64) factor -> . factor_expresion
    (65) factor_constante -> . CTEI
    (66) factor_constante -> . CTEF
    (67) factor_variable -> . ID
    (68) factor_variable -> . ID LBRACKET exp RBRACKET
    (69) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> . ID llamada_func
    (71) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 75
    CTEF            shift and go to state 76
    ID              shift and go to state 77
    LPAREN          shift and go to state 78

    term                           shift and go to state 132
    factor                         shift and go to state 71
    factor_constante               shift and go to state 72
    factor_variable                shift and go to state 73
    factor_expresion               shift and go to state 74

state 104

    (61) termT -> empty .

    PLUS            reduce using rule 61 (termT -> empty .)
    MINUS           reduce using rule 61 (termT -> empty .)
    EN              reduce using rule 61 (termT -> empty .)
    SEMICOLON       reduce using rule 61 (termT -> empty .)
    COMMA           reduce using rule 61 (termT -> empty .)
    RPAREN          reduce using rule 61 (termT -> empty .)
    RBRACKET        reduce using rule 61 (termT -> empty .)
    LBRACE          reduce using rule 61 (termT -> empty .)


state 105

    (72) llamada_func -> ID . LPAREN llamadaCYCLE RPAREN SEMICOLON

    LPAREN          shift and go to state 65


state 106

    (68) factor_variable -> ID LBRACKET . exp RBRACKET
    (69) factor_variable -> ID LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (54) exp -> . term expT
    (58) term -> . factor termT
    (62) factor -> . factor_constante
    (63) factor -> . factor_variable
    (64) factor -> . factor_expresion
    (65) factor_constante -> . CTEI
    (66) factor_constante -> . CTEF
    (67) factor_variable -> . ID
    (68) factor_variable -> . ID LBRACKET exp RBRACKET
    (69) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> . ID llamada_func
    (71) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 75
    CTEF            shift and go to state 76
    ID              shift and go to state 77
    LPAREN          shift and go to state 78

    exp                            shift and go to state 133
    term                           shift and go to state 70
    factor                         shift and go to state 71
    factor_constante               shift and go to state 72
    factor_variable                shift and go to state 73
    factor_expresion               shift and go to state 74

state 107

    (70) factor_variable -> ID llamada_func .

    TIMES           reduce using rule 70 (factor_variable -> ID llamada_func .)
    DIVIDE          reduce using rule 70 (factor_variable -> ID llamada_func .)
    PLUS            reduce using rule 70 (factor_variable -> ID llamada_func .)
    MINUS           reduce using rule 70 (factor_variable -> ID llamada_func .)
    EN              reduce using rule 70 (factor_variable -> ID llamada_func .)
    SEMICOLON       reduce using rule 70 (factor_variable -> ID llamada_func .)
    COMMA           reduce using rule 70 (factor_variable -> ID llamada_func .)
    RPAREN          reduce using rule 70 (factor_variable -> ID llamada_func .)
    RBRACKET        reduce using rule 70 (factor_variable -> ID llamada_func .)
    LBRACE          reduce using rule 70 (factor_variable -> ID llamada_func .)


state 108

    (71) factor_expresion -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 134


state 109

    (43) ciclo_while -> MIENTRAS LPAREN exp . RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON

    RPAREN          shift and go to state 135


state 110

    (49) condicion -> SI LPAREN exp . RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON

    RPAREN          shift and go to state 136


state 111

    (77) escribe -> IMPRIMIR LPAREN escribe_aux . RPAREN SEMICOLON

    RPAREN          shift and go to state 137


state 112

    (78) escribe_aux -> exp . escribeCycle
    (80) escribeCycle -> . COMMA escribe_aux
    (81) escribeCycle -> . empty
    (82) empty -> .

    COMMA           shift and go to state 139
    RPAREN          reduce using rule 82 (empty -> .)

    escribeCycle                   shift and go to state 138
    empty                          shift and go to state 140

state 113

    (79) escribe_aux -> CTESTRING . escribeCycle
    (80) escribeCycle -> . COMMA escribe_aux
    (81) escribeCycle -> . empty
    (82) empty -> .

    COMMA           shift and go to state 139
    RPAREN          reduce using rule 82 (empty -> .)

    escribeCycle                   shift and go to state 141
    empty                          shift and go to state 140

state 114

    (42) leer -> LEER variable SEMICOLON .

    RBRACE          reduce using rule 42 (leer -> LEER variable SEMICOLON .)
    ID              reduce using rule 42 (leer -> LEER variable SEMICOLON .)
    PORCADA         reduce using rule 42 (leer -> LEER variable SEMICOLON .)
    MIENTRAS        reduce using rule 42 (leer -> LEER variable SEMICOLON .)
    SI              reduce using rule 42 (leer -> LEER variable SEMICOLON .)
    IMPRIMIR        reduce using rule 42 (leer -> LEER variable SEMICOLON .)
    LEER            reduce using rule 42 (leer -> LEER variable SEMICOLON .)
    REGRESAR        reduce using rule 42 (leer -> LEER variable SEMICOLON .)


state 115

    (21) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE . dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
    (6) dec_var -> . simple_var
    (7) dec_var -> . array
    (8) dec_var -> . matrix
    (9) simple_var -> . VARIABLE type ARROW ID simpleVarCycle SEMICOLON
    (12) array -> . RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON
    (15) matrix -> . TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    VARIABLE        shift and go to state 13
    RENGLON         shift and go to state 14
    TABLA           shift and go to state 15

    dec_var                        shift and go to state 142
    simple_var                     shift and go to state 9
    array                          shift and go to state 10
    matrix                         shift and go to state 11

state 116

    (26) parameter -> type ID parameterCycle .

    RPAREN          reduce using rule 26 (parameter -> type ID parameterCycle .)


state 117

    (27) parameterCycle -> COMMA . type ID parameterCycle
    (18) type -> . ENTERO
    (19) type -> . DECIMAL
    (20) type -> . LETRA

    ENTERO          shift and go to state 23
    DECIMAL         shift and go to state 24
    LETRA           shift and go to state 25

    type                           shift and go to state 143

state 118

    (28) parameterCycle -> empty .

    RPAREN          reduce using rule 28 (parameterCycle -> empty .)


state 119

    (10) simpleVarCycle -> COMMA ID simpleVarCycle .

    SEMICOLON       reduce using rule 10 (simpleVarCycle -> COMMA ID simpleVarCycle .)


state 120

    (12) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET . arrayCycle SEMICOLON
    (13) arrayCycle -> . COMMA ID LBRACKET CTEI RBRACKET arrayCycle
    (14) arrayCycle -> . empty
    (82) empty -> .

    COMMA           shift and go to state 145
    SEMICOLON       reduce using rule 82 (empty -> .)

    arrayCycle                     shift and go to state 144
    empty                          shift and go to state 146

state 121

    (15) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET matrixCycle SEMICOLON

    LBRACKET        shift and go to state 147


state 122

    (37) asignar -> variable ASSIGN exp SEMICOLON .

    RBRACE          reduce using rule 37 (asignar -> variable ASSIGN exp SEMICOLON .)
    ID              reduce using rule 37 (asignar -> variable ASSIGN exp SEMICOLON .)
    PORCADA         reduce using rule 37 (asignar -> variable ASSIGN exp SEMICOLON .)
    MIENTRAS        reduce using rule 37 (asignar -> variable ASSIGN exp SEMICOLON .)
    SI              reduce using rule 37 (asignar -> variable ASSIGN exp SEMICOLON .)
    IMPRIMIR        reduce using rule 37 (asignar -> variable ASSIGN exp SEMICOLON .)
    LEER            reduce using rule 37 (asignar -> variable ASSIGN exp SEMICOLON .)
    REGRESAR        reduce using rule 37 (asignar -> variable ASSIGN exp SEMICOLON .)


state 123

    (72) llamada_func -> ID LPAREN llamadaCYCLE RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 148


state 124

    (73) llamadaCYCLE -> exp llamadaCYCLE_aux .

    RPAREN          reduce using rule 73 (llamadaCYCLE -> exp llamadaCYCLE_aux .)


state 125

    (75) llamadaCYCLE_aux -> COMMA . exp llamadaCYCLE_aux
    (54) exp -> . term expT
    (58) term -> . factor termT
    (62) factor -> . factor_constante
    (63) factor -> . factor_variable
    (64) factor -> . factor_expresion
    (65) factor_constante -> . CTEI
    (66) factor_constante -> . CTEF
    (67) factor_variable -> . ID
    (68) factor_variable -> . ID LBRACKET exp RBRACKET
    (69) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> . ID llamada_func
    (71) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 75
    CTEF            shift and go to state 76
    ID              shift and go to state 77
    LPAREN          shift and go to state 78

    exp                            shift and go to state 149
    term                           shift and go to state 70
    factor                         shift and go to state 71
    factor_constante               shift and go to state 72
    factor_variable                shift and go to state 73
    factor_expresion               shift and go to state 74

state 126

    (76) llamadaCYCLE_aux -> empty .

    RPAREN          reduce using rule 76 (llamadaCYCLE_aux -> empty .)


state 127

    (39) variable_aux -> LBRACKET exp RBRACKET .
    (40) variable_aux -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    ASSIGN          reduce using rule 39 (variable_aux -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 39 (variable_aux -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 150


state 128

    (46) ciclo_for -> PORCADA exp EN exp . LBRACE estatutos forCycle RBRACE SEMICOLON

    LBRACE          shift and go to state 151


state 129

    (55) expT -> PLUS exp .

    EN              reduce using rule 55 (expT -> PLUS exp .)
    SEMICOLON       reduce using rule 55 (expT -> PLUS exp .)
    COMMA           reduce using rule 55 (expT -> PLUS exp .)
    RPAREN          reduce using rule 55 (expT -> PLUS exp .)
    RBRACKET        reduce using rule 55 (expT -> PLUS exp .)
    LBRACE          reduce using rule 55 (expT -> PLUS exp .)


state 130

    (56) expT -> MINUS exp .

    EN              reduce using rule 56 (expT -> MINUS exp .)
    SEMICOLON       reduce using rule 56 (expT -> MINUS exp .)
    COMMA           reduce using rule 56 (expT -> MINUS exp .)
    RPAREN          reduce using rule 56 (expT -> MINUS exp .)
    RBRACKET        reduce using rule 56 (expT -> MINUS exp .)
    LBRACE          reduce using rule 56 (expT -> MINUS exp .)


state 131

    (59) termT -> TIMES term .

    PLUS            reduce using rule 59 (termT -> TIMES term .)
    MINUS           reduce using rule 59 (termT -> TIMES term .)
    EN              reduce using rule 59 (termT -> TIMES term .)
    SEMICOLON       reduce using rule 59 (termT -> TIMES term .)
    COMMA           reduce using rule 59 (termT -> TIMES term .)
    RPAREN          reduce using rule 59 (termT -> TIMES term .)
    RBRACKET        reduce using rule 59 (termT -> TIMES term .)
    LBRACE          reduce using rule 59 (termT -> TIMES term .)


state 132

    (60) termT -> DIVIDE term .

    PLUS            reduce using rule 60 (termT -> DIVIDE term .)
    MINUS           reduce using rule 60 (termT -> DIVIDE term .)
    EN              reduce using rule 60 (termT -> DIVIDE term .)
    SEMICOLON       reduce using rule 60 (termT -> DIVIDE term .)
    COMMA           reduce using rule 60 (termT -> DIVIDE term .)
    RPAREN          reduce using rule 60 (termT -> DIVIDE term .)
    RBRACKET        reduce using rule 60 (termT -> DIVIDE term .)
    LBRACE          reduce using rule 60 (termT -> DIVIDE term .)


state 133

    (68) factor_variable -> ID LBRACKET exp . RBRACKET
    (69) factor_variable -> ID LBRACKET exp . RBRACKET LBRACKET exp RBRACKET

    RBRACKET        shift and go to state 152


state 134

    (71) factor_expresion -> LPAREN exp RPAREN .

    TIMES           reduce using rule 71 (factor_expresion -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 71 (factor_expresion -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 71 (factor_expresion -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 71 (factor_expresion -> LPAREN exp RPAREN .)
    EN              reduce using rule 71 (factor_expresion -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 71 (factor_expresion -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 71 (factor_expresion -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 71 (factor_expresion -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 71 (factor_expresion -> LPAREN exp RPAREN .)
    LBRACE          reduce using rule 71 (factor_expresion -> LPAREN exp RPAREN .)


state 135

    (43) ciclo_while -> MIENTRAS LPAREN exp RPAREN . LBRACE estatutos whileCycle RBRACE SEMICOLON

    LBRACE          shift and go to state 153


state 136

    (49) condicion -> SI LPAREN exp RPAREN . LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON

    LBRACE          shift and go to state 154


state 137

    (77) escribe -> IMPRIMIR LPAREN escribe_aux RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 155


state 138

    (78) escribe_aux -> exp escribeCycle .

    RPAREN          reduce using rule 78 (escribe_aux -> exp escribeCycle .)


state 139

    (80) escribeCycle -> COMMA . escribe_aux
    (78) escribe_aux -> . exp escribeCycle
    (79) escribe_aux -> . CTESTRING escribeCycle
    (54) exp -> . term expT
    (58) term -> . factor termT
    (62) factor -> . factor_constante
    (63) factor -> . factor_variable
    (64) factor -> . factor_expresion
    (65) factor_constante -> . CTEI
    (66) factor_constante -> . CTEF
    (67) factor_variable -> . ID
    (68) factor_variable -> . ID LBRACKET exp RBRACKET
    (69) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> . ID llamada_func
    (71) factor_expresion -> . LPAREN exp RPAREN

    CTESTRING       shift and go to state 113
    CTEI            shift and go to state 75
    CTEF            shift and go to state 76
    ID              shift and go to state 77
    LPAREN          shift and go to state 78

    escribe_aux                    shift and go to state 156
    exp                            shift and go to state 112
    term                           shift and go to state 70
    factor                         shift and go to state 71
    factor_constante               shift and go to state 72
    factor_variable                shift and go to state 73
    factor_expresion               shift and go to state 74

state 140

    (81) escribeCycle -> empty .

    RPAREN          reduce using rule 81 (escribeCycle -> empty .)


state 141

    (79) escribe_aux -> CTESTRING escribeCycle .

    RPAREN          reduce using rule 79 (escribe_aux -> CTESTRING escribeCycle .)


state 142

    (21) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var . estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
    (29) estatutos -> . asignar
    (30) estatutos -> . llamada_func
    (31) estatutos -> . ciclo_for
    (32) estatutos -> . ciclo_while
    (33) estatutos -> . condicion
    (34) estatutos -> . escribe
    (35) estatutos -> . leer
    (36) estatutos -> . empty
    (37) asignar -> . variable ASSIGN exp SEMICOLON
    (72) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (46) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (43) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (49) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (77) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (42) leer -> . LEER variable SEMICOLON
    (82) empty -> .
    (38) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 50
    PORCADA         shift and go to state 51
    MIENTRAS        shift and go to state 52
    SI              shift and go to state 53
    IMPRIMIR        shift and go to state 54
    LEER            shift and go to state 55
    REGRESAR        reduce using rule 82 (empty -> .)

  ! ID              [ reduce using rule 82 (empty -> .) ]
  ! PORCADA         [ reduce using rule 82 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 82 (empty -> .) ]
  ! SI              [ reduce using rule 82 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 82 (empty -> .) ]
  ! LEER            [ reduce using rule 82 (empty -> .) ]

    estatutos                      shift and go to state 157
    variable                       shift and go to state 49
    asignar                        shift and go to state 41
    llamada_func                   shift and go to state 42
    ciclo_for                      shift and go to state 43
    ciclo_while                    shift and go to state 44
    condicion                      shift and go to state 45
    escribe                        shift and go to state 46
    leer                           shift and go to state 47
    empty                          shift and go to state 48

state 143

    (27) parameterCycle -> COMMA type . ID parameterCycle

    ID              shift and go to state 158


state 144

    (12) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle . SEMICOLON

    SEMICOLON       shift and go to state 159


state 145

    (13) arrayCycle -> COMMA . ID LBRACKET CTEI RBRACKET arrayCycle

    ID              shift and go to state 160


state 146

    (14) arrayCycle -> empty .

    SEMICOLON       reduce using rule 14 (arrayCycle -> empty .)


state 147

    (15) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET matrixCycle SEMICOLON

    CTEI            shift and go to state 161


state 148

    (72) llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .

    RBRACE          reduce using rule 72 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    TIMES           reduce using rule 72 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 72 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    PLUS            reduce using rule 72 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    MINUS           reduce using rule 72 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    EN              reduce using rule 72 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 72 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    COMMA           reduce using rule 72 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    RPAREN          reduce using rule 72 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 72 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LBRACE          reduce using rule 72 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    ID              reduce using rule 72 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    PORCADA         reduce using rule 72 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 72 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    SI              reduce using rule 72 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 72 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    LEER            reduce using rule 72 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)
    REGRESAR        reduce using rule 72 (llamada_func -> ID LPAREN llamadaCYCLE RPAREN SEMICOLON .)


state 149

    (75) llamadaCYCLE_aux -> COMMA exp . llamadaCYCLE_aux
    (75) llamadaCYCLE_aux -> . COMMA exp llamadaCYCLE_aux
    (76) llamadaCYCLE_aux -> . empty
    (82) empty -> .

    COMMA           shift and go to state 125
    RPAREN          reduce using rule 82 (empty -> .)

    llamadaCYCLE_aux               shift and go to state 162
    empty                          shift and go to state 126

state 150

    (40) variable_aux -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (54) exp -> . term expT
    (58) term -> . factor termT
    (62) factor -> . factor_constante
    (63) factor -> . factor_variable
    (64) factor -> . factor_expresion
    (65) factor_constante -> . CTEI
    (66) factor_constante -> . CTEF
    (67) factor_variable -> . ID
    (68) factor_variable -> . ID LBRACKET exp RBRACKET
    (69) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> . ID llamada_func
    (71) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 75
    CTEF            shift and go to state 76
    ID              shift and go to state 77
    LPAREN          shift and go to state 78

    exp                            shift and go to state 163
    term                           shift and go to state 70
    factor                         shift and go to state 71
    factor_constante               shift and go to state 72
    factor_variable                shift and go to state 73
    factor_expresion               shift and go to state 74

state 151

    (46) ciclo_for -> PORCADA exp EN exp LBRACE . estatutos forCycle RBRACE SEMICOLON
    (29) estatutos -> . asignar
    (30) estatutos -> . llamada_func
    (31) estatutos -> . ciclo_for
    (32) estatutos -> . ciclo_while
    (33) estatutos -> . condicion
    (34) estatutos -> . escribe
    (35) estatutos -> . leer
    (36) estatutos -> . empty
    (37) asignar -> . variable ASSIGN exp SEMICOLON
    (72) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (46) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (43) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (49) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (77) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (42) leer -> . LEER variable SEMICOLON
    (82) empty -> .
    (38) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 50
    PORCADA         shift and go to state 51
    MIENTRAS        shift and go to state 52
    SI              shift and go to state 53
    IMPRIMIR        shift and go to state 54
    LEER            shift and go to state 55
    RBRACE          reduce using rule 82 (empty -> .)

  ! ID              [ reduce using rule 82 (empty -> .) ]
  ! PORCADA         [ reduce using rule 82 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 82 (empty -> .) ]
  ! SI              [ reduce using rule 82 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 82 (empty -> .) ]
  ! LEER            [ reduce using rule 82 (empty -> .) ]

    estatutos                      shift and go to state 164
    asignar                        shift and go to state 41
    llamada_func                   shift and go to state 42
    ciclo_for                      shift and go to state 43
    ciclo_while                    shift and go to state 44
    condicion                      shift and go to state 45
    escribe                        shift and go to state 46
    leer                           shift and go to state 47
    empty                          shift and go to state 48
    variable                       shift and go to state 49

state 152

    (68) factor_variable -> ID LBRACKET exp RBRACKET .
    (69) factor_variable -> ID LBRACKET exp RBRACKET . LBRACKET exp RBRACKET

    TIMES           reduce using rule 68 (factor_variable -> ID LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 68 (factor_variable -> ID LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 68 (factor_variable -> ID LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 68 (factor_variable -> ID LBRACKET exp RBRACKET .)
    EN              reduce using rule 68 (factor_variable -> ID LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 68 (factor_variable -> ID LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 68 (factor_variable -> ID LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 68 (factor_variable -> ID LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 68 (factor_variable -> ID LBRACKET exp RBRACKET .)
    LBRACE          reduce using rule 68 (factor_variable -> ID LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 165


state 153

    (43) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE . estatutos whileCycle RBRACE SEMICOLON
    (29) estatutos -> . asignar
    (30) estatutos -> . llamada_func
    (31) estatutos -> . ciclo_for
    (32) estatutos -> . ciclo_while
    (33) estatutos -> . condicion
    (34) estatutos -> . escribe
    (35) estatutos -> . leer
    (36) estatutos -> . empty
    (37) asignar -> . variable ASSIGN exp SEMICOLON
    (72) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (46) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (43) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (49) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (77) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (42) leer -> . LEER variable SEMICOLON
    (82) empty -> .
    (38) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 50
    PORCADA         shift and go to state 51
    MIENTRAS        shift and go to state 52
    SI              shift and go to state 53
    IMPRIMIR        shift and go to state 54
    LEER            shift and go to state 55
    RBRACE          reduce using rule 82 (empty -> .)

  ! ID              [ reduce using rule 82 (empty -> .) ]
  ! PORCADA         [ reduce using rule 82 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 82 (empty -> .) ]
  ! SI              [ reduce using rule 82 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 82 (empty -> .) ]
  ! LEER            [ reduce using rule 82 (empty -> .) ]

    estatutos                      shift and go to state 166
    asignar                        shift and go to state 41
    llamada_func                   shift and go to state 42
    ciclo_for                      shift and go to state 43
    ciclo_while                    shift and go to state 44
    condicion                      shift and go to state 45
    escribe                        shift and go to state 46
    leer                           shift and go to state 47
    empty                          shift and go to state 48
    variable                       shift and go to state 49

state 154

    (49) condicion -> SI LPAREN exp RPAREN LBRACE . estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (29) estatutos -> . asignar
    (30) estatutos -> . llamada_func
    (31) estatutos -> . ciclo_for
    (32) estatutos -> . ciclo_while
    (33) estatutos -> . condicion
    (34) estatutos -> . escribe
    (35) estatutos -> . leer
    (36) estatutos -> . empty
    (37) asignar -> . variable ASSIGN exp SEMICOLON
    (72) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (46) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (43) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (49) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (77) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (42) leer -> . LEER variable SEMICOLON
    (82) empty -> .
    (38) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 50
    PORCADA         shift and go to state 51
    MIENTRAS        shift and go to state 52
    SI              shift and go to state 53
    IMPRIMIR        shift and go to state 54
    LEER            shift and go to state 55
    RBRACE          reduce using rule 82 (empty -> .)

  ! ID              [ reduce using rule 82 (empty -> .) ]
  ! PORCADA         [ reduce using rule 82 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 82 (empty -> .) ]
  ! SI              [ reduce using rule 82 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 82 (empty -> .) ]
  ! LEER            [ reduce using rule 82 (empty -> .) ]

    estatutos                      shift and go to state 167
    asignar                        shift and go to state 41
    llamada_func                   shift and go to state 42
    ciclo_for                      shift and go to state 43
    ciclo_while                    shift and go to state 44
    condicion                      shift and go to state 45
    escribe                        shift and go to state 46
    leer                           shift and go to state 47
    empty                          shift and go to state 48
    variable                       shift and go to state 49

state 155

    (77) escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .

    RBRACE          reduce using rule 77 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    ID              reduce using rule 77 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    PORCADA         reduce using rule 77 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 77 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    SI              reduce using rule 77 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    IMPRIMIR        reduce using rule 77 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    LEER            reduce using rule 77 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)
    REGRESAR        reduce using rule 77 (escribe -> IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON .)


state 156

    (80) escribeCycle -> COMMA escribe_aux .

    RPAREN          reduce using rule 80 (escribeCycle -> COMMA escribe_aux .)


state 157

    (21) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos . decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON
    (24) decFuncCycle -> . estatutos decFuncCycle
    (25) decFuncCycle -> . empty
    (29) estatutos -> . asignar
    (30) estatutos -> . llamada_func
    (31) estatutos -> . ciclo_for
    (32) estatutos -> . ciclo_while
    (33) estatutos -> . condicion
    (34) estatutos -> . escribe
    (35) estatutos -> . leer
    (36) estatutos -> . empty
    (82) empty -> .
    (37) asignar -> . variable ASSIGN exp SEMICOLON
    (72) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (46) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (43) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (49) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (77) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (42) leer -> . LEER variable SEMICOLON
    (38) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    REGRESAR        reduce using rule 82 (empty -> .)
    ID              shift and go to state 50
    PORCADA         shift and go to state 51
    MIENTRAS        shift and go to state 52
    SI              shift and go to state 53
    IMPRIMIR        shift and go to state 54
    LEER            shift and go to state 55

  ! ID              [ reduce using rule 82 (empty -> .) ]
  ! PORCADA         [ reduce using rule 82 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 82 (empty -> .) ]
  ! SI              [ reduce using rule 82 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 82 (empty -> .) ]
  ! LEER            [ reduce using rule 82 (empty -> .) ]

    estatutos                      shift and go to state 168
    decFuncCycle                   shift and go to state 169
    variable                       shift and go to state 49
    empty                          shift and go to state 170
    asignar                        shift and go to state 41
    llamada_func                   shift and go to state 42
    ciclo_for                      shift and go to state 43
    ciclo_while                    shift and go to state 44
    condicion                      shift and go to state 45
    escribe                        shift and go to state 46
    leer                           shift and go to state 47

state 158

    (27) parameterCycle -> COMMA type ID . parameterCycle
    (27) parameterCycle -> . COMMA type ID parameterCycle
    (28) parameterCycle -> . empty
    (82) empty -> .

    COMMA           shift and go to state 117
    RPAREN          reduce using rule 82 (empty -> .)

    parameterCycle                 shift and go to state 171
    empty                          shift and go to state 118

state 159

    (12) array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .

    INICIO          reduce using rule 12 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    FUNCION         reduce using rule 12 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    ID              reduce using rule 12 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    PORCADA         reduce using rule 12 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    MIENTRAS        reduce using rule 12 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    SI              reduce using rule 12 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 12 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    LEER            reduce using rule 12 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)
    REGRESAR        reduce using rule 12 (array -> RENGLON type ARROW ID LBRACKET CTEI RBRACKET arrayCycle SEMICOLON .)


state 160

    (13) arrayCycle -> COMMA ID . LBRACKET CTEI RBRACKET arrayCycle

    LBRACKET        shift and go to state 172


state 161

    (15) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET matrixCycle SEMICOLON

    RBRACKET        shift and go to state 173


state 162

    (75) llamadaCYCLE_aux -> COMMA exp llamadaCYCLE_aux .

    RPAREN          reduce using rule 75 (llamadaCYCLE_aux -> COMMA exp llamadaCYCLE_aux .)


state 163

    (40) variable_aux -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 174


state 164

    (46) ciclo_for -> PORCADA exp EN exp LBRACE estatutos . forCycle RBRACE SEMICOLON
    (47) forCycle -> . estatutos forCycle
    (48) forCycle -> . empty
    (29) estatutos -> . asignar
    (30) estatutos -> . llamada_func
    (31) estatutos -> . ciclo_for
    (32) estatutos -> . ciclo_while
    (33) estatutos -> . condicion
    (34) estatutos -> . escribe
    (35) estatutos -> . leer
    (36) estatutos -> . empty
    (82) empty -> .
    (37) asignar -> . variable ASSIGN exp SEMICOLON
    (72) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (46) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (43) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (49) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (77) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (42) leer -> . LEER variable SEMICOLON
    (38) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 82 (empty -> .)
    ID              shift and go to state 50
    PORCADA         shift and go to state 51
    MIENTRAS        shift and go to state 52
    SI              shift and go to state 53
    IMPRIMIR        shift and go to state 54
    LEER            shift and go to state 55

  ! ID              [ reduce using rule 82 (empty -> .) ]
  ! PORCADA         [ reduce using rule 82 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 82 (empty -> .) ]
  ! SI              [ reduce using rule 82 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 82 (empty -> .) ]
  ! LEER            [ reduce using rule 82 (empty -> .) ]

    estatutos                      shift and go to state 175
    forCycle                       shift and go to state 176
    empty                          shift and go to state 177
    asignar                        shift and go to state 41
    llamada_func                   shift and go to state 42
    ciclo_for                      shift and go to state 43
    ciclo_while                    shift and go to state 44
    condicion                      shift and go to state 45
    escribe                        shift and go to state 46
    leer                           shift and go to state 47
    variable                       shift and go to state 49

state 165

    (69) factor_variable -> ID LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (54) exp -> . term expT
    (58) term -> . factor termT
    (62) factor -> . factor_constante
    (63) factor -> . factor_variable
    (64) factor -> . factor_expresion
    (65) factor_constante -> . CTEI
    (66) factor_constante -> . CTEF
    (67) factor_variable -> . ID
    (68) factor_variable -> . ID LBRACKET exp RBRACKET
    (69) factor_variable -> . ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (70) factor_variable -> . ID llamada_func
    (71) factor_expresion -> . LPAREN exp RPAREN

    CTEI            shift and go to state 75
    CTEF            shift and go to state 76
    ID              shift and go to state 77
    LPAREN          shift and go to state 78

    exp                            shift and go to state 178
    term                           shift and go to state 70
    factor                         shift and go to state 71
    factor_constante               shift and go to state 72
    factor_variable                shift and go to state 73
    factor_expresion               shift and go to state 74

state 166

    (43) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos . whileCycle RBRACE SEMICOLON
    (44) whileCycle -> . estatutos whileCycle
    (45) whileCycle -> . empty
    (29) estatutos -> . asignar
    (30) estatutos -> . llamada_func
    (31) estatutos -> . ciclo_for
    (32) estatutos -> . ciclo_while
    (33) estatutos -> . condicion
    (34) estatutos -> . escribe
    (35) estatutos -> . leer
    (36) estatutos -> . empty
    (82) empty -> .
    (37) asignar -> . variable ASSIGN exp SEMICOLON
    (72) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (46) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (43) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (49) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (77) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (42) leer -> . LEER variable SEMICOLON
    (38) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 82 (empty -> .)
    ID              shift and go to state 50
    PORCADA         shift and go to state 51
    MIENTRAS        shift and go to state 52
    SI              shift and go to state 53
    IMPRIMIR        shift and go to state 54
    LEER            shift and go to state 55

  ! ID              [ reduce using rule 82 (empty -> .) ]
  ! PORCADA         [ reduce using rule 82 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 82 (empty -> .) ]
  ! SI              [ reduce using rule 82 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 82 (empty -> .) ]
  ! LEER            [ reduce using rule 82 (empty -> .) ]

    estatutos                      shift and go to state 179
    whileCycle                     shift and go to state 180
    empty                          shift and go to state 181
    asignar                        shift and go to state 41
    llamada_func                   shift and go to state 42
    ciclo_for                      shift and go to state 43
    ciclo_while                    shift and go to state 44
    condicion                      shift and go to state 45
    escribe                        shift and go to state 46
    leer                           shift and go to state 47
    variable                       shift and go to state 49

state 167

    (49) condicion -> SI LPAREN exp RPAREN LBRACE estatutos . condicionCycle RBRACE sinoCondicion SEMICOLON
    (50) condicionCycle -> . estatutos condicionCycle
    (51) condicionCycle -> . empty
    (29) estatutos -> . asignar
    (30) estatutos -> . llamada_func
    (31) estatutos -> . ciclo_for
    (32) estatutos -> . ciclo_while
    (33) estatutos -> . condicion
    (34) estatutos -> . escribe
    (35) estatutos -> . leer
    (36) estatutos -> . empty
    (82) empty -> .
    (37) asignar -> . variable ASSIGN exp SEMICOLON
    (72) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (46) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (43) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (49) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (77) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (42) leer -> . LEER variable SEMICOLON
    (38) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 82 (empty -> .)
    ID              shift and go to state 50
    PORCADA         shift and go to state 51
    MIENTRAS        shift and go to state 52
    SI              shift and go to state 53
    IMPRIMIR        shift and go to state 54
    LEER            shift and go to state 55

  ! ID              [ reduce using rule 82 (empty -> .) ]
  ! PORCADA         [ reduce using rule 82 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 82 (empty -> .) ]
  ! SI              [ reduce using rule 82 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 82 (empty -> .) ]
  ! LEER            [ reduce using rule 82 (empty -> .) ]

    estatutos                      shift and go to state 182
    condicionCycle                 shift and go to state 183
    empty                          shift and go to state 184
    asignar                        shift and go to state 41
    llamada_func                   shift and go to state 42
    ciclo_for                      shift and go to state 43
    ciclo_while                    shift and go to state 44
    condicion                      shift and go to state 45
    escribe                        shift and go to state 46
    leer                           shift and go to state 47
    variable                       shift and go to state 49

state 168

    (24) decFuncCycle -> estatutos . decFuncCycle
    (24) decFuncCycle -> . estatutos decFuncCycle
    (25) decFuncCycle -> . empty
    (29) estatutos -> . asignar
    (30) estatutos -> . llamada_func
    (31) estatutos -> . ciclo_for
    (32) estatutos -> . ciclo_while
    (33) estatutos -> . condicion
    (34) estatutos -> . escribe
    (35) estatutos -> . leer
    (36) estatutos -> . empty
    (82) empty -> .
    (37) asignar -> . variable ASSIGN exp SEMICOLON
    (72) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (46) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (43) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (49) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (77) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (42) leer -> . LEER variable SEMICOLON
    (38) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    REGRESAR        reduce using rule 82 (empty -> .)
    ID              shift and go to state 50
    PORCADA         shift and go to state 51
    MIENTRAS        shift and go to state 52
    SI              shift and go to state 53
    IMPRIMIR        shift and go to state 54
    LEER            shift and go to state 55

  ! ID              [ reduce using rule 82 (empty -> .) ]
  ! PORCADA         [ reduce using rule 82 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 82 (empty -> .) ]
  ! SI              [ reduce using rule 82 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 82 (empty -> .) ]
  ! LEER            [ reduce using rule 82 (empty -> .) ]

    estatutos                      shift and go to state 168
    decFuncCycle                   shift and go to state 185
    empty                          shift and go to state 170
    asignar                        shift and go to state 41
    llamada_func                   shift and go to state 42
    ciclo_for                      shift and go to state 43
    ciclo_while                    shift and go to state 44
    condicion                      shift and go to state 45
    escribe                        shift and go to state 46
    leer                           shift and go to state 47
    variable                       shift and go to state 49

state 169

    (21) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle . REGRESAR variable SEMICOLON RBRACE SEMICOLON

    REGRESAR        shift and go to state 186


state 170

    (25) decFuncCycle -> empty .
    (36) estatutos -> empty .

  ! reduce/reduce conflict for REGRESAR resolved using rule 25 (decFuncCycle -> empty .)
    REGRESAR        reduce using rule 25 (decFuncCycle -> empty .)
    ID              reduce using rule 36 (estatutos -> empty .)
    PORCADA         reduce using rule 36 (estatutos -> empty .)
    MIENTRAS        reduce using rule 36 (estatutos -> empty .)
    SI              reduce using rule 36 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 36 (estatutos -> empty .)
    LEER            reduce using rule 36 (estatutos -> empty .)

  ! REGRESAR        [ reduce using rule 36 (estatutos -> empty .) ]


state 171

    (27) parameterCycle -> COMMA type ID parameterCycle .

    RPAREN          reduce using rule 27 (parameterCycle -> COMMA type ID parameterCycle .)


state 172

    (13) arrayCycle -> COMMA ID LBRACKET . CTEI RBRACKET arrayCycle

    CTEI            shift and go to state 187


state 173

    (15) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . matrixCycle SEMICOLON
    (16) matrixCycle -> . COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle
    (17) matrixCycle -> . empty
    (82) empty -> .

    COMMA           shift and go to state 189
    SEMICOLON       reduce using rule 82 (empty -> .)

    matrixCycle                    shift and go to state 188
    empty                          shift and go to state 190

state 174

    (40) variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    ASSIGN          reduce using rule 40 (variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 40 (variable_aux -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 175

    (47) forCycle -> estatutos . forCycle
    (47) forCycle -> . estatutos forCycle
    (48) forCycle -> . empty
    (29) estatutos -> . asignar
    (30) estatutos -> . llamada_func
    (31) estatutos -> . ciclo_for
    (32) estatutos -> . ciclo_while
    (33) estatutos -> . condicion
    (34) estatutos -> . escribe
    (35) estatutos -> . leer
    (36) estatutos -> . empty
    (82) empty -> .
    (37) asignar -> . variable ASSIGN exp SEMICOLON
    (72) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (46) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (43) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (49) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (77) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (42) leer -> . LEER variable SEMICOLON
    (38) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 82 (empty -> .)
    ID              shift and go to state 50
    PORCADA         shift and go to state 51
    MIENTRAS        shift and go to state 52
    SI              shift and go to state 53
    IMPRIMIR        shift and go to state 54
    LEER            shift and go to state 55

  ! ID              [ reduce using rule 82 (empty -> .) ]
  ! PORCADA         [ reduce using rule 82 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 82 (empty -> .) ]
  ! SI              [ reduce using rule 82 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 82 (empty -> .) ]
  ! LEER            [ reduce using rule 82 (empty -> .) ]

    estatutos                      shift and go to state 175
    forCycle                       shift and go to state 191
    empty                          shift and go to state 177
    asignar                        shift and go to state 41
    llamada_func                   shift and go to state 42
    ciclo_for                      shift and go to state 43
    ciclo_while                    shift and go to state 44
    condicion                      shift and go to state 45
    escribe                        shift and go to state 46
    leer                           shift and go to state 47
    variable                       shift and go to state 49

state 176

    (46) ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle . RBRACE SEMICOLON

    RBRACE          shift and go to state 192


state 177

    (48) forCycle -> empty .
    (36) estatutos -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 36 (estatutos -> empty .)
    ID              reduce using rule 36 (estatutos -> empty .)
    PORCADA         reduce using rule 36 (estatutos -> empty .)
    MIENTRAS        reduce using rule 36 (estatutos -> empty .)
    SI              reduce using rule 36 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 36 (estatutos -> empty .)
    LEER            reduce using rule 36 (estatutos -> empty .)
    RBRACE          reduce using rule 36 (estatutos -> empty .)

  ! RBRACE          [ reduce using rule 48 (forCycle -> empty .) ]


state 178

    (69) factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 193


state 179

    (44) whileCycle -> estatutos . whileCycle
    (44) whileCycle -> . estatutos whileCycle
    (45) whileCycle -> . empty
    (29) estatutos -> . asignar
    (30) estatutos -> . llamada_func
    (31) estatutos -> . ciclo_for
    (32) estatutos -> . ciclo_while
    (33) estatutos -> . condicion
    (34) estatutos -> . escribe
    (35) estatutos -> . leer
    (36) estatutos -> . empty
    (82) empty -> .
    (37) asignar -> . variable ASSIGN exp SEMICOLON
    (72) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (46) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (43) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (49) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (77) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (42) leer -> . LEER variable SEMICOLON
    (38) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 82 (empty -> .)
    ID              shift and go to state 50
    PORCADA         shift and go to state 51
    MIENTRAS        shift and go to state 52
    SI              shift and go to state 53
    IMPRIMIR        shift and go to state 54
    LEER            shift and go to state 55

  ! ID              [ reduce using rule 82 (empty -> .) ]
  ! PORCADA         [ reduce using rule 82 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 82 (empty -> .) ]
  ! SI              [ reduce using rule 82 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 82 (empty -> .) ]
  ! LEER            [ reduce using rule 82 (empty -> .) ]

    estatutos                      shift and go to state 179
    whileCycle                     shift and go to state 194
    empty                          shift and go to state 181
    asignar                        shift and go to state 41
    llamada_func                   shift and go to state 42
    ciclo_for                      shift and go to state 43
    ciclo_while                    shift and go to state 44
    condicion                      shift and go to state 45
    escribe                        shift and go to state 46
    leer                           shift and go to state 47
    variable                       shift and go to state 49

state 180

    (43) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle . RBRACE SEMICOLON

    RBRACE          shift and go to state 195


state 181

    (45) whileCycle -> empty .
    (36) estatutos -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 36 (estatutos -> empty .)
    ID              reduce using rule 36 (estatutos -> empty .)
    PORCADA         reduce using rule 36 (estatutos -> empty .)
    MIENTRAS        reduce using rule 36 (estatutos -> empty .)
    SI              reduce using rule 36 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 36 (estatutos -> empty .)
    LEER            reduce using rule 36 (estatutos -> empty .)
    RBRACE          reduce using rule 36 (estatutos -> empty .)

  ! RBRACE          [ reduce using rule 45 (whileCycle -> empty .) ]


state 182

    (50) condicionCycle -> estatutos . condicionCycle
    (50) condicionCycle -> . estatutos condicionCycle
    (51) condicionCycle -> . empty
    (29) estatutos -> . asignar
    (30) estatutos -> . llamada_func
    (31) estatutos -> . ciclo_for
    (32) estatutos -> . ciclo_while
    (33) estatutos -> . condicion
    (34) estatutos -> . escribe
    (35) estatutos -> . leer
    (36) estatutos -> . empty
    (82) empty -> .
    (37) asignar -> . variable ASSIGN exp SEMICOLON
    (72) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (46) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (43) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (49) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (77) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (42) leer -> . LEER variable SEMICOLON
    (38) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 82 (empty -> .)
    ID              shift and go to state 50
    PORCADA         shift and go to state 51
    MIENTRAS        shift and go to state 52
    SI              shift and go to state 53
    IMPRIMIR        shift and go to state 54
    LEER            shift and go to state 55

  ! ID              [ reduce using rule 82 (empty -> .) ]
  ! PORCADA         [ reduce using rule 82 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 82 (empty -> .) ]
  ! SI              [ reduce using rule 82 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 82 (empty -> .) ]
  ! LEER            [ reduce using rule 82 (empty -> .) ]

    estatutos                      shift and go to state 182
    condicionCycle                 shift and go to state 196
    empty                          shift and go to state 184
    asignar                        shift and go to state 41
    llamada_func                   shift and go to state 42
    ciclo_for                      shift and go to state 43
    ciclo_while                    shift and go to state 44
    condicion                      shift and go to state 45
    escribe                        shift and go to state 46
    leer                           shift and go to state 47
    variable                       shift and go to state 49

state 183

    (49) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle . RBRACE sinoCondicion SEMICOLON

    RBRACE          shift and go to state 197


state 184

    (51) condicionCycle -> empty .
    (36) estatutos -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 36 (estatutos -> empty .)
    ID              reduce using rule 36 (estatutos -> empty .)
    PORCADA         reduce using rule 36 (estatutos -> empty .)
    MIENTRAS        reduce using rule 36 (estatutos -> empty .)
    SI              reduce using rule 36 (estatutos -> empty .)
    IMPRIMIR        reduce using rule 36 (estatutos -> empty .)
    LEER            reduce using rule 36 (estatutos -> empty .)
    RBRACE          reduce using rule 36 (estatutos -> empty .)

  ! RBRACE          [ reduce using rule 51 (condicionCycle -> empty .) ]


state 185

    (24) decFuncCycle -> estatutos decFuncCycle .

    REGRESAR        reduce using rule 24 (decFuncCycle -> estatutos decFuncCycle .)


state 186

    (21) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR . variable SEMICOLON RBRACE SEMICOLON
    (38) variable -> . ID variable_aux

    ID              shift and go to state 83

    variable                       shift and go to state 198

state 187

    (13) arrayCycle -> COMMA ID LBRACKET CTEI . RBRACKET arrayCycle

    RBRACKET        shift and go to state 199


state 188

    (15) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle . SEMICOLON

    SEMICOLON       shift and go to state 200


state 189

    (16) matrixCycle -> COMMA . ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle

    ID              shift and go to state 201


state 190

    (17) matrixCycle -> empty .

    SEMICOLON       reduce using rule 17 (matrixCycle -> empty .)


state 191

    (47) forCycle -> estatutos forCycle .

    RBRACE          reduce using rule 47 (forCycle -> estatutos forCycle .)


state 192

    (46) ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 202


state 193

    (69) factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    TIMES           reduce using rule 69 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 69 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 69 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 69 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    EN              reduce using rule 69 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 69 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 69 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 69 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 69 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LBRACE          reduce using rule 69 (factor_variable -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 194

    (44) whileCycle -> estatutos whileCycle .

    RBRACE          reduce using rule 44 (whileCycle -> estatutos whileCycle .)


state 195

    (43) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 203


state 196

    (50) condicionCycle -> estatutos condicionCycle .

    RBRACE          reduce using rule 50 (condicionCycle -> estatutos condicionCycle .)


state 197

    (49) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE . sinoCondicion SEMICOLON
    (52) sinoCondicion -> . SINO LBRACE estatutos condicionCycle RBRACE
    (53) sinoCondicion -> . empty
    (82) empty -> .

    SINO            shift and go to state 205
    SEMICOLON       reduce using rule 82 (empty -> .)

    sinoCondicion                  shift and go to state 204
    empty                          shift and go to state 206

state 198

    (21) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable . SEMICOLON RBRACE SEMICOLON

    SEMICOLON       shift and go to state 207


state 199

    (13) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET . arrayCycle
    (13) arrayCycle -> . COMMA ID LBRACKET CTEI RBRACKET arrayCycle
    (14) arrayCycle -> . empty
    (82) empty -> .

    COMMA           shift and go to state 145
    SEMICOLON       reduce using rule 82 (empty -> .)

    arrayCycle                     shift and go to state 208
    empty                          shift and go to state 146

state 200

    (15) matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .

    INICIO          reduce using rule 15 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    FUNCION         reduce using rule 15 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    ID              reduce using rule 15 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    PORCADA         reduce using rule 15 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    MIENTRAS        reduce using rule 15 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    SI              reduce using rule 15 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    IMPRIMIR        reduce using rule 15 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    LEER            reduce using rule 15 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)
    REGRESAR        reduce using rule 15 (matrix -> TABLA type ARROW ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle SEMICOLON .)


state 201

    (16) matrixCycle -> COMMA ID . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle

    LBRACKET        shift and go to state 209


state 202

    (46) ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .

    RBRACE          reduce using rule 46 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    ID              reduce using rule 46 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    PORCADA         reduce using rule 46 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    MIENTRAS        reduce using rule 46 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    SI              reduce using rule 46 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    IMPRIMIR        reduce using rule 46 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    LEER            reduce using rule 46 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)
    REGRESAR        reduce using rule 46 (ciclo_for -> PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON .)


state 203

    (43) ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .

    RBRACE          reduce using rule 43 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    ID              reduce using rule 43 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    PORCADA         reduce using rule 43 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    MIENTRAS        reduce using rule 43 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    SI              reduce using rule 43 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    IMPRIMIR        reduce using rule 43 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    LEER            reduce using rule 43 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)
    REGRESAR        reduce using rule 43 (ciclo_while -> MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON .)


state 204

    (49) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion . SEMICOLON

    SEMICOLON       shift and go to state 210


state 205

    (52) sinoCondicion -> SINO . LBRACE estatutos condicionCycle RBRACE

    LBRACE          shift and go to state 211


state 206

    (53) sinoCondicion -> empty .

    SEMICOLON       reduce using rule 53 (sinoCondicion -> empty .)


state 207

    (21) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON . RBRACE SEMICOLON

    RBRACE          shift and go to state 212


state 208

    (13) arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET arrayCycle .

    SEMICOLON       reduce using rule 13 (arrayCycle -> COMMA ID LBRACKET CTEI RBRACKET arrayCycle .)


state 209

    (16) matrixCycle -> COMMA ID LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle

    CTEI            shift and go to state 213


state 210

    (49) condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .

    RBRACE          reduce using rule 49 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    ID              reduce using rule 49 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    PORCADA         reduce using rule 49 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    MIENTRAS        reduce using rule 49 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    SI              reduce using rule 49 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    IMPRIMIR        reduce using rule 49 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    LEER            reduce using rule 49 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)
    REGRESAR        reduce using rule 49 (condicion -> SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON .)


state 211

    (52) sinoCondicion -> SINO LBRACE . estatutos condicionCycle RBRACE
    (29) estatutos -> . asignar
    (30) estatutos -> . llamada_func
    (31) estatutos -> . ciclo_for
    (32) estatutos -> . ciclo_while
    (33) estatutos -> . condicion
    (34) estatutos -> . escribe
    (35) estatutos -> . leer
    (36) estatutos -> . empty
    (37) asignar -> . variable ASSIGN exp SEMICOLON
    (72) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (46) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (43) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (49) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (77) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (42) leer -> . LEER variable SEMICOLON
    (82) empty -> .
    (38) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    ID              shift and go to state 50
    PORCADA         shift and go to state 51
    MIENTRAS        shift and go to state 52
    SI              shift and go to state 53
    IMPRIMIR        shift and go to state 54
    LEER            shift and go to state 55
    RBRACE          reduce using rule 82 (empty -> .)

  ! ID              [ reduce using rule 82 (empty -> .) ]
  ! PORCADA         [ reduce using rule 82 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 82 (empty -> .) ]
  ! SI              [ reduce using rule 82 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 82 (empty -> .) ]
  ! LEER            [ reduce using rule 82 (empty -> .) ]

    estatutos                      shift and go to state 214
    asignar                        shift and go to state 41
    llamada_func                   shift and go to state 42
    ciclo_for                      shift and go to state 43
    ciclo_while                    shift and go to state 44
    condicion                      shift and go to state 45
    escribe                        shift and go to state 46
    leer                           shift and go to state 47
    empty                          shift and go to state 48
    variable                       shift and go to state 49

state 212

    (21) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 215


state 213

    (16) matrixCycle -> COMMA ID LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET matrixCycle

    RBRACKET        shift and go to state 216


state 214

    (52) sinoCondicion -> SINO LBRACE estatutos . condicionCycle RBRACE
    (50) condicionCycle -> . estatutos condicionCycle
    (51) condicionCycle -> . empty
    (29) estatutos -> . asignar
    (30) estatutos -> . llamada_func
    (31) estatutos -> . ciclo_for
    (32) estatutos -> . ciclo_while
    (33) estatutos -> . condicion
    (34) estatutos -> . escribe
    (35) estatutos -> . leer
    (36) estatutos -> . empty
    (82) empty -> .
    (37) asignar -> . variable ASSIGN exp SEMICOLON
    (72) llamada_func -> . ID LPAREN llamadaCYCLE RPAREN SEMICOLON
    (46) ciclo_for -> . PORCADA exp EN exp LBRACE estatutos forCycle RBRACE SEMICOLON
    (43) ciclo_while -> . MIENTRAS LPAREN exp RPAREN LBRACE estatutos whileCycle RBRACE SEMICOLON
    (49) condicion -> . SI LPAREN exp RPAREN LBRACE estatutos condicionCycle RBRACE sinoCondicion SEMICOLON
    (77) escribe -> . IMPRIMIR LPAREN escribe_aux RPAREN SEMICOLON
    (42) leer -> . LEER variable SEMICOLON
    (38) variable -> . ID variable_aux

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PORCADA resolved as shift
  ! shift/reduce conflict for MIENTRAS resolved as shift
  ! shift/reduce conflict for SI resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
  ! shift/reduce conflict for LEER resolved as shift
    RBRACE          reduce using rule 82 (empty -> .)
    ID              shift and go to state 50
    PORCADA         shift and go to state 51
    MIENTRAS        shift and go to state 52
    SI              shift and go to state 53
    IMPRIMIR        shift and go to state 54
    LEER            shift and go to state 55

  ! ID              [ reduce using rule 82 (empty -> .) ]
  ! PORCADA         [ reduce using rule 82 (empty -> .) ]
  ! MIENTRAS        [ reduce using rule 82 (empty -> .) ]
  ! SI              [ reduce using rule 82 (empty -> .) ]
  ! IMPRIMIR        [ reduce using rule 82 (empty -> .) ]
  ! LEER            [ reduce using rule 82 (empty -> .) ]

    estatutos                      shift and go to state 182
    condicionCycle                 shift and go to state 217
    empty                          shift and go to state 184
    asignar                        shift and go to state 41
    llamada_func                   shift and go to state 42
    ciclo_for                      shift and go to state 43
    ciclo_while                    shift and go to state 44
    condicion                      shift and go to state 45
    escribe                        shift and go to state 46
    leer                           shift and go to state 47
    variable                       shift and go to state 49

state 215

    (21) dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON .

    INICIO          reduce using rule 21 (dec_func -> FUNCION dec_func_return ID LPAREN parameter RPAREN LBRACE dec_var estatutos decFuncCycle REGRESAR variable SEMICOLON RBRACE SEMICOLON .)


state 216

    (16) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET matrixCycle

    LBRACKET        shift and go to state 218


state 217

    (52) sinoCondicion -> SINO LBRACE estatutos condicionCycle . RBRACE

    RBRACE          shift and go to state 219


state 218

    (16) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET matrixCycle

    CTEI            shift and go to state 220


state 219

    (52) sinoCondicion -> SINO LBRACE estatutos condicionCycle RBRACE .

    SEMICOLON       reduce using rule 52 (sinoCondicion -> SINO LBRACE estatutos condicionCycle RBRACE .)


state 220

    (16) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET matrixCycle

    RBRACKET        shift and go to state 221


state 221

    (16) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET . matrixCycle
    (16) matrixCycle -> . COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle
    (17) matrixCycle -> . empty
    (82) empty -> .

    COMMA           shift and go to state 189
    SEMICOLON       reduce using rule 82 (empty -> .)

    matrixCycle                    shift and go to state 222
    empty                          shift and go to state 190

state 222

    (16) matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle .

    SEMICOLON       reduce using rule 16 (matrixCycle -> COMMA ID LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET matrixCycle .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 142 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 142 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 142 resolved as shift
WARNING: shift/reduce conflict for SI in state 142 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 142 resolved as shift
WARNING: shift/reduce conflict for LEER in state 142 resolved as shift
WARNING: shift/reduce conflict for ID in state 151 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 151 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 151 resolved as shift
WARNING: shift/reduce conflict for SI in state 151 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 151 resolved as shift
WARNING: shift/reduce conflict for LEER in state 151 resolved as shift
WARNING: shift/reduce conflict for ID in state 153 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 153 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 153 resolved as shift
WARNING: shift/reduce conflict for SI in state 153 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 153 resolved as shift
WARNING: shift/reduce conflict for LEER in state 153 resolved as shift
WARNING: shift/reduce conflict for ID in state 154 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 154 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 154 resolved as shift
WARNING: shift/reduce conflict for SI in state 154 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 154 resolved as shift
WARNING: shift/reduce conflict for LEER in state 154 resolved as shift
WARNING: shift/reduce conflict for ID in state 157 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 157 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 157 resolved as shift
WARNING: shift/reduce conflict for SI in state 157 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 157 resolved as shift
WARNING: shift/reduce conflict for LEER in state 157 resolved as shift
WARNING: shift/reduce conflict for ID in state 164 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 164 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 164 resolved as shift
WARNING: shift/reduce conflict for SI in state 164 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 164 resolved as shift
WARNING: shift/reduce conflict for LEER in state 164 resolved as shift
WARNING: shift/reduce conflict for ID in state 166 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 166 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 166 resolved as shift
WARNING: shift/reduce conflict for SI in state 166 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 166 resolved as shift
WARNING: shift/reduce conflict for LEER in state 166 resolved as shift
WARNING: shift/reduce conflict for ID in state 167 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 167 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 167 resolved as shift
WARNING: shift/reduce conflict for SI in state 167 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 167 resolved as shift
WARNING: shift/reduce conflict for LEER in state 167 resolved as shift
WARNING: shift/reduce conflict for ID in state 168 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 168 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 168 resolved as shift
WARNING: shift/reduce conflict for SI in state 168 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 168 resolved as shift
WARNING: shift/reduce conflict for LEER in state 168 resolved as shift
WARNING: shift/reduce conflict for ID in state 175 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 175 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 175 resolved as shift
WARNING: shift/reduce conflict for SI in state 175 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 175 resolved as shift
WARNING: shift/reduce conflict for LEER in state 175 resolved as shift
WARNING: shift/reduce conflict for ID in state 179 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 179 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 179 resolved as shift
WARNING: shift/reduce conflict for SI in state 179 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 179 resolved as shift
WARNING: shift/reduce conflict for LEER in state 179 resolved as shift
WARNING: shift/reduce conflict for ID in state 182 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 182 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 182 resolved as shift
WARNING: shift/reduce conflict for SI in state 182 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 182 resolved as shift
WARNING: shift/reduce conflict for LEER in state 182 resolved as shift
WARNING: shift/reduce conflict for ID in state 211 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 211 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 211 resolved as shift
WARNING: shift/reduce conflict for SI in state 211 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 211 resolved as shift
WARNING: shift/reduce conflict for LEER in state 211 resolved as shift
WARNING: shift/reduce conflict for ID in state 214 resolved as shift
WARNING: shift/reduce conflict for PORCADA in state 214 resolved as shift
WARNING: shift/reduce conflict for MIENTRAS in state 214 resolved as shift
WARNING: shift/reduce conflict for SI in state 214 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 214 resolved as shift
WARNING: shift/reduce conflict for LEER in state 214 resolved as shift
WARNING: reduce/reduce conflict in state 170 resolved using rule (decFuncCycle -> empty)
WARNING: rejected rule (estatutos -> empty) in state 170
WARNING: reduce/reduce conflict in state 177 resolved using rule (estatutos -> empty)
WARNING: rejected rule (forCycle -> empty) in state 177
WARNING: reduce/reduce conflict in state 181 resolved using rule (estatutos -> empty)
WARNING: rejected rule (whileCycle -> empty) in state 181
WARNING: reduce/reduce conflict in state 184 resolved using rule (estatutos -> empty)
WARNING: rejected rule (condicionCycle -> empty) in state 184
WARNING: Rule (forCycle -> empty) is never reduced
WARNING: Rule (whileCycle -> empty) is never reduced
WARNING: Rule (condicionCycle -> empty) is never reduced
